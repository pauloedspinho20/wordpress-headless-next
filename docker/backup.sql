-- MariaDB dump 10.19  Distrib 10.11.6-MariaDB, for debian-linux-gnu (aarch64)
--
-- Host: db-headless    Database: wp_headless
-- ------------------------------------------------------
-- Server version	11.3.2-MariaDB-1:11.3.2+maria~ubu2204

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `wp_commentmeta`
--

DROP TABLE IF EXISTS `wp_commentmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT 0,
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext DEFAULT NULL,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_commentmeta`
--

LOCK TABLES `wp_commentmeta` WRITE;
/*!40000 ALTER TABLE `wp_commentmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_commentmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_comments`
--

DROP TABLE IF EXISTS `wp_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT 0,
  `comment_author` tinytext NOT NULL,
  `comment_author_email` varchar(100) NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT 0,
  `comment_approved` varchar(20) NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) NOT NULL DEFAULT '',
  `comment_type` varchar(20) NOT NULL DEFAULT 'comment',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT 0,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT 0,
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`),
  KEY `comment_author_email` (`comment_author_email`(10))
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_comments`
--

LOCK TABLES `wp_comments` WRITE;
/*!40000 ALTER TABLE `wp_comments` DISABLE KEYS */;
INSERT INTO `wp_comments` VALUES
(1,1,'A WordPress Commenter','wapuu@wordpress.example','https://wordpress.org/','','2024-04-10 23:22:40','2024-04-10 23:22:40','Hi, this is a comment.\nTo get started with moderating, editing, and deleting comments, please visit the Comments screen in the dashboard.\nCommenter avatars come from <a href=\"https://en.gravatar.com/\">Gravatar</a>.',0,'post-trashed','','comment',0,0);
/*!40000 ALTER TABLE `wp_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_links`
--

DROP TABLE IF EXISTS `wp_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) NOT NULL DEFAULT '',
  `link_name` varchar(255) NOT NULL DEFAULT '',
  `link_image` varchar(255) NOT NULL DEFAULT '',
  `link_target` varchar(25) NOT NULL DEFAULT '',
  `link_description` varchar(255) NOT NULL DEFAULT '',
  `link_visible` varchar(20) NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT 1,
  `link_rating` int(11) NOT NULL DEFAULT 0,
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) NOT NULL DEFAULT '',
  `link_notes` mediumtext NOT NULL,
  `link_rss` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_links`
--

LOCK TABLES `wp_links` WRITE;
/*!40000 ALTER TABLE `wp_links` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_options`
--

DROP TABLE IF EXISTS `wp_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(191) NOT NULL DEFAULT '',
  `option_value` longtext NOT NULL,
  `autoload` varchar(20) NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`),
  KEY `autoload` (`autoload`)
) ENGINE=InnoDB AUTO_INCREMENT=810 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_options`
--

LOCK TABLES `wp_options` WRITE;
/*!40000 ALTER TABLE `wp_options` DISABLE KEYS */;
INSERT INTO `wp_options` VALUES
(1,'siteurl','http://localhost:8080','yes'),
(2,'home','http://localhost:8080','yes'),
(3,'blogname','Bank Kong','yes'),
(4,'blogdescription','Wordpress &amp; Next.js','yes'),
(5,'users_can_register','1','yes'),
(6,'admin_email','postlight@example.com','yes'),
(7,'start_of_week','1','yes'),
(8,'use_balanceTags','0','yes'),
(9,'use_smilies','1','yes'),
(10,'require_name_email','1','yes'),
(11,'comments_notify','1','yes'),
(12,'posts_per_rss','10','yes'),
(13,'rss_use_excerpt','0','yes'),
(14,'mailserver_url','mail.example.com','yes'),
(15,'mailserver_login','login@example.com','yes'),
(16,'mailserver_pass','password','yes'),
(17,'mailserver_port','110','yes'),
(18,'default_category','1','yes'),
(19,'default_comment_status','open','yes'),
(20,'default_ping_status','open','yes'),
(21,'default_pingback_flag','1','yes'),
(22,'posts_per_page','10','yes'),
(23,'date_format','F j, Y','yes'),
(24,'time_format','g:i a','yes'),
(25,'links_updated_date_format','F j, Y g:i a','yes'),
(26,'comment_moderation','0','yes'),
(27,'moderation_notify','1','yes'),
(28,'permalink_structure','/posts/%postname%/','yes'),
(29,'rewrite_rules','a:111:{s:11:\"^wp-json/?$\";s:22:\"index.php?rest_route=/\";s:14:\"^wp-json/(.*)?\";s:33:\"index.php?rest_route=/$matches[1]\";s:21:\"^index.php/wp-json/?$\";s:22:\"index.php?rest_route=/\";s:24:\"^index.php/wp-json/(.*)?\";s:33:\"index.php?rest_route=/$matches[1]\";s:17:\"^wp-sitemap\\.xml$\";s:23:\"index.php?sitemap=index\";s:17:\"^wp-sitemap\\.xsl$\";s:36:\"index.php?sitemap-stylesheet=sitemap\";s:23:\"^wp-sitemap-index\\.xsl$\";s:34:\"index.php?sitemap-stylesheet=index\";s:48:\"^wp-sitemap-([a-z]+?)-([a-z\\d_-]+?)-(\\d+?)\\.xml$\";s:75:\"index.php?sitemap=$matches[1]&sitemap-subtype=$matches[2]&paged=$matches[3]\";s:34:\"^wp-sitemap-([a-z]+?)-(\\d+?)\\.xml$\";s:47:\"index.php?sitemap=$matches[1]&paged=$matches[2]\";s:10:\"graphql/?$\";s:22:\"index.php?graphql=true\";s:53:\"posts/category/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:48:\"posts/category/(.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:29:\"posts/category/(.+?)/embed/?$\";s:46:\"index.php?category_name=$matches[1]&embed=true\";s:41:\"posts/category/(.+?)/page/?([0-9]{1,})/?$\";s:53:\"index.php?category_name=$matches[1]&paged=$matches[2]\";s:23:\"posts/category/(.+?)/?$\";s:35:\"index.php?category_name=$matches[1]\";s:50:\"posts/tag/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:45:\"posts/tag/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:26:\"posts/tag/([^/]+)/embed/?$\";s:36:\"index.php?tag=$matches[1]&embed=true\";s:38:\"posts/tag/([^/]+)/page/?([0-9]{1,})/?$\";s:43:\"index.php?tag=$matches[1]&paged=$matches[2]\";s:20:\"posts/tag/([^/]+)/?$\";s:25:\"index.php?tag=$matches[1]\";s:51:\"posts/type/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:46:\"posts/type/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:27:\"posts/type/([^/]+)/embed/?$\";s:44:\"index.php?post_format=$matches[1]&embed=true\";s:39:\"posts/type/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?post_format=$matches[1]&paged=$matches[2]\";s:21:\"posts/type/([^/]+)/?$\";s:33:\"index.php?post_format=$matches[1]\";s:41:\"posts/expense/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:51:\"posts/expense/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:71:\"posts/expense/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:66:\"posts/expense/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:66:\"posts/expense/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:47:\"posts/expense/[^/]+/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:30:\"posts/expense/([^/]+)/embed/?$\";s:40:\"index.php?expense=$matches[1]&embed=true\";s:34:\"posts/expense/([^/]+)/trackback/?$\";s:34:\"index.php?expense=$matches[1]&tb=1\";s:42:\"posts/expense/([^/]+)/page/?([0-9]{1,})/?$\";s:47:\"index.php?expense=$matches[1]&paged=$matches[2]\";s:49:\"posts/expense/([^/]+)/comment-page-([0-9]{1,})/?$\";s:47:\"index.php?expense=$matches[1]&cpage=$matches[2]\";s:38:\"posts/expense/([^/]+)(?:/([0-9]+))?/?$\";s:46:\"index.php?expense=$matches[1]&page=$matches[2]\";s:30:\"posts/expense/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:40:\"posts/expense/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:60:\"posts/expense/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:55:\"posts/expense/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:55:\"posts/expense/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:36:\"posts/expense/[^/]+/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:12:\"robots\\.txt$\";s:18:\"index.php?robots=1\";s:13:\"favicon\\.ico$\";s:19:\"index.php?favicon=1\";s:48:\".*wp-(atom|rdf|rss|rss2|feed|commentsrss2)\\.php$\";s:18:\"index.php?feed=old\";s:20:\".*wp-app\\.php(/.*)?$\";s:19:\"index.php?error=403\";s:18:\".*wp-register.php$\";s:23:\"index.php?register=true\";s:32:\"feed/(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:27:\"(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:8:\"embed/?$\";s:21:\"index.php?&embed=true\";s:20:\"page/?([0-9]{1,})/?$\";s:28:\"index.php?&paged=$matches[1]\";s:41:\"comments/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:36:\"comments/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:17:\"comments/embed/?$\";s:21:\"index.php?&embed=true\";s:44:\"search/(.+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:39:\"search/(.+)/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:20:\"search/(.+)/embed/?$\";s:34:\"index.php?s=$matches[1]&embed=true\";s:32:\"search/(.+)/page/?([0-9]{1,})/?$\";s:41:\"index.php?s=$matches[1]&paged=$matches[2]\";s:14:\"search/(.+)/?$\";s:23:\"index.php?s=$matches[1]\";s:53:\"posts/author/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:48:\"posts/author/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:29:\"posts/author/([^/]+)/embed/?$\";s:44:\"index.php?author_name=$matches[1]&embed=true\";s:41:\"posts/author/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?author_name=$matches[1]&paged=$matches[2]\";s:23:\"posts/author/([^/]+)/?$\";s:33:\"index.php?author_name=$matches[1]\";s:75:\"posts/([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:70:\"posts/([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:51:\"posts/([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/embed/?$\";s:74:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&embed=true\";s:63:\"posts/([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&paged=$matches[4]\";s:45:\"posts/([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/?$\";s:63:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]\";s:62:\"posts/([0-9]{4})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:57:\"posts/([0-9]{4})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:38:\"posts/([0-9]{4})/([0-9]{1,2})/embed/?$\";s:58:\"index.php?year=$matches[1]&monthnum=$matches[2]&embed=true\";s:50:\"posts/([0-9]{4})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&paged=$matches[3]\";s:32:\"posts/([0-9]{4})/([0-9]{1,2})/?$\";s:47:\"index.php?year=$matches[1]&monthnum=$matches[2]\";s:49:\"posts/([0-9]{4})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:44:\"posts/([0-9]{4})/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:25:\"posts/([0-9]{4})/embed/?$\";s:37:\"index.php?year=$matches[1]&embed=true\";s:37:\"posts/([0-9]{4})/page/?([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&paged=$matches[2]\";s:19:\"posts/([0-9]{4})/?$\";s:26:\"index.php?year=$matches[1]\";s:27:\".?.+?/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:37:\".?.+?/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:57:\".?.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:33:\".?.+?/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:16:\"(.?.+?)/embed/?$\";s:41:\"index.php?pagename=$matches[1]&embed=true\";s:20:\"(.?.+?)/trackback/?$\";s:35:\"index.php?pagename=$matches[1]&tb=1\";s:40:\"(.?.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:35:\"(.?.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:28:\"(.?.+?)/page/?([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&paged=$matches[2]\";s:35:\"(.?.+?)/comment-page-([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&cpage=$matches[2]\";s:24:\"(.?.+?)(?:/([0-9]+))?/?$\";s:47:\"index.php?pagename=$matches[1]&page=$matches[2]\";s:33:\"posts/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:43:\"posts/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:63:\"posts/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:58:\"posts/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:58:\"posts/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:39:\"posts/[^/]+/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:22:\"posts/([^/]+)/embed/?$\";s:37:\"index.php?name=$matches[1]&embed=true\";s:26:\"posts/([^/]+)/trackback/?$\";s:31:\"index.php?name=$matches[1]&tb=1\";s:46:\"posts/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?name=$matches[1]&feed=$matches[2]\";s:41:\"posts/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?name=$matches[1]&feed=$matches[2]\";s:34:\"posts/([^/]+)/page/?([0-9]{1,})/?$\";s:44:\"index.php?name=$matches[1]&paged=$matches[2]\";s:41:\"posts/([^/]+)/comment-page-([0-9]{1,})/?$\";s:44:\"index.php?name=$matches[1]&cpage=$matches[2]\";s:30:\"posts/([^/]+)(?:/([0-9]+))?/?$\";s:43:\"index.php?name=$matches[1]&page=$matches[2]\";s:22:\"posts/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:32:\"posts/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:52:\"posts/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:47:\"posts/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:47:\"posts/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:28:\"posts/[^/]+/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";}','yes'),
(30,'hack_file','0','yes'),
(31,'blog_charset','UTF-8','yes'),
(32,'moderation_keys','','no'),
(33,'active_plugins','a:9:{i:0;s:31:\"acf-to-wp-api/acf-to-wp-api.php\";i:1;s:30:\"advanced-custom-fields/acf.php\";i:3;s:43:\"custom-post-type-ui/custom-post-type-ui.php\";i:4;s:47:\"jwt-authentication-for-wp-rest-api/jwt-auth.php\";i:5;s:41:\"wordpress-importer/wordpress-importer.php\";i:6;s:33:\"wp-graphql-acf/wp-graphql-acf.php\";i:7;s:69:\"wp-graphql-jwt-authentication-0.7.0/wp-graphql-jwt-authentication.php\";i:8;s:25:\"wp-graphql/wp-graphql.php\";i:9;s:45:\"wp-rest-api-v2-menus/wp-rest-api-v2-menus.php\";}','yes'),
(34,'category_base','','yes'),
(35,'ping_sites','http://rpc.pingomatic.com/','yes'),
(36,'comment_max_links','2','yes'),
(37,'gmt_offset','0','yes'),
(38,'default_email_category','1','yes'),
(39,'recently_edited','','no'),
(40,'template','twentytwentyfour','yes'),
(41,'stylesheet','twentytwentyfour','yes'),
(42,'comment_registration','0','yes'),
(43,'html_type','text/html','yes'),
(44,'use_trackback','0','yes'),
(45,'default_role','subscriber','yes'),
(46,'db_version','57155','yes'),
(47,'uploads_use_yearmonth_folders','1','yes'),
(48,'upload_path','','yes'),
(49,'blog_public','1','yes'),
(50,'default_link_category','0','yes'),
(51,'show_on_front','posts','yes'),
(52,'tag_base','','yes'),
(53,'show_avatars','1','yes'),
(54,'avatar_rating','G','yes'),
(55,'upload_url_path','','yes'),
(56,'thumbnail_size_w','150','yes'),
(57,'thumbnail_size_h','150','yes'),
(58,'thumbnail_crop','1','yes'),
(59,'medium_size_w','300','yes'),
(60,'medium_size_h','300','yes'),
(61,'avatar_default','mystery','yes'),
(62,'large_size_w','1024','yes'),
(63,'large_size_h','1024','yes'),
(64,'image_default_link_type','none','yes'),
(65,'image_default_size','','yes'),
(66,'image_default_align','','yes'),
(67,'close_comments_for_old_posts','0','yes'),
(68,'close_comments_days_old','14','yes'),
(69,'thread_comments','1','yes'),
(70,'thread_comments_depth','5','yes'),
(71,'page_comments','0','yes'),
(72,'comments_per_page','50','yes'),
(73,'default_comments_page','newest','yes'),
(74,'comment_order','asc','yes'),
(75,'sticky_posts','a:0:{}','yes'),
(76,'widget_categories','a:0:{}','yes'),
(77,'widget_text','a:0:{}','yes'),
(78,'widget_rss','a:0:{}','yes'),
(79,'uninstall_plugins','a:0:{}','no'),
(80,'timezone_string','','yes'),
(81,'page_for_posts','0','yes'),
(82,'page_on_front','0','yes'),
(83,'default_post_format','image','yes'),
(84,'link_manager_enabled','0','yes'),
(85,'finished_splitting_shared_terms','1','yes'),
(86,'site_icon','0','yes'),
(87,'medium_large_size_w','768','yes'),
(88,'medium_large_size_h','0','yes'),
(89,'wp_page_for_privacy_policy','3','yes'),
(90,'show_comments_cookies_opt_in','1','yes'),
(91,'admin_email_lifespan','1728343360','yes'),
(92,'disallowed_keys','','no'),
(93,'comment_previously_approved','1','yes'),
(94,'auto_plugin_theme_update_emails','a:0:{}','no'),
(95,'auto_update_core_dev','enabled','yes'),
(96,'auto_update_core_minor','enabled','yes'),
(97,'auto_update_core_major','enabled','yes'),
(98,'wp_force_deactivated_plugins','a:0:{}','yes'),
(99,'wp_attachment_pages_enabled','0','yes'),
(100,'initial_db_version','57155','yes'),
(101,'wp_user_roles','a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:61:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}','yes'),
(102,'fresh_site','0','yes'),
(103,'user_count','1','no'),
(104,'widget_block','a:6:{i:2;a:1:{s:7:\"content\";s:19:\"<!-- wp:search /-->\";}i:3;a:1:{s:7:\"content\";s:154:\"<!-- wp:group --><div class=\"wp-block-group\"><!-- wp:heading --><h2>Recent Posts</h2><!-- /wp:heading --><!-- wp:latest-posts /--></div><!-- /wp:group -->\";}i:4;a:1:{s:7:\"content\";s:227:\"<!-- wp:group --><div class=\"wp-block-group\"><!-- wp:heading --><h2>Recent Comments</h2><!-- /wp:heading --><!-- wp:latest-comments {\"displayAvatar\":false,\"displayDate\":false,\"displayExcerpt\":false} /--></div><!-- /wp:group -->\";}i:5;a:1:{s:7:\"content\";s:146:\"<!-- wp:group --><div class=\"wp-block-group\"><!-- wp:heading --><h2>Archives</h2><!-- /wp:heading --><!-- wp:archives /--></div><!-- /wp:group -->\";}i:6;a:1:{s:7:\"content\";s:150:\"<!-- wp:group --><div class=\"wp-block-group\"><!-- wp:heading --><h2>Categories</h2><!-- /wp:heading --><!-- wp:categories /--></div><!-- /wp:group -->\";}s:12:\"_multiwidget\";i:1;}','yes'),
(105,'sidebars_widgets','a:4:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:3:{i:0;s:7:\"block-2\";i:1;s:7:\"block-3\";i:2;s:7:\"block-4\";}s:9:\"sidebar-2\";a:2:{i:0;s:7:\"block-5\";i:1;s:7:\"block-6\";}s:13:\"array_version\";i:3;}','yes'),
(106,'cron','a:10:{i:1713902755;a:1:{s:34:\"wp_privacy_delete_old_export_files\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"hourly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:3600;}}}i:1713905276;a:1:{s:19:\"jwt_auth_share_data\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"weekly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:604800;}}}i:1713914560;a:1:{s:32:\"recovery_mode_clean_expired_keys\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1713914561;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1713914667;a:2:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}s:25:\"delete_expired_transients\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1713914668;a:1:{s:21:\"wp_update_user_counts\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1713914669;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1714000964;a:1:{s:30:\"wp_delete_temp_updater_backups\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"weekly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:604800;}}}i:1714087360;a:1:{s:30:\"wp_site_health_scheduled_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"weekly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:604800;}}}s:7:\"version\";i:2;}','yes'),
(107,'widget_pages','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),
(108,'widget_calendar','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),
(109,'widget_archives','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),
(110,'widget_media_audio','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),
(111,'widget_media_image','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),
(112,'widget_media_gallery','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),
(113,'widget_media_video','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),
(114,'widget_meta','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),
(115,'widget_search','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),
(116,'widget_recent-posts','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),
(117,'widget_recent-comments','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),
(118,'widget_tag_cloud','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),
(119,'widget_nav_menu','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),
(120,'widget_custom_html','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),
(121,'_transient_wp_core_block_css_files','a:2:{s:7:\"version\";s:5:\"6.5.2\";s:5:\"files\";a:500:{i:0;s:23:\"archives/editor-rtl.css\";i:1;s:27:\"archives/editor-rtl.min.css\";i:2;s:19:\"archives/editor.css\";i:3;s:23:\"archives/editor.min.css\";i:4;s:22:\"archives/style-rtl.css\";i:5;s:26:\"archives/style-rtl.min.css\";i:6;s:18:\"archives/style.css\";i:7;s:22:\"archives/style.min.css\";i:8;s:20:\"audio/editor-rtl.css\";i:9;s:24:\"audio/editor-rtl.min.css\";i:10;s:16:\"audio/editor.css\";i:11;s:20:\"audio/editor.min.css\";i:12;s:19:\"audio/style-rtl.css\";i:13;s:23:\"audio/style-rtl.min.css\";i:14;s:15:\"audio/style.css\";i:15;s:19:\"audio/style.min.css\";i:16;s:19:\"audio/theme-rtl.css\";i:17;s:23:\"audio/theme-rtl.min.css\";i:18;s:15:\"audio/theme.css\";i:19;s:19:\"audio/theme.min.css\";i:20;s:21:\"avatar/editor-rtl.css\";i:21;s:25:\"avatar/editor-rtl.min.css\";i:22;s:17:\"avatar/editor.css\";i:23;s:21:\"avatar/editor.min.css\";i:24;s:20:\"avatar/style-rtl.css\";i:25;s:24:\"avatar/style-rtl.min.css\";i:26;s:16:\"avatar/style.css\";i:27;s:20:\"avatar/style.min.css\";i:28;s:20:\"block/editor-rtl.css\";i:29;s:24:\"block/editor-rtl.min.css\";i:30;s:16:\"block/editor.css\";i:31;s:20:\"block/editor.min.css\";i:32;s:21:\"button/editor-rtl.css\";i:33;s:25:\"button/editor-rtl.min.css\";i:34;s:17:\"button/editor.css\";i:35;s:21:\"button/editor.min.css\";i:36;s:20:\"button/style-rtl.css\";i:37;s:24:\"button/style-rtl.min.css\";i:38;s:16:\"button/style.css\";i:39;s:20:\"button/style.min.css\";i:40;s:22:\"buttons/editor-rtl.css\";i:41;s:26:\"buttons/editor-rtl.min.css\";i:42;s:18:\"buttons/editor.css\";i:43;s:22:\"buttons/editor.min.css\";i:44;s:21:\"buttons/style-rtl.css\";i:45;s:25:\"buttons/style-rtl.min.css\";i:46;s:17:\"buttons/style.css\";i:47;s:21:\"buttons/style.min.css\";i:48;s:22:\"calendar/style-rtl.css\";i:49;s:26:\"calendar/style-rtl.min.css\";i:50;s:18:\"calendar/style.css\";i:51;s:22:\"calendar/style.min.css\";i:52;s:25:\"categories/editor-rtl.css\";i:53;s:29:\"categories/editor-rtl.min.css\";i:54;s:21:\"categories/editor.css\";i:55;s:25:\"categories/editor.min.css\";i:56;s:24:\"categories/style-rtl.css\";i:57;s:28:\"categories/style-rtl.min.css\";i:58;s:20:\"categories/style.css\";i:59;s:24:\"categories/style.min.css\";i:60;s:19:\"code/editor-rtl.css\";i:61;s:23:\"code/editor-rtl.min.css\";i:62;s:15:\"code/editor.css\";i:63;s:19:\"code/editor.min.css\";i:64;s:18:\"code/style-rtl.css\";i:65;s:22:\"code/style-rtl.min.css\";i:66;s:14:\"code/style.css\";i:67;s:18:\"code/style.min.css\";i:68;s:18:\"code/theme-rtl.css\";i:69;s:22:\"code/theme-rtl.min.css\";i:70;s:14:\"code/theme.css\";i:71;s:18:\"code/theme.min.css\";i:72;s:22:\"columns/editor-rtl.css\";i:73;s:26:\"columns/editor-rtl.min.css\";i:74;s:18:\"columns/editor.css\";i:75;s:22:\"columns/editor.min.css\";i:76;s:21:\"columns/style-rtl.css\";i:77;s:25:\"columns/style-rtl.min.css\";i:78;s:17:\"columns/style.css\";i:79;s:21:\"columns/style.min.css\";i:80;s:29:\"comment-content/style-rtl.css\";i:81;s:33:\"comment-content/style-rtl.min.css\";i:82;s:25:\"comment-content/style.css\";i:83;s:29:\"comment-content/style.min.css\";i:84;s:30:\"comment-template/style-rtl.css\";i:85;s:34:\"comment-template/style-rtl.min.css\";i:86;s:26:\"comment-template/style.css\";i:87;s:30:\"comment-template/style.min.css\";i:88;s:42:\"comments-pagination-numbers/editor-rtl.css\";i:89;s:46:\"comments-pagination-numbers/editor-rtl.min.css\";i:90;s:38:\"comments-pagination-numbers/editor.css\";i:91;s:42:\"comments-pagination-numbers/editor.min.css\";i:92;s:34:\"comments-pagination/editor-rtl.css\";i:93;s:38:\"comments-pagination/editor-rtl.min.css\";i:94;s:30:\"comments-pagination/editor.css\";i:95;s:34:\"comments-pagination/editor.min.css\";i:96;s:33:\"comments-pagination/style-rtl.css\";i:97;s:37:\"comments-pagination/style-rtl.min.css\";i:98;s:29:\"comments-pagination/style.css\";i:99;s:33:\"comments-pagination/style.min.css\";i:100;s:29:\"comments-title/editor-rtl.css\";i:101;s:33:\"comments-title/editor-rtl.min.css\";i:102;s:25:\"comments-title/editor.css\";i:103;s:29:\"comments-title/editor.min.css\";i:104;s:23:\"comments/editor-rtl.css\";i:105;s:27:\"comments/editor-rtl.min.css\";i:106;s:19:\"comments/editor.css\";i:107;s:23:\"comments/editor.min.css\";i:108;s:22:\"comments/style-rtl.css\";i:109;s:26:\"comments/style-rtl.min.css\";i:110;s:18:\"comments/style.css\";i:111;s:22:\"comments/style.min.css\";i:112;s:20:\"cover/editor-rtl.css\";i:113;s:24:\"cover/editor-rtl.min.css\";i:114;s:16:\"cover/editor.css\";i:115;s:20:\"cover/editor.min.css\";i:116;s:19:\"cover/style-rtl.css\";i:117;s:23:\"cover/style-rtl.min.css\";i:118;s:15:\"cover/style.css\";i:119;s:19:\"cover/style.min.css\";i:120;s:22:\"details/editor-rtl.css\";i:121;s:26:\"details/editor-rtl.min.css\";i:122;s:18:\"details/editor.css\";i:123;s:22:\"details/editor.min.css\";i:124;s:21:\"details/style-rtl.css\";i:125;s:25:\"details/style-rtl.min.css\";i:126;s:17:\"details/style.css\";i:127;s:21:\"details/style.min.css\";i:128;s:20:\"embed/editor-rtl.css\";i:129;s:24:\"embed/editor-rtl.min.css\";i:130;s:16:\"embed/editor.css\";i:131;s:20:\"embed/editor.min.css\";i:132;s:19:\"embed/style-rtl.css\";i:133;s:23:\"embed/style-rtl.min.css\";i:134;s:15:\"embed/style.css\";i:135;s:19:\"embed/style.min.css\";i:136;s:19:\"embed/theme-rtl.css\";i:137;s:23:\"embed/theme-rtl.min.css\";i:138;s:15:\"embed/theme.css\";i:139;s:19:\"embed/theme.min.css\";i:140;s:19:\"file/editor-rtl.css\";i:141;s:23:\"file/editor-rtl.min.css\";i:142;s:15:\"file/editor.css\";i:143;s:19:\"file/editor.min.css\";i:144;s:18:\"file/style-rtl.css\";i:145;s:22:\"file/style-rtl.min.css\";i:146;s:14:\"file/style.css\";i:147;s:18:\"file/style.min.css\";i:148;s:23:\"footnotes/style-rtl.css\";i:149;s:27:\"footnotes/style-rtl.min.css\";i:150;s:19:\"footnotes/style.css\";i:151;s:23:\"footnotes/style.min.css\";i:152;s:23:\"freeform/editor-rtl.css\";i:153;s:27:\"freeform/editor-rtl.min.css\";i:154;s:19:\"freeform/editor.css\";i:155;s:23:\"freeform/editor.min.css\";i:156;s:22:\"gallery/editor-rtl.css\";i:157;s:26:\"gallery/editor-rtl.min.css\";i:158;s:18:\"gallery/editor.css\";i:159;s:22:\"gallery/editor.min.css\";i:160;s:21:\"gallery/style-rtl.css\";i:161;s:25:\"gallery/style-rtl.min.css\";i:162;s:17:\"gallery/style.css\";i:163;s:21:\"gallery/style.min.css\";i:164;s:21:\"gallery/theme-rtl.css\";i:165;s:25:\"gallery/theme-rtl.min.css\";i:166;s:17:\"gallery/theme.css\";i:167;s:21:\"gallery/theme.min.css\";i:168;s:20:\"group/editor-rtl.css\";i:169;s:24:\"group/editor-rtl.min.css\";i:170;s:16:\"group/editor.css\";i:171;s:20:\"group/editor.min.css\";i:172;s:19:\"group/style-rtl.css\";i:173;s:23:\"group/style-rtl.min.css\";i:174;s:15:\"group/style.css\";i:175;s:19:\"group/style.min.css\";i:176;s:19:\"group/theme-rtl.css\";i:177;s:23:\"group/theme-rtl.min.css\";i:178;s:15:\"group/theme.css\";i:179;s:19:\"group/theme.min.css\";i:180;s:21:\"heading/style-rtl.css\";i:181;s:25:\"heading/style-rtl.min.css\";i:182;s:17:\"heading/style.css\";i:183;s:21:\"heading/style.min.css\";i:184;s:19:\"html/editor-rtl.css\";i:185;s:23:\"html/editor-rtl.min.css\";i:186;s:15:\"html/editor.css\";i:187;s:19:\"html/editor.min.css\";i:188;s:20:\"image/editor-rtl.css\";i:189;s:24:\"image/editor-rtl.min.css\";i:190;s:16:\"image/editor.css\";i:191;s:20:\"image/editor.min.css\";i:192;s:19:\"image/style-rtl.css\";i:193;s:23:\"image/style-rtl.min.css\";i:194;s:15:\"image/style.css\";i:195;s:19:\"image/style.min.css\";i:196;s:19:\"image/theme-rtl.css\";i:197;s:23:\"image/theme-rtl.min.css\";i:198;s:15:\"image/theme.css\";i:199;s:19:\"image/theme.min.css\";i:200;s:29:\"latest-comments/style-rtl.css\";i:201;s:33:\"latest-comments/style-rtl.min.css\";i:202;s:25:\"latest-comments/style.css\";i:203;s:29:\"latest-comments/style.min.css\";i:204;s:27:\"latest-posts/editor-rtl.css\";i:205;s:31:\"latest-posts/editor-rtl.min.css\";i:206;s:23:\"latest-posts/editor.css\";i:207;s:27:\"latest-posts/editor.min.css\";i:208;s:26:\"latest-posts/style-rtl.css\";i:209;s:30:\"latest-posts/style-rtl.min.css\";i:210;s:22:\"latest-posts/style.css\";i:211;s:26:\"latest-posts/style.min.css\";i:212;s:18:\"list/style-rtl.css\";i:213;s:22:\"list/style-rtl.min.css\";i:214;s:14:\"list/style.css\";i:215;s:18:\"list/style.min.css\";i:216;s:25:\"media-text/editor-rtl.css\";i:217;s:29:\"media-text/editor-rtl.min.css\";i:218;s:21:\"media-text/editor.css\";i:219;s:25:\"media-text/editor.min.css\";i:220;s:24:\"media-text/style-rtl.css\";i:221;s:28:\"media-text/style-rtl.min.css\";i:222;s:20:\"media-text/style.css\";i:223;s:24:\"media-text/style.min.css\";i:224;s:19:\"more/editor-rtl.css\";i:225;s:23:\"more/editor-rtl.min.css\";i:226;s:15:\"more/editor.css\";i:227;s:19:\"more/editor.min.css\";i:228;s:30:\"navigation-link/editor-rtl.css\";i:229;s:34:\"navigation-link/editor-rtl.min.css\";i:230;s:26:\"navigation-link/editor.css\";i:231;s:30:\"navigation-link/editor.min.css\";i:232;s:29:\"navigation-link/style-rtl.css\";i:233;s:33:\"navigation-link/style-rtl.min.css\";i:234;s:25:\"navigation-link/style.css\";i:235;s:29:\"navigation-link/style.min.css\";i:236;s:33:\"navigation-submenu/editor-rtl.css\";i:237;s:37:\"navigation-submenu/editor-rtl.min.css\";i:238;s:29:\"navigation-submenu/editor.css\";i:239;s:33:\"navigation-submenu/editor.min.css\";i:240;s:25:\"navigation/editor-rtl.css\";i:241;s:29:\"navigation/editor-rtl.min.css\";i:242;s:21:\"navigation/editor.css\";i:243;s:25:\"navigation/editor.min.css\";i:244;s:24:\"navigation/style-rtl.css\";i:245;s:28:\"navigation/style-rtl.min.css\";i:246;s:20:\"navigation/style.css\";i:247;s:24:\"navigation/style.min.css\";i:248;s:23:\"nextpage/editor-rtl.css\";i:249;s:27:\"nextpage/editor-rtl.min.css\";i:250;s:19:\"nextpage/editor.css\";i:251;s:23:\"nextpage/editor.min.css\";i:252;s:24:\"page-list/editor-rtl.css\";i:253;s:28:\"page-list/editor-rtl.min.css\";i:254;s:20:\"page-list/editor.css\";i:255;s:24:\"page-list/editor.min.css\";i:256;s:23:\"page-list/style-rtl.css\";i:257;s:27:\"page-list/style-rtl.min.css\";i:258;s:19:\"page-list/style.css\";i:259;s:23:\"page-list/style.min.css\";i:260;s:24:\"paragraph/editor-rtl.css\";i:261;s:28:\"paragraph/editor-rtl.min.css\";i:262;s:20:\"paragraph/editor.css\";i:263;s:24:\"paragraph/editor.min.css\";i:264;s:23:\"paragraph/style-rtl.css\";i:265;s:27:\"paragraph/style-rtl.min.css\";i:266;s:19:\"paragraph/style.css\";i:267;s:23:\"paragraph/style.min.css\";i:268;s:25:\"post-author/style-rtl.css\";i:269;s:29:\"post-author/style-rtl.min.css\";i:270;s:21:\"post-author/style.css\";i:271;s:25:\"post-author/style.min.css\";i:272;s:33:\"post-comments-form/editor-rtl.css\";i:273;s:37:\"post-comments-form/editor-rtl.min.css\";i:274;s:29:\"post-comments-form/editor.css\";i:275;s:33:\"post-comments-form/editor.min.css\";i:276;s:32:\"post-comments-form/style-rtl.css\";i:277;s:36:\"post-comments-form/style-rtl.min.css\";i:278;s:28:\"post-comments-form/style.css\";i:279;s:32:\"post-comments-form/style.min.css\";i:280;s:27:\"post-content/editor-rtl.css\";i:281;s:31:\"post-content/editor-rtl.min.css\";i:282;s:23:\"post-content/editor.css\";i:283;s:27:\"post-content/editor.min.css\";i:284;s:23:\"post-date/style-rtl.css\";i:285;s:27:\"post-date/style-rtl.min.css\";i:286;s:19:\"post-date/style.css\";i:287;s:23:\"post-date/style.min.css\";i:288;s:27:\"post-excerpt/editor-rtl.css\";i:289;s:31:\"post-excerpt/editor-rtl.min.css\";i:290;s:23:\"post-excerpt/editor.css\";i:291;s:27:\"post-excerpt/editor.min.css\";i:292;s:26:\"post-excerpt/style-rtl.css\";i:293;s:30:\"post-excerpt/style-rtl.min.css\";i:294;s:22:\"post-excerpt/style.css\";i:295;s:26:\"post-excerpt/style.min.css\";i:296;s:34:\"post-featured-image/editor-rtl.css\";i:297;s:38:\"post-featured-image/editor-rtl.min.css\";i:298;s:30:\"post-featured-image/editor.css\";i:299;s:34:\"post-featured-image/editor.min.css\";i:300;s:33:\"post-featured-image/style-rtl.css\";i:301;s:37:\"post-featured-image/style-rtl.min.css\";i:302;s:29:\"post-featured-image/style.css\";i:303;s:33:\"post-featured-image/style.min.css\";i:304;s:34:\"post-navigation-link/style-rtl.css\";i:305;s:38:\"post-navigation-link/style-rtl.min.css\";i:306;s:30:\"post-navigation-link/style.css\";i:307;s:34:\"post-navigation-link/style.min.css\";i:308;s:28:\"post-template/editor-rtl.css\";i:309;s:32:\"post-template/editor-rtl.min.css\";i:310;s:24:\"post-template/editor.css\";i:311;s:28:\"post-template/editor.min.css\";i:312;s:27:\"post-template/style-rtl.css\";i:313;s:31:\"post-template/style-rtl.min.css\";i:314;s:23:\"post-template/style.css\";i:315;s:27:\"post-template/style.min.css\";i:316;s:24:\"post-terms/style-rtl.css\";i:317;s:28:\"post-terms/style-rtl.min.css\";i:318;s:20:\"post-terms/style.css\";i:319;s:24:\"post-terms/style.min.css\";i:320;s:24:\"post-title/style-rtl.css\";i:321;s:28:\"post-title/style-rtl.min.css\";i:322;s:20:\"post-title/style.css\";i:323;s:24:\"post-title/style.min.css\";i:324;s:26:\"preformatted/style-rtl.css\";i:325;s:30:\"preformatted/style-rtl.min.css\";i:326;s:22:\"preformatted/style.css\";i:327;s:26:\"preformatted/style.min.css\";i:328;s:24:\"pullquote/editor-rtl.css\";i:329;s:28:\"pullquote/editor-rtl.min.css\";i:330;s:20:\"pullquote/editor.css\";i:331;s:24:\"pullquote/editor.min.css\";i:332;s:23:\"pullquote/style-rtl.css\";i:333;s:27:\"pullquote/style-rtl.min.css\";i:334;s:19:\"pullquote/style.css\";i:335;s:23:\"pullquote/style.min.css\";i:336;s:23:\"pullquote/theme-rtl.css\";i:337;s:27:\"pullquote/theme-rtl.min.css\";i:338;s:19:\"pullquote/theme.css\";i:339;s:23:\"pullquote/theme.min.css\";i:340;s:39:\"query-pagination-numbers/editor-rtl.css\";i:341;s:43:\"query-pagination-numbers/editor-rtl.min.css\";i:342;s:35:\"query-pagination-numbers/editor.css\";i:343;s:39:\"query-pagination-numbers/editor.min.css\";i:344;s:31:\"query-pagination/editor-rtl.css\";i:345;s:35:\"query-pagination/editor-rtl.min.css\";i:346;s:27:\"query-pagination/editor.css\";i:347;s:31:\"query-pagination/editor.min.css\";i:348;s:30:\"query-pagination/style-rtl.css\";i:349;s:34:\"query-pagination/style-rtl.min.css\";i:350;s:26:\"query-pagination/style.css\";i:351;s:30:\"query-pagination/style.min.css\";i:352;s:25:\"query-title/style-rtl.css\";i:353;s:29:\"query-title/style-rtl.min.css\";i:354;s:21:\"query-title/style.css\";i:355;s:25:\"query-title/style.min.css\";i:356;s:20:\"query/editor-rtl.css\";i:357;s:24:\"query/editor-rtl.min.css\";i:358;s:16:\"query/editor.css\";i:359;s:20:\"query/editor.min.css\";i:360;s:19:\"quote/style-rtl.css\";i:361;s:23:\"quote/style-rtl.min.css\";i:362;s:15:\"quote/style.css\";i:363;s:19:\"quote/style.min.css\";i:364;s:19:\"quote/theme-rtl.css\";i:365;s:23:\"quote/theme-rtl.min.css\";i:366;s:15:\"quote/theme.css\";i:367;s:19:\"quote/theme.min.css\";i:368;s:23:\"read-more/style-rtl.css\";i:369;s:27:\"read-more/style-rtl.min.css\";i:370;s:19:\"read-more/style.css\";i:371;s:23:\"read-more/style.min.css\";i:372;s:18:\"rss/editor-rtl.css\";i:373;s:22:\"rss/editor-rtl.min.css\";i:374;s:14:\"rss/editor.css\";i:375;s:18:\"rss/editor.min.css\";i:376;s:17:\"rss/style-rtl.css\";i:377;s:21:\"rss/style-rtl.min.css\";i:378;s:13:\"rss/style.css\";i:379;s:17:\"rss/style.min.css\";i:380;s:21:\"search/editor-rtl.css\";i:381;s:25:\"search/editor-rtl.min.css\";i:382;s:17:\"search/editor.css\";i:383;s:21:\"search/editor.min.css\";i:384;s:20:\"search/style-rtl.css\";i:385;s:24:\"search/style-rtl.min.css\";i:386;s:16:\"search/style.css\";i:387;s:20:\"search/style.min.css\";i:388;s:20:\"search/theme-rtl.css\";i:389;s:24:\"search/theme-rtl.min.css\";i:390;s:16:\"search/theme.css\";i:391;s:20:\"search/theme.min.css\";i:392;s:24:\"separator/editor-rtl.css\";i:393;s:28:\"separator/editor-rtl.min.css\";i:394;s:20:\"separator/editor.css\";i:395;s:24:\"separator/editor.min.css\";i:396;s:23:\"separator/style-rtl.css\";i:397;s:27:\"separator/style-rtl.min.css\";i:398;s:19:\"separator/style.css\";i:399;s:23:\"separator/style.min.css\";i:400;s:23:\"separator/theme-rtl.css\";i:401;s:27:\"separator/theme-rtl.min.css\";i:402;s:19:\"separator/theme.css\";i:403;s:23:\"separator/theme.min.css\";i:404;s:24:\"shortcode/editor-rtl.css\";i:405;s:28:\"shortcode/editor-rtl.min.css\";i:406;s:20:\"shortcode/editor.css\";i:407;s:24:\"shortcode/editor.min.css\";i:408;s:24:\"site-logo/editor-rtl.css\";i:409;s:28:\"site-logo/editor-rtl.min.css\";i:410;s:20:\"site-logo/editor.css\";i:411;s:24:\"site-logo/editor.min.css\";i:412;s:23:\"site-logo/style-rtl.css\";i:413;s:27:\"site-logo/style-rtl.min.css\";i:414;s:19:\"site-logo/style.css\";i:415;s:23:\"site-logo/style.min.css\";i:416;s:27:\"site-tagline/editor-rtl.css\";i:417;s:31:\"site-tagline/editor-rtl.min.css\";i:418;s:23:\"site-tagline/editor.css\";i:419;s:27:\"site-tagline/editor.min.css\";i:420;s:25:\"site-title/editor-rtl.css\";i:421;s:29:\"site-title/editor-rtl.min.css\";i:422;s:21:\"site-title/editor.css\";i:423;s:25:\"site-title/editor.min.css\";i:424;s:24:\"site-title/style-rtl.css\";i:425;s:28:\"site-title/style-rtl.min.css\";i:426;s:20:\"site-title/style.css\";i:427;s:24:\"site-title/style.min.css\";i:428;s:26:\"social-link/editor-rtl.css\";i:429;s:30:\"social-link/editor-rtl.min.css\";i:430;s:22:\"social-link/editor.css\";i:431;s:26:\"social-link/editor.min.css\";i:432;s:27:\"social-links/editor-rtl.css\";i:433;s:31:\"social-links/editor-rtl.min.css\";i:434;s:23:\"social-links/editor.css\";i:435;s:27:\"social-links/editor.min.css\";i:436;s:26:\"social-links/style-rtl.css\";i:437;s:30:\"social-links/style-rtl.min.css\";i:438;s:22:\"social-links/style.css\";i:439;s:26:\"social-links/style.min.css\";i:440;s:21:\"spacer/editor-rtl.css\";i:441;s:25:\"spacer/editor-rtl.min.css\";i:442;s:17:\"spacer/editor.css\";i:443;s:21:\"spacer/editor.min.css\";i:444;s:20:\"spacer/style-rtl.css\";i:445;s:24:\"spacer/style-rtl.min.css\";i:446;s:16:\"spacer/style.css\";i:447;s:20:\"spacer/style.min.css\";i:448;s:20:\"table/editor-rtl.css\";i:449;s:24:\"table/editor-rtl.min.css\";i:450;s:16:\"table/editor.css\";i:451;s:20:\"table/editor.min.css\";i:452;s:19:\"table/style-rtl.css\";i:453;s:23:\"table/style-rtl.min.css\";i:454;s:15:\"table/style.css\";i:455;s:19:\"table/style.min.css\";i:456;s:19:\"table/theme-rtl.css\";i:457;s:23:\"table/theme-rtl.min.css\";i:458;s:15:\"table/theme.css\";i:459;s:19:\"table/theme.min.css\";i:460;s:23:\"tag-cloud/style-rtl.css\";i:461;s:27:\"tag-cloud/style-rtl.min.css\";i:462;s:19:\"tag-cloud/style.css\";i:463;s:23:\"tag-cloud/style.min.css\";i:464;s:28:\"template-part/editor-rtl.css\";i:465;s:32:\"template-part/editor-rtl.min.css\";i:466;s:24:\"template-part/editor.css\";i:467;s:28:\"template-part/editor.min.css\";i:468;s:27:\"template-part/theme-rtl.css\";i:469;s:31:\"template-part/theme-rtl.min.css\";i:470;s:23:\"template-part/theme.css\";i:471;s:27:\"template-part/theme.min.css\";i:472;s:30:\"term-description/style-rtl.css\";i:473;s:34:\"term-description/style-rtl.min.css\";i:474;s:26:\"term-description/style.css\";i:475;s:30:\"term-description/style.min.css\";i:476;s:27:\"text-columns/editor-rtl.css\";i:477;s:31:\"text-columns/editor-rtl.min.css\";i:478;s:23:\"text-columns/editor.css\";i:479;s:27:\"text-columns/editor.min.css\";i:480;s:26:\"text-columns/style-rtl.css\";i:481;s:30:\"text-columns/style-rtl.min.css\";i:482;s:22:\"text-columns/style.css\";i:483;s:26:\"text-columns/style.min.css\";i:484;s:19:\"verse/style-rtl.css\";i:485;s:23:\"verse/style-rtl.min.css\";i:486;s:15:\"verse/style.css\";i:487;s:19:\"verse/style.min.css\";i:488;s:20:\"video/editor-rtl.css\";i:489;s:24:\"video/editor-rtl.min.css\";i:490;s:16:\"video/editor.css\";i:491;s:20:\"video/editor.min.css\";i:492;s:19:\"video/style-rtl.css\";i:493;s:23:\"video/style-rtl.min.css\";i:494;s:15:\"video/style.css\";i:495;s:19:\"video/style.min.css\";i:496;s:19:\"video/theme-rtl.css\";i:497;s:23:\"video/theme-rtl.min.css\";i:498;s:15:\"video/theme.css\";i:499;s:19:\"video/theme.min.css\";}}','yes'),
(125,'theme_mods_twentytwentyfour','a:4:{s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1713662122;s:4:\"data\";a:3:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:3:{i:0;s:7:\"block-2\";i:1;s:7:\"block-3\";i:2;s:7:\"block-4\";}s:9:\"sidebar-2\";a:2:{i:0;s:7:\"block-5\";i:1;s:7:\"block-6\";}}}s:19:\"wp_classic_sidebars\";a:0:{}s:18:\"nav_menu_locations\";a:0:{}s:18:\"custom_css_post_id\";i:-1;}','yes'),
(126,'current_theme','Twenty Twenty-Four','yes'),
(127,'theme_switched','','yes'),
(128,'theme_mods_postlight-headless-wp','a:2:{s:18:\"nav_menu_locations\";a:0:{}s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1713662209;s:4:\"data\";a:1:{s:19:\"wp_inactive_widgets\";a:5:{i:0;s:7:\"block-2\";i:1;s:7:\"block-3\";i:2;s:7:\"block-4\";i:3;s:7:\"block-5\";i:4;s:7:\"block-6\";}}}}','no'),
(130,'_site_transient_update_core','O:8:\"stdClass\":4:{s:7:\"updates\";a:1:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:6:\"latest\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-6.5.2.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-6.5.2.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-6.5.2-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-6.5.2-new-bundled.zip\";s:7:\"partial\";s:0:\"\";s:8:\"rollback\";s:0:\"\";}s:7:\"current\";s:5:\"6.5.2\";s:7:\"version\";s:5:\"6.5.2\";s:11:\"php_version\";s:5:\"7.0.0\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"6.4\";s:15:\"partial_version\";s:0:\"\";}}s:12:\"last_checked\";i:1713875378;s:15:\"version_checked\";s:5:\"6.5.2\";s:12:\"translations\";a:0:{}}','no'),
(132,'_site_transient_update_themes','O:8:\"stdClass\":5:{s:12:\"last_checked\";i:1713875379;s:7:\"checked\";a:3:{s:21:\"postlight-headless-wp\";s:0:\"\";s:16:\"twentytwentyfour\";s:3:\"1.1\";s:17:\"twentytwentythree\";s:3:\"1.4\";}s:8:\"response\";a:0:{}s:9:\"no_update\";a:2:{s:16:\"twentytwentyfour\";a:6:{s:5:\"theme\";s:16:\"twentytwentyfour\";s:11:\"new_version\";s:3:\"1.1\";s:3:\"url\";s:46:\"https://wordpress.org/themes/twentytwentyfour/\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/theme/twentytwentyfour.1.1.zip\";s:8:\"requires\";s:3:\"6.4\";s:12:\"requires_php\";s:3:\"7.0\";}s:17:\"twentytwentythree\";a:6:{s:5:\"theme\";s:17:\"twentytwentythree\";s:11:\"new_version\";s:3:\"1.4\";s:3:\"url\";s:47:\"https://wordpress.org/themes/twentytwentythree/\";s:7:\"package\";s:63:\"https://downloads.wordpress.org/theme/twentytwentythree.1.4.zip\";s:8:\"requires\";s:3:\"6.1\";s:12:\"requires_php\";s:3:\"5.6\";}}s:12:\"translations\";a:0:{}}','no'),
(135,'acf_first_activated_version','6.2.9','yes'),
(148,'wp_graphql_version','1.23.0','yes'),
(154,'wpmdb_settings','a:12:{s:3:\"key\";s:40:\"9IbGKyJ1um5idWn+2KNB2RsqNjg9n2y1ed/U5M7D\";s:10:\"allow_pull\";b:0;s:10:\"allow_push\";b:0;s:8:\"profiles\";a:0:{}s:7:\"licence\";s:0:\"\";s:10:\"verify_ssl\";b:0;s:17:\"whitelist_plugins\";a:0:{}s:11:\"max_request\";i:1048576;s:22:\"delay_between_requests\";i:0;s:18:\"prog_tables_hidden\";b:1;s:21:\"pause_before_finalize\";b:0;s:14:\"allow_tracking\";N;}','no'),
(156,'wp_calendar_block_has_published_posts','1','yes'),
(158,'recovery_keys','a:0:{}','yes'),
(162,'acf_version','6.2.9','yes'),
(163,'wpmdb_schema_version','2','no'),
(164,'graphql_general_settings','','yes'),
(169,'jwt_auth_admin_notice','1','yes'),
(172,'can_compress_scripts','0','yes'),
(187,'finished_updating_comment_type','1','yes'),
(190,'WPLANG','','yes'),
(191,'new_admin_email','postlight@example.com','yes'),
(194,'cptui_post_types','a:1:{s:7:\"expense\";a:37:{s:4:\"name\";s:7:\"expense\";s:5:\"label\";s:8:\"Expenses\";s:14:\"singular_label\";s:7:\"Expense\";s:11:\"description\";s:0:\"\";s:6:\"public\";s:4:\"true\";s:18:\"publicly_queryable\";s:4:\"true\";s:7:\"show_ui\";s:4:\"true\";s:17:\"show_in_nav_menus\";s:4:\"true\";s:16:\"delete_with_user\";s:5:\"false\";s:12:\"show_in_rest\";s:4:\"true\";s:9:\"rest_base\";s:0:\"\";s:21:\"rest_controller_class\";s:0:\"\";s:14:\"rest_namespace\";s:0:\"\";s:11:\"has_archive\";s:5:\"false\";s:18:\"has_archive_string\";s:0:\"\";s:19:\"exclude_from_search\";s:5:\"false\";s:15:\"capability_type\";s:4:\"post\";s:12:\"hierarchical\";s:5:\"false\";s:10:\"can_export\";s:4:\"true\";s:7:\"rewrite\";s:4:\"true\";s:12:\"rewrite_slug\";s:0:\"\";s:17:\"rewrite_withfront\";s:4:\"true\";s:9:\"query_var\";s:4:\"true\";s:14:\"query_var_slug\";s:0:\"\";s:13:\"menu_position\";s:0:\"\";s:12:\"show_in_menu\";s:4:\"true\";s:19:\"show_in_menu_string\";s:0:\"\";s:9:\"menu_icon\";N;s:20:\"register_meta_box_cb\";N;s:8:\"supports\";a:3:{i:0;s:5:\"title\";i:1;s:6:\"editor\";i:2;s:6:\"author\";}s:10:\"taxonomies\";a:1:{i:0;s:8:\"category\";}s:6:\"labels\";a:30:{s:9:\"menu_name\";s:0:\"\";s:9:\"all_items\";s:0:\"\";s:7:\"add_new\";s:0:\"\";s:12:\"add_new_item\";s:0:\"\";s:9:\"edit_item\";s:0:\"\";s:8:\"new_item\";s:0:\"\";s:9:\"view_item\";s:0:\"\";s:10:\"view_items\";s:0:\"\";s:12:\"search_items\";s:0:\"\";s:9:\"not_found\";s:0:\"\";s:18:\"not_found_in_trash\";s:0:\"\";s:17:\"parent_item_colon\";s:0:\"\";s:14:\"featured_image\";s:0:\"\";s:18:\"set_featured_image\";s:0:\"\";s:21:\"remove_featured_image\";s:0:\"\";s:18:\"use_featured_image\";s:0:\"\";s:8:\"archives\";s:0:\"\";s:16:\"insert_into_item\";s:0:\"\";s:21:\"uploaded_to_this_item\";s:0:\"\";s:17:\"filter_items_list\";s:0:\"\";s:21:\"items_list_navigation\";s:0:\"\";s:10:\"items_list\";s:0:\"\";s:10:\"attributes\";s:0:\"\";s:14:\"name_admin_bar\";s:0:\"\";s:14:\"item_published\";s:0:\"\";s:24:\"item_published_privately\";s:0:\"\";s:22:\"item_reverted_to_draft\";s:0:\"\";s:12:\"item_trashed\";s:0:\"\";s:14:\"item_scheduled\";s:0:\"\";s:12:\"item_updated\";s:0:\"\";}s:15:\"custom_supports\";s:0:\"\";s:16:\"enter_title_here\";s:0:\"\";s:15:\"show_in_graphql\";s:1:\"1\";s:19:\"graphql_single_name\";s:7:\"Expense\";s:19:\"graphql_plural_name\";s:8:\"Expenses\";}}','yes'),
(203,'_site_transient_wp_plugin_dependencies_plugin_data','a:0:{}','no'),
(204,'recently_activated','a:2:{s:51:\"all-in-one-wp-migration/all-in-one-wp-migration.php\";i:1713827056;s:63:\"wp-graphql-jwt-authentication/wp-graphql-jwt-authentication.php\";i:1713307788;}','yes'),
(247,'cptui_new_install','false','yes'),
(282,'cptui_taxonomies','a:0:{}','yes'),
(292,'https_detection_errors','a:1:{s:20:\"https_request_failed\";a:1:{i:0;s:21:\"HTTPS request failed.\";}}','yes'),
(293,'_transient_health-check-site-status-result','{\"good\":18,\"recommended\":5,\"critical\":0}','yes'),
(417,'gatographql-schema-configuration','a:55:{s:20:\"last_saved_timestamp\";s:10:\"1713052970\";s:32:\"schema-namespacing_default-value\";b:1;s:24:\"response-headers_entries\";a:0:{}s:37:\"global-fields_default-schema-exposure\";s:24:\"expose-in-root-type-only\";s:35:\"composable-directives_default-value\";b:1;s:35:\"multifield-directives_default-value\";b:1;s:49:\"mutations_use-payloadable-mutations-default-value\";b:1;s:30:\"nested-mutations_default-value\";s:8:\"standard\";s:42:\"schema-expose-sensitive-data_default-value\";b:1;s:32:\"schema-self-fields_default-value\";b:1;s:37:\"schema-customposts_list-default-limit\";i:10;s:33:\"schema-customposts_list-max-limit\";i:-1;s:35:\"schema-customposts_custompost-types\";a:3:{i:0;s:10:\"attachment\";i:1;s:7:\"expense\";i:2;s:4:\"post\";}s:60:\"schema-customposts_treat-custompost-status-as-sensitive-data\";b:1;s:72:\"schema-customposts_treat-custompost-raw-content-fields-as-sensitive-data\";b:1;s:62:\"schema-customposts_treat-custompost-edit-url-as-sensitive-data\";b:1;s:31:\"schema-posts_list-default-limit\";i:10;s:27:\"schema-posts_list-max-limit\";i:-1;s:31:\"schema-pages_list-default-limit\";i:10;s:27:\"schema-pages_list-max-limit\";i:-1;s:31:\"schema-users_list-default-limit\";i:10;s:27:\"schema-users_list-max-limit\";i:-1;s:47:\"schema-users_treat-user-email-as-sensitive-data\";b:1;s:51:\"schema-user-roles_treat-user-role-as-sensitive-data\";b:1;s:57:\"schema-user-roles_treat-user-capability-as-sensitive-data\";b:1;s:39:\"schema-user-avatars_default-avatar-size\";i:96;s:47:\"schema-comments_root-comment-list-default-limit\";i:10;s:53:\"schema-comments_custompost-comment-list-default-limit\";i:-1;s:30:\"schema-comments_list-max-limit\";i:-1;s:54:\"schema-comments_treat-comment-status-as-sensitive-data\";b:1;s:59:\"schema-comments_treat-comment-raw-content-as-sensitive-data\";b:1;s:30:\"schema-tags_list-default-limit\";i:10;s:26:\"schema-tags_list-max-limit\";i:-1;s:26:\"schema-tags_tag-taxonomies\";a:2:{i:0;s:11:\"post_format\";i:1;s:8:\"post_tag\";}s:36:\"schema-categories_list-default-limit\";i:10;s:32:\"schema-categories_list-max-limit\";i:-1;s:37:\"schema-categories_category-taxonomies\";a:1:{i:0;s:8:\"category\";}s:31:\"schema-media_list-default-limit\";i:10;s:27:\"schema-media_list-max-limit\";i:-1;s:31:\"schema-menus_list-default-limit\";i:10;s:27:\"schema-menus_list-max-limit\";i:-1;s:55:\"schema-menus_treat-menuitem-raw-title-as-sensitive-data\";b:1;s:23:\"schema-settings_entries\";a:0:{}s:24:\"schema-settings_behavior\";s:4:\"deny\";s:30:\"schema-custompost-meta_entries\";a:1:{i:0;s:7:\"expense\";}s:31:\"schema-custompost-meta_behavior\";s:4:\"deny\";s:24:\"schema-user-meta_entries\";a:0:{}s:25:\"schema-user-meta_behavior\";s:4:\"deny\";s:27:\"schema-comment-meta_entries\";a:0:{}s:28:\"schema-comment-meta_behavior\";s:4:\"deny\";s:28:\"schema-taxonomy-meta_entries\";a:0:{}s:29:\"schema-taxonomy-meta_behavior\";s:4:\"deny\";s:92:\"schema-custompost-user-mutations_treat-author-input-in-custompost-mutation-as-sensitive-data\";b:1;s:56:\"schema-customposts_use-single-type-instead-of-union-type\";b:0;s:51:\"schema-blocks_use-single-type-instead-of-union-type\";b:0;}','yes'),
(418,'gatographql-endpoint-configuration','a:0:{}','yes'),
(419,'gatographql-server-configuration','a:0:{}','yes'),
(420,'gatographql-plugin-configuration','a:0:{}','yes'),
(421,'gatographql-api-keys','a:0:{}','yes'),
(422,'gatographql-plugin-management','a:0:{}','yes'),
(423,'gatographql-plugin-versions','a:0:{}','yes'),
(427,'graphql-endpoint-category_children','a:0:{}','yes'),
(637,'_site_transient_timeout_php_check_300bdd1dee4ffdf6584bde61ef218050','1714087627','no'),
(638,'_site_transient_php_check_300bdd1dee4ffdf6584bde61ef218050','a:5:{s:19:\"recommended_version\";s:3:\"7.4\";s:15:\"minimum_version\";s:3:\"7.0\";s:12:\"is_supported\";b:1;s:9:\"is_secure\";b:1;s:13:\"is_acceptable\";b:1;}','no'),
(663,'_site_transient_timeout_browser_02aaaa9050d92e5f5d6bd135ca5a065c','1714160793','no'),
(664,'_site_transient_browser_02aaaa9050d92e5f5d6bd135ca5a065c','a:10:{s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:9:\"123.0.0.0\";s:8:\"platform\";s:9:\"Macintosh\";s:10:\"update_url\";s:29:\"https://www.google.com/chrome\";s:7:\"img_src\";s:43:\"http://s.w.org/images/browsers/chrome.png?1\";s:11:\"img_src_ssl\";s:44:\"https://s.w.org/images/browsers/chrome.png?1\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;s:6:\"mobile\";b:0;}','no'),
(776,'_site_transient_update_plugins','O:8:\"stdClass\":5:{s:12:\"last_checked\";i:1713875379;s:8:\"response\";a:0:{}s:12:\"translations\";a:0:{}s:9:\"no_update\";a:7:{s:31:\"acf-to-wp-api/acf-to-wp-api.php\";O:8:\"stdClass\":10:{s:2:\"id\";s:27:\"w.org/plugins/acf-to-wp-api\";s:4:\"slug\";s:13:\"acf-to-wp-api\";s:6:\"plugin\";s:31:\"acf-to-wp-api/acf-to-wp-api.php\";s:11:\"new_version\";s:5:\"1.4.0\";s:3:\"url\";s:44:\"https://wordpress.org/plugins/acf-to-wp-api/\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/plugin/acf-to-wp-api.1.4.0.zip\";s:5:\"icons\";a:1:{s:7:\"default\";s:57:\"https://s.w.org/plugins/geopattern-icon/acf-to-wp-api.svg\";}s:7:\"banners\";a:0:{}s:11:\"banners_rtl\";a:0:{}s:8:\"requires\";s:5:\"3.9.0\";}s:30:\"advanced-custom-fields/acf.php\";O:8:\"stdClass\":10:{s:2:\"id\";s:36:\"w.org/plugins/advanced-custom-fields\";s:4:\"slug\";s:22:\"advanced-custom-fields\";s:6:\"plugin\";s:30:\"advanced-custom-fields/acf.php\";s:11:\"new_version\";s:5:\"6.2.9\";s:3:\"url\";s:53:\"https://wordpress.org/plugins/advanced-custom-fields/\";s:7:\"package\";s:71:\"https://downloads.wordpress.org/plugin/advanced-custom-fields.6.2.9.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:75:\"https://ps.w.org/advanced-custom-fields/assets/icon-256x256.png?rev=1082746\";s:2:\"1x\";s:75:\"https://ps.w.org/advanced-custom-fields/assets/icon-128x128.png?rev=1082746\";}s:7:\"banners\";a:2:{s:2:\"2x\";s:78:\"https://ps.w.org/advanced-custom-fields/assets/banner-1544x500.jpg?rev=2892919\";s:2:\"1x\";s:77:\"https://ps.w.org/advanced-custom-fields/assets/banner-772x250.jpg?rev=2892919\";}s:11:\"banners_rtl\";a:0:{}s:8:\"requires\";s:3:\"5.8\";}s:43:\"custom-post-type-ui/custom-post-type-ui.php\";O:8:\"stdClass\":10:{s:2:\"id\";s:33:\"w.org/plugins/custom-post-type-ui\";s:4:\"slug\";s:19:\"custom-post-type-ui\";s:6:\"plugin\";s:43:\"custom-post-type-ui/custom-post-type-ui.php\";s:11:\"new_version\";s:6:\"1.16.0\";s:3:\"url\";s:50:\"https://wordpress.org/plugins/custom-post-type-ui/\";s:7:\"package\";s:69:\"https://downloads.wordpress.org/plugin/custom-post-type-ui.1.16.0.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:72:\"https://ps.w.org/custom-post-type-ui/assets/icon-256x256.png?rev=2744389\";s:2:\"1x\";s:72:\"https://ps.w.org/custom-post-type-ui/assets/icon-128x128.png?rev=2744389\";}s:7:\"banners\";a:2:{s:2:\"2x\";s:75:\"https://ps.w.org/custom-post-type-ui/assets/banner-1544x500.png?rev=2744389\";s:2:\"1x\";s:74:\"https://ps.w.org/custom-post-type-ui/assets/banner-772x250.png?rev=2744389\";}s:11:\"banners_rtl\";a:0:{}s:8:\"requires\";s:3:\"6.3\";}s:47:\"jwt-authentication-for-wp-rest-api/jwt-auth.php\";O:8:\"stdClass\":10:{s:2:\"id\";s:48:\"w.org/plugins/jwt-authentication-for-wp-rest-api\";s:4:\"slug\";s:34:\"jwt-authentication-for-wp-rest-api\";s:6:\"plugin\";s:47:\"jwt-authentication-for-wp-rest-api/jwt-auth.php\";s:11:\"new_version\";s:5:\"1.3.4\";s:3:\"url\";s:65:\"https://wordpress.org/plugins/jwt-authentication-for-wp-rest-api/\";s:7:\"package\";s:83:\"https://downloads.wordpress.org/plugin/jwt-authentication-for-wp-rest-api.1.3.4.zip\";s:5:\"icons\";a:2:{s:2:\"1x\";s:79:\"https://ps.w.org/jwt-authentication-for-wp-rest-api/assets/icon.svg?rev=2787935\";s:3:\"svg\";s:79:\"https://ps.w.org/jwt-authentication-for-wp-rest-api/assets/icon.svg?rev=2787935\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:89:\"https://ps.w.org/jwt-authentication-for-wp-rest-api/assets/banner-772x250.jpg?rev=2787935\";}s:11:\"banners_rtl\";a:0:{}s:8:\"requires\";s:3:\"4.2\";}s:41:\"wordpress-importer/wordpress-importer.php\";O:8:\"stdClass\":10:{s:2:\"id\";s:32:\"w.org/plugins/wordpress-importer\";s:4:\"slug\";s:18:\"wordpress-importer\";s:6:\"plugin\";s:41:\"wordpress-importer/wordpress-importer.php\";s:11:\"new_version\";s:5:\"0.8.2\";s:3:\"url\";s:49:\"https://wordpress.org/plugins/wordpress-importer/\";s:7:\"package\";s:67:\"https://downloads.wordpress.org/plugin/wordpress-importer.0.8.2.zip\";s:5:\"icons\";a:2:{s:2:\"1x\";s:63:\"https://ps.w.org/wordpress-importer/assets/icon.svg?rev=2791650\";s:3:\"svg\";s:63:\"https://ps.w.org/wordpress-importer/assets/icon.svg?rev=2791650\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:72:\"https://ps.w.org/wordpress-importer/assets/banner-772x250.png?rev=547654\";}s:11:\"banners_rtl\";a:0:{}s:8:\"requires\";s:3:\"5.2\";}s:45:\"wp-rest-api-v2-menus/wp-rest-api-v2-menus.php\";O:8:\"stdClass\":10:{s:2:\"id\";s:34:\"w.org/plugins/wp-rest-api-v2-menus\";s:4:\"slug\";s:20:\"wp-rest-api-v2-menus\";s:6:\"plugin\";s:45:\"wp-rest-api-v2-menus/wp-rest-api-v2-menus.php\";s:11:\"new_version\";s:6:\"0.12.1\";s:3:\"url\";s:51:\"https://wordpress.org/plugins/wp-rest-api-v2-menus/\";s:7:\"package\";s:70:\"https://downloads.wordpress.org/plugin/wp-rest-api-v2-menus.0.12.1.zip\";s:5:\"icons\";a:1:{s:7:\"default\";s:64:\"https://s.w.org/plugins/geopattern-icon/wp-rest-api-v2-menus.svg\";}s:7:\"banners\";a:0:{}s:11:\"banners_rtl\";a:0:{}s:8:\"requires\";s:3:\"4.4\";}s:25:\"wp-graphql/wp-graphql.php\";O:8:\"stdClass\":10:{s:2:\"id\";s:24:\"w.org/plugins/wp-graphql\";s:4:\"slug\";s:10:\"wp-graphql\";s:6:\"plugin\";s:25:\"wp-graphql/wp-graphql.php\";s:11:\"new_version\";s:6:\"1.23.0\";s:3:\"url\";s:41:\"https://wordpress.org/plugins/wp-graphql/\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/plugin/wp-graphql.1.23.0.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:63:\"https://ps.w.org/wp-graphql/assets/icon-256x256.png?rev=2482884\";s:2:\"1x\";s:63:\"https://ps.w.org/wp-graphql/assets/icon-128x128.png?rev=2482884\";}s:7:\"banners\";a:2:{s:2:\"2x\";s:66:\"https://ps.w.org/wp-graphql/assets/banner-1544x500.png?rev=2482884\";s:2:\"1x\";s:65:\"https://ps.w.org/wp-graphql/assets/banner-772x250.png?rev=2482884\";}s:11:\"banners_rtl\";a:0:{}s:8:\"requires\";s:3:\"5.0\";}}s:7:\"checked\";a:9:{s:31:\"acf-to-wp-api/acf-to-wp-api.php\";s:5:\"1.4.0\";s:30:\"advanced-custom-fields/acf.php\";s:5:\"6.2.9\";s:43:\"custom-post-type-ui/custom-post-type-ui.php\";s:6:\"1.16.0\";s:47:\"jwt-authentication-for-wp-rest-api/jwt-auth.php\";s:5:\"1.3.4\";s:41:\"wordpress-importer/wordpress-importer.php\";s:5:\"0.8.2\";s:45:\"wp-rest-api-v2-menus/wp-rest-api-v2-menus.php\";s:6:\"0.12.1\";s:25:\"wp-graphql/wp-graphql.php\";s:6:\"1.23.0\";s:33:\"wp-graphql-acf/wp-graphql-acf.php\";s:5:\"0.6.1\";s:69:\"wp-graphql-jwt-authentication-0.7.0/wp-graphql-jwt-authentication.php\";s:5:\"0.7.0\";}}','no'),
(777,'_site_transient_ai1wm_last_check_for_updates','1713790248','no'),
(778,'ai1wm_updater','a:0:{}','yes'),
(795,'_site_transient_timeout_theme_roots','1713877178','no'),
(796,'_site_transient_theme_roots','a:3:{s:21:\"postlight-headless-wp\";s:7:\"/themes\";s:16:\"twentytwentyfour\";s:7:\"/themes\";s:17:\"twentytwentythree\";s:7:\"/themes\";}','no'),
(807,'category_children','a:1:{i:9;a:2:{i:0;i:10;i:1;i:11;}}','yes');
/*!40000 ALTER TABLE `wp_options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_postmeta`
--

DROP TABLE IF EXISTS `wp_postmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT 0,
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext DEFAULT NULL,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB AUTO_INCREMENT=1247 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_postmeta`
--

LOCK TABLES `wp_postmeta` WRITE;
/*!40000 ALTER TABLE `wp_postmeta` DISABLE KEYS */;
INSERT INTO `wp_postmeta` VALUES
(1,2,'_wp_page_template','default'),
(2,3,'_wp_page_template','default'),
(3,1,'_wp_trash_meta_status','publish'),
(4,1,'_wp_trash_meta_time','1712791400'),
(5,1,'_wp_desired_post_slug','hello-world'),
(6,1,'_wp_trash_meta_comments_status','a:1:{i:1;s:1:\"1\";}'),
(7,2,'_wp_trash_meta_status','publish'),
(8,2,'_wp_trash_meta_time','1712791400'),
(9,2,'_wp_desired_post_slug','sample-page'),
(18,8,'_wp_page_template','default'),
(35,12,'_menu_item_type','taxonomy'),
(36,12,'_menu_item_menu_item_parent','0'),
(37,12,'_menu_item_object_id','1'),
(38,12,'_menu_item_object','category'),
(39,12,'_menu_item_target',''),
(40,12,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),
(41,12,'_menu_item_xfn',''),
(42,12,'_menu_item_url',''),
(43,13,'_menu_item_type','custom'),
(44,13,'_menu_item_menu_item_parent','0'),
(45,13,'_menu_item_object_id','13'),
(46,13,'_menu_item_object','custom'),
(47,13,'_menu_item_target',''),
(48,13,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),
(49,13,'_menu_item_xfn',''),
(50,13,'_menu_item_url','https://postlight.com/trackchanges/introducing-postlights-wordpress-react-starter-kit'),
(51,15,'_thumbnail_id','45'),
(52,16,'_thumbnail_id','46'),
(53,17,'_thumbnail_id','47'),
(54,38,'_thumbnail_id','48'),
(55,39,'_menu_item_type','custom'),
(56,39,'_menu_item_menu_item_parent','0'),
(57,39,'_menu_item_object_id','39'),
(58,39,'_menu_item_object','custom'),
(59,39,'_menu_item_target',''),
(60,39,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),
(61,39,'_menu_item_xfn',''),
(62,39,'_menu_item_url','/'),
(63,45,'_wp_attached_file','2019/11/Graphql2.png'),
(64,45,'_wp_attachment_metadata','a:6:{s:5:\"width\";i:1024;s:6:\"height\";i:479;s:4:\"file\";s:20:\"2019/11/Graphql2.png\";s:8:\"filesize\";i:194380;s:5:\"sizes\";a:3:{s:6:\"medium\";a:5:{s:4:\"file\";s:20:\"Graphql2-300x140.png\";s:5:\"width\";i:300;s:6:\"height\";i:140;s:9:\"mime-type\";s:9:\"image/png\";s:8:\"filesize\";i:23510;}s:9:\"thumbnail\";a:5:{s:4:\"file\";s:20:\"Graphql2-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";s:8:\"filesize\";i:18272;}s:12:\"medium_large\";a:5:{s:4:\"file\";s:20:\"Graphql2-768x359.png\";s:5:\"width\";i:768;s:6:\"height\";i:359;s:9:\"mime-type\";s:9:\"image/png\";s:8:\"filesize\";i:114788;}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),
(65,46,'_wp_attached_file','2019/11/19-word-press-without-shame-0.png'),
(66,46,'_wp_attachment_metadata','a:6:{s:5:\"width\";i:1024;s:6:\"height\";i:617;s:4:\"file\";s:41:\"2019/11/19-word-press-without-shame-0.png\";s:8:\"filesize\";i:560810;s:5:\"sizes\";a:3:{s:6:\"medium\";a:5:{s:4:\"file\";s:41:\"19-word-press-without-shame-0-300x181.png\";s:5:\"width\";i:300;s:6:\"height\";i:181;s:9:\"mime-type\";s:9:\"image/png\";s:8:\"filesize\";i:52685;}s:9:\"thumbnail\";a:5:{s:4:\"file\";s:41:\"19-word-press-without-shame-0-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";s:8:\"filesize\";i:17144;}s:12:\"medium_large\";a:5:{s:4:\"file\";s:41:\"19-word-press-without-shame-0-768x463.png\";s:5:\"width\";i:768;s:6:\"height\";i:463;s:9:\"mime-type\";s:9:\"image/png\";s:8:\"filesize\";i:326230;}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),
(67,47,'_wp_attached_file','2019/11/cropped-hal-gatewood-tZc3vjPCk-Q-unsplash.jpg'),
(68,47,'_wp_attachment_metadata','a:6:{s:5:\"width\";i:1280;s:6:\"height\";i:721;s:4:\"file\";s:53:\"2019/11/cropped-hal-gatewood-tZc3vjPCk-Q-unsplash.jpg\";s:8:\"filesize\";i:79598;s:5:\"sizes\";a:4:{s:6:\"medium\";a:5:{s:4:\"file\";s:53:\"cropped-hal-gatewood-tZc3vjPCk-Q-unsplash-300x169.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:169;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:12388;}s:5:\"large\";a:5:{s:4:\"file\";s:54:\"cropped-hal-gatewood-tZc3vjPCk-Q-unsplash-1024x577.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:577;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:72785;}s:9:\"thumbnail\";a:5:{s:4:\"file\";s:53:\"cropped-hal-gatewood-tZc3vjPCk-Q-unsplash-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:6363;}s:12:\"medium_large\";a:5:{s:4:\"file\";s:53:\"cropped-hal-gatewood-tZc3vjPCk-Q-unsplash-768x433.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:433;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:48221;}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),
(69,48,'_wp_attached_file','2019/11/careers-photo-opt-scaled.jpg'),
(70,48,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:2560;s:6:\"height\";i:1225;s:4:\"file\";s:36:\"2019/11/careers-photo-opt-scaled.jpg\";s:8:\"filesize\";i:518670;s:5:\"sizes\";a:6:{s:6:\"medium\";a:5:{s:4:\"file\";s:29:\"careers-photo-opt-300x144.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:14167;}s:5:\"large\";a:5:{s:4:\"file\";s:30:\"careers-photo-opt-1024x490.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:490;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:111534;}s:9:\"thumbnail\";a:5:{s:4:\"file\";s:29:\"careers-photo-opt-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:7779;}s:12:\"medium_large\";a:5:{s:4:\"file\";s:29:\"careers-photo-opt-768x367.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:367;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:68372;}s:9:\"1536x1536\";a:5:{s:4:\"file\";s:30:\"careers-photo-opt-1536x735.jpg\";s:5:\"width\";i:1536;s:6:\"height\";i:735;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:222737;}s:9:\"2048x2048\";a:5:{s:4:\"file\";s:30:\"careers-photo-opt-2048x980.jpg\";s:5:\"width\";i:2048;s:6:\"height\";i:980;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:360895;}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:14:\"original_image\";s:21:\"careers-photo-opt.jpg\";}'),
(71,50,'_edit_last','1'),
(72,50,'_edit_lock','1713661333:1'),
(81,44,'_edit_lock','1712793711:1'),
(82,14,'_edit_lock','1712798816:1'),
(83,55,'_edit_lock','1712924988:1'),
(88,17,'_edit_last','1'),
(91,16,'_edit_last','1'),
(94,15,'_edit_last','1'),
(95,17,'_edit_lock','1712925769:1'),
(103,55,'_thumbnail_id','46'),
(148,78,'_edit_lock','1713052785:1'),
(149,113,'_edit_lock','1713054180:1'),
(150,113,'_edit_last','1'),
(153,113,'_wp_trash_meta_status','acf-disabled'),
(154,113,'_wp_trash_meta_time','1713054567'),
(155,113,'_wp_desired_post_slug','post_type_661b202870036'),
(158,116,'_edit_last','1'),
(160,117,'_edit_last','1'),
(162,118,'_edit_last','1'),
(164,119,'_edit_last','1'),
(166,120,'_edit_last','1'),
(168,121,'_edit_last','1'),
(171,120,'_wp_trash_meta_status','draft'),
(172,120,'_wp_trash_meta_time','1713055181'),
(173,120,'_wp_desired_post_slug',''),
(174,119,'_wp_trash_meta_status','draft'),
(175,119,'_wp_trash_meta_time','1713055181'),
(176,119,'_wp_desired_post_slug',''),
(177,118,'_wp_trash_meta_status','draft'),
(178,118,'_wp_trash_meta_time','1713055181'),
(179,118,'_wp_desired_post_slug',''),
(180,117,'_wp_trash_meta_status','draft'),
(181,117,'_wp_trash_meta_time','1713055181'),
(182,117,'_wp_desired_post_slug',''),
(183,116,'_wp_trash_meta_status','draft'),
(184,116,'_wp_trash_meta_time','1713055181'),
(185,116,'_wp_desired_post_slug',''),
(186,121,'_edit_lock','1713059024:1'),
(188,128,'_edit_last','1'),
(192,130,'_edit_last','1'),
(196,132,'_edit_last','1'),
(200,134,'_edit_last','1'),
(203,134,'_edit_lock','1713059167:1'),
(205,136,'_edit_last','1'),
(209,138,'_edit_last','1'),
(212,138,'_edit_lock','1713059176:1'),
(213,136,'_wp_trash_meta_status','publish'),
(214,136,'_wp_trash_meta_time','1713059367'),
(215,136,'_wp_desired_post_slug','upa-upa'),
(216,134,'_wp_trash_meta_status','publish'),
(217,134,'_wp_trash_meta_time','1713059367'),
(218,134,'_wp_desired_post_slug','wsrfvsrfgd'),
(219,132,'_wp_trash_meta_status','publish'),
(220,132,'_wp_trash_meta_time','1713059367'),
(221,132,'_wp_desired_post_slug','oi-oi-4'),
(222,130,'_wp_trash_meta_status','publish'),
(223,130,'_wp_trash_meta_time','1713059367'),
(224,130,'_wp_desired_post_slug','oi-oi-3'),
(225,128,'_wp_trash_meta_status','publish'),
(226,128,'_wp_trash_meta_time','1713059367'),
(227,128,'_wp_desired_post_slug','oi-oi-2'),
(228,121,'_wp_trash_meta_status','publish'),
(229,121,'_wp_trash_meta_time','1713059367'),
(230,121,'_wp_desired_post_slug','oi-oi'),
(231,55,'_wp_trash_meta_status','publish'),
(232,55,'_wp_trash_meta_time','1713059367'),
(233,55,'_wp_desired_post_slug','test-post'),
(234,17,'_wp_trash_meta_status','publish'),
(235,17,'_wp_trash_meta_time','1713059367'),
(236,17,'_wp_desired_post_slug','why-bother-with-a-headless-cms'),
(237,16,'_wp_trash_meta_status','publish'),
(238,16,'_wp_trash_meta_time','1713059367'),
(239,16,'_wp_desired_post_slug','wordpress-without-shame'),
(240,15,'_wp_trash_meta_status','publish'),
(241,15,'_wp_trash_meta_time','1713059367'),
(242,15,'_wp_desired_post_slug','what-do-you-need-to-know-about-graphql'),
(244,140,'_edit_last','1'),
(248,142,'_edit_last','1'),
(252,144,'_edit_last','1'),
(260,152,'_edit_lock','1713207499:1'),
(731,254,'_edit_lock','1713292184:1'),
(901,279,'value','760'),
(902,279,'_value','field_661720f379cce'),
(903,279,'type','outcome'),
(904,279,'_type','field_661ec08f58127'),
(905,280,'value','2000'),
(906,280,'_value','field_661720f379cce'),
(907,280,'type','income'),
(908,280,'_type','field_661ec08f58127'),
(969,138,'_wp_trash_meta_status','publish'),
(970,138,'_wp_trash_meta_time','1713661491'),
(971,138,'_wp_desired_post_slug','upa-upawerfwef'),
(972,157,'_wp_trash_meta_status','publish'),
(973,157,'_wp_trash_meta_time','1713661498'),
(974,157,'_wp_desired_post_slug','rtgfd-3'),
(975,156,'_wp_trash_meta_status','publish'),
(976,156,'_wp_trash_meta_time','1713661498'),
(977,156,'_wp_desired_post_slug','rtgfd-2'),
(978,155,'_wp_trash_meta_status','publish'),
(979,155,'_wp_trash_meta_time','1713661498'),
(980,155,'_wp_desired_post_slug','rtgfd'),
(981,154,'_wp_trash_meta_status','publish'),
(982,154,'_wp_trash_meta_time','1713661498'),
(983,154,'_wp_desired_post_slug','drgfdvsazdvszxfvc-sdfgvc'),
(984,153,'_wp_trash_meta_status','publish'),
(985,153,'_wp_trash_meta_time','1713661498'),
(986,153,'_wp_desired_post_slug','5432'),
(987,152,'_wp_trash_meta_status','publish'),
(988,152,'_wp_trash_meta_time','1713661498'),
(989,152,'_wp_desired_post_slug','aaaaaaaa'),
(990,151,'_wp_trash_meta_status','publish'),
(991,151,'_wp_trash_meta_time','1713661498'),
(992,151,'_wp_desired_post_slug','q3rtqwtqwt'),
(993,144,'_wp_trash_meta_status','publish'),
(994,144,'_wp_trash_meta_time','1713661498'),
(995,144,'_wp_desired_post_slug','sdfsarfdaszdf'),
(996,142,'_wp_trash_meta_status','publish'),
(997,142,'_wp_trash_meta_time','1713661498'),
(998,142,'_wp_desired_post_slug','23523rwerg'),
(999,140,'_wp_trash_meta_status','publish'),
(1000,140,'_wp_trash_meta_time','1713661498'),
(1001,140,'_wp_desired_post_slug','3232wefsedf'),
(1002,308,'_edit_lock','1713826339:1'),
(1005,310,'_wp_attached_file','2024/04/article5.jpg'),
(1006,310,'_wp_attachment_metadata','a:6:{s:5:\"width\";i:1080;s:6:\"height\";i:720;s:4:\"file\";s:20:\"2024/04/article5.jpg\";s:8:\"filesize\";i:49488;s:5:\"sizes\";a:4:{s:6:\"medium\";a:5:{s:4:\"file\";s:20:\"article5-300x200.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:200;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:8597;}s:5:\"large\";a:5:{s:4:\"file\";s:21:\"article5-1024x683.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:683;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:49902;}s:9:\"thumbnail\";a:5:{s:4:\"file\";s:20:\"article5-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:4576;}s:12:\"medium_large\";a:5:{s:4:\"file\";s:20:\"article5-768x512.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:512;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:32405;}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"1\";s:8:\"keywords\";a:0:{}}}'),
(1007,311,'_wp_attached_file','2024/04/article4.jpg'),
(1008,311,'_wp_attachment_metadata','a:6:{s:5:\"width\";i:1080;s:6:\"height\";i:720;s:4:\"file\";s:20:\"2024/04/article4.jpg\";s:8:\"filesize\";i:74600;s:5:\"sizes\";a:4:{s:6:\"medium\";a:5:{s:4:\"file\";s:20:\"article4-300x200.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:200;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:12161;}s:5:\"large\";a:5:{s:4:\"file\";s:21:\"article4-1024x683.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:683;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:75245;}s:9:\"thumbnail\";a:5:{s:4:\"file\";s:20:\"article4-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:5521;}s:12:\"medium_large\";a:5:{s:4:\"file\";s:20:\"article4-768x512.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:512;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:48211;}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"1\";s:8:\"keywords\";a:0:{}}}'),
(1009,312,'_wp_attached_file','2024/04/article3.jpg'),
(1010,312,'_wp_attachment_metadata','a:6:{s:5:\"width\";i:1080;s:6:\"height\";i:720;s:4:\"file\";s:20:\"2024/04/article3.jpg\";s:8:\"filesize\";i:29162;s:5:\"sizes\";a:4:{s:6:\"medium\";a:5:{s:4:\"file\";s:20:\"article3-300x200.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:200;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:4152;}s:5:\"large\";a:5:{s:4:\"file\";s:21:\"article3-1024x683.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:683;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:26689;}s:9:\"thumbnail\";a:5:{s:4:\"file\";s:20:\"article3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:2534;}s:12:\"medium_large\";a:5:{s:4:\"file\";s:20:\"article3-768x512.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:512;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:16689;}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"1\";s:8:\"keywords\";a:0:{}}}'),
(1011,313,'_wp_attached_file','2024/04/article2.jpg'),
(1012,313,'_wp_attachment_metadata','a:6:{s:5:\"width\";i:1080;s:6:\"height\";i:810;s:4:\"file\";s:20:\"2024/04/article2.jpg\";s:8:\"filesize\";i:81916;s:5:\"sizes\";a:4:{s:6:\"medium\";a:5:{s:4:\"file\";s:20:\"article2-300x225.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:13185;}s:5:\"large\";a:5:{s:4:\"file\";s:21:\"article2-1024x768.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:768;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:84872;}s:9:\"thumbnail\";a:5:{s:4:\"file\";s:20:\"article2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:6102;}s:12:\"medium_large\";a:5:{s:4:\"file\";s:20:\"article2-768x576.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:576;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:54189;}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"1\";s:8:\"keywords\";a:0:{}}}'),
(1013,314,'_wp_attached_file','2024/04/article1.jpg'),
(1014,314,'_wp_attachment_metadata','a:6:{s:5:\"width\";i:1080;s:6:\"height\";i:810;s:4:\"file\";s:20:\"2024/04/article1.jpg\";s:8:\"filesize\";i:139349;s:5:\"sizes\";a:4:{s:6:\"medium\";a:5:{s:4:\"file\";s:20:\"article1-300x225.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:16741;}s:5:\"large\";a:5:{s:4:\"file\";s:21:\"article1-1024x768.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:768;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:139078;}s:9:\"thumbnail\";a:5:{s:4:\"file\";s:20:\"article1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:6437;}s:12:\"medium_large\";a:5:{s:4:\"file\";s:20:\"article1-768x576.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:576;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:84584;}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"1\";s:8:\"keywords\";a:0:{}}}'),
(1017,308,'_thumbnail_id','314'),
(1018,315,'_edit_lock','1713662211:1'),
(1021,315,'_thumbnail_id','313'),
(1022,317,'_edit_lock','1713662263:1'),
(1027,317,'_thumbnail_id','312'),
(1028,319,'_edit_lock','1713662292:1'),
(1031,319,'_thumbnail_id','311'),
(1032,321,'_edit_lock','1713662498:1'),
(1035,321,'_thumbnail_id','310'),
(1036,323,'_edit_lock','1713662652:1'),
(1037,324,'_wp_attached_file','2024/04/article8.jpg'),
(1038,324,'_wp_attachment_metadata','a:6:{s:5:\"width\";i:1080;s:6:\"height\";i:720;s:4:\"file\";s:20:\"2024/04/article8.jpg\";s:8:\"filesize\";i:92848;s:5:\"sizes\";a:4:{s:6:\"medium\";a:5:{s:4:\"file\";s:20:\"article8-300x200.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:200;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:13003;}s:5:\"large\";a:5:{s:4:\"file\";s:21:\"article8-1024x683.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:683;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:97282;}s:9:\"thumbnail\";a:5:{s:4:\"file\";s:20:\"article8-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:5282;}s:12:\"medium_large\";a:5:{s:4:\"file\";s:20:\"article8-768x512.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:512;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:60754;}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"1\";s:8:\"keywords\";a:0:{}}}'),
(1039,325,'_wp_attached_file','2024/04/article7.jpg'),
(1040,325,'_wp_attachment_metadata','a:6:{s:5:\"width\";i:1080;s:6:\"height\";i:720;s:4:\"file\";s:20:\"2024/04/article7.jpg\";s:8:\"filesize\";i:51578;s:5:\"sizes\";a:4:{s:6:\"medium\";a:5:{s:4:\"file\";s:20:\"article7-300x200.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:200;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:5931;}s:5:\"large\";a:5:{s:4:\"file\";s:21:\"article7-1024x683.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:683;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:52909;}s:9:\"thumbnail\";a:5:{s:4:\"file\";s:20:\"article7-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:3090;}s:12:\"medium_large\";a:5:{s:4:\"file\";s:20:\"article7-768x512.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:512;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:32347;}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"1\";s:8:\"keywords\";a:0:{}}}'),
(1041,326,'_wp_attached_file','2024/04/article6.jpg'),
(1042,326,'_wp_attachment_metadata','a:6:{s:5:\"width\";i:1080;s:6:\"height\";i:718;s:4:\"file\";s:20:\"2024/04/article6.jpg\";s:8:\"filesize\";i:34654;s:5:\"sizes\";a:4:{s:6:\"medium\";a:5:{s:4:\"file\";s:20:\"article6-300x199.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:199;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:5540;}s:5:\"large\";a:5:{s:4:\"file\";s:21:\"article6-1024x681.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:681;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:33939;}s:9:\"thumbnail\";a:5:{s:4:\"file\";s:20:\"article6-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:2661;}s:12:\"medium_large\";a:5:{s:4:\"file\";s:20:\"article6-768x511.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:511;s:9:\"mime-type\";s:10:\"image/jpeg\";s:8:\"filesize\";i:22118;}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"1\";s:8:\"keywords\";a:0:{}}}'),
(1045,323,'_thumbnail_id','326'),
(1046,328,'_edit_lock','1713662565:1'),
(1049,328,'_thumbnail_id','325'),
(1050,330,'_edit_lock','1713662606:1'),
(1053,330,'_thumbnail_id','324'),
(1145,280,'_edit_last','1'),
(1146,280,'_wp_old_slug','sallary'),
(1147,280,'_edit_lock','1713889271:1'),
(1148,345,'value','45'),
(1149,345,'_value','field_661720f379cce'),
(1150,345,'type','income'),
(1151,345,'_type','field_661ec08f58127'),
(1152,346,'value','4'),
(1153,346,'_value','field_661720f379cce'),
(1154,346,'type','outcome'),
(1155,346,'_type','field_661ec08f58127'),
(1156,347,'value','3000'),
(1157,347,'_value','field_661720f379cce'),
(1158,347,'type','outcome'),
(1159,347,'_type','field_661ec08f58127'),
(1160,348,'value','400'),
(1161,348,'_value','field_661720f379cce'),
(1162,348,'type','income'),
(1163,348,'_type','field_661ec08f58127'),
(1164,349,'value','1000'),
(1165,349,'_value','field_661720f379cce'),
(1166,349,'type','income'),
(1167,349,'_type','field_661ec08f58127'),
(1168,350,'value','22'),
(1169,350,'_value','field_661720f379cce'),
(1170,350,'type','outcome'),
(1171,350,'_type','field_661ec08f58127'),
(1172,351,'value','70000'),
(1173,351,'_value','field_661720f379cce'),
(1174,351,'type','income'),
(1175,351,'_type','field_661ec08f58127'),
(1176,352,'value','100000'),
(1177,352,'_value','field_661720f379cce'),
(1178,352,'type','income'),
(1179,352,'_type','field_661ec08f58127'),
(1180,353,'value','500'),
(1181,353,'_value','field_661720f379cce'),
(1182,353,'type','outcome'),
(1183,353,'_type','field_661ec08f58127'),
(1184,354,'value','6000'),
(1185,354,'_value','field_661720f379cce'),
(1186,354,'type','outcome'),
(1187,354,'_type','field_661ec08f58127'),
(1188,355,'value','10000'),
(1189,355,'_value','field_661720f379cce'),
(1190,355,'type','income'),
(1191,355,'_type','field_661ec08f58127'),
(1192,345,'_wp_old_date','2024-04-22'),
(1193,280,'_wp_old_date','2024-04-19'),
(1194,279,'_wp_old_date','2024-04-19'),
(1195,356,'value','235235'),
(1196,356,'_value','field_661720f379cce'),
(1197,356,'type','outcome'),
(1198,356,'_type','field_661ec08f58127'),
(1199,352,'_edit_last','1'),
(1200,352,'_wp_old_date','2025-03-13'),
(1201,352,'_edit_lock','1713889256:1'),
(1202,351,'_edit_last','1'),
(1203,351,'_wp_old_date','2024-05-14'),
(1204,351,'_edit_lock','1713889264:1'),
(1205,280,'_wp_old_date','2024-04-30'),
(1206,355,'_wp_old_date','2024-04-17'),
(1207,279,'_wp_old_date','2024-04-16'),
(1208,356,'_wp_trash_meta_status','publish'),
(1209,356,'_wp_trash_meta_time','1713891072'),
(1210,356,'_wp_desired_post_slug','wefefaef'),
(1211,279,'_wp_trash_meta_status','publish'),
(1212,279,'_wp_trash_meta_time','1713891303'),
(1213,279,'_wp_desired_post_slug','new-guitar'),
(1214,357,'value','200000'),
(1215,357,'_value','field_661720f379cce'),
(1216,357,'type','outcome'),
(1217,357,'_type','field_661ec08f58127'),
(1218,358,'value','10000'),
(1219,358,'_value','field_661720f379cce'),
(1220,358,'type','income'),
(1221,358,'_type','field_661ec08f58127'),
(1222,359,'value','20000'),
(1223,359,'_value','field_661720f379cce'),
(1224,359,'type','income'),
(1225,359,'_type','field_661ec08f58127'),
(1226,360,'value','235235'),
(1227,360,'_value','field_661720f379cce'),
(1228,360,'type','outcome'),
(1229,360,'_type','field_661ec08f58127'),
(1230,360,'_wp_trash_meta_status','publish'),
(1231,360,'_wp_trash_meta_time','1713891500'),
(1232,360,'_wp_desired_post_slug','asefsaef'),
(1233,280,'_wp_trash_meta_status','publish'),
(1234,280,'_wp_trash_meta_time','1713899403'),
(1235,280,'_wp_desired_post_slug','salary'),
(1236,359,'_wp_trash_meta_status','publish'),
(1237,359,'_wp_trash_meta_time','1713899418'),
(1238,359,'_wp_desired_post_slug','salary-3'),
(1239,361,'value','10000'),
(1240,361,'_value','field_661720f379cce'),
(1241,361,'type','income'),
(1242,361,'_type','field_661ec08f58127'),
(1243,362,'value','100000'),
(1244,362,'_value','field_661720f379cce'),
(1245,362,'type','income'),
(1246,362,'_type','field_661ec08f58127');
/*!40000 ALTER TABLE `wp_postmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_posts`
--

DROP TABLE IF EXISTS `wp_posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT 0,
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext NOT NULL,
  `post_title` text NOT NULL,
  `post_excerpt` text NOT NULL,
  `post_status` varchar(20) NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) NOT NULL DEFAULT 'open',
  `post_password` varchar(255) NOT NULL DEFAULT '',
  `post_name` varchar(200) NOT NULL DEFAULT '',
  `to_ping` text NOT NULL,
  `pinged` text NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT 0,
  `guid` varchar(255) NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT 0,
  `post_type` varchar(20) NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`(191)),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=InnoDB AUTO_INCREMENT=363 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_posts`
--

LOCK TABLES `wp_posts` WRITE;
/*!40000 ALTER TABLE `wp_posts` DISABLE KEYS */;
INSERT INTO `wp_posts` VALUES
(1,1,'2024-04-10 23:22:40','2024-04-10 23:22:40','<!-- wp:paragraph -->\n<p>Welcome to WordPress. This is your first post. Edit or delete it, then start writing!</p>\n<!-- /wp:paragraph -->','Hello world!','','trash','open','open','','hello-world__trashed','','','2024-04-10 23:23:20','2024-04-10 23:23:20','',0,'http://localhost:8080/?p=1',0,'post','',1),
(2,1,'2024-04-10 23:22:40','2024-04-10 23:22:40','<!-- wp:paragraph -->\n<p>This is an example page. It\'s different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>Hi there! I\'m a bike messenger by day, aspiring actor by night, and this is my website. I live in Los Angeles, have a great dog named Jack, and I like pi&#241;a coladas. (And gettin\' caught in the rain.)</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>...or something like this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickeys to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>As a new WordPress user, you should go to <a href=\"http://localhost:8080/wp-admin/\">your dashboard</a> to delete this page and create new pages for your content. Have fun!</p>\n<!-- /wp:paragraph -->','Sample Page','','trash','closed','open','','sample-page__trashed','','','2024-04-10 23:23:20','2024-04-10 23:23:20','',0,'http://localhost:8080/?page_id=2',0,'page','',0),
(3,1,'2024-04-10 23:22:40','2024-04-10 23:22:40','<!-- wp:heading -->\n<h2 class=\"wp-block-heading\">Who we are</h2>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: </strong>Our website address is: http://localhost:8080.</p>\n<!-- /wp:paragraph -->\n<!-- wp:heading -->\n<h2 class=\"wp-block-heading\">Comments</h2>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: </strong>When visitors leave comments on the site we collect the data shown in the comments form, and also the visitor&#8217;s IP address and browser user agent string to help spam detection.</p>\n<!-- /wp:paragraph -->\n<!-- wp:paragraph -->\n<p>An anonymized string created from your email address (also called a hash) may be provided to the Gravatar service to see if you are using it. The Gravatar service privacy policy is available here: https://automattic.com/privacy/. After approval of your comment, your profile picture is visible to the public in the context of your comment.</p>\n<!-- /wp:paragraph -->\n<!-- wp:heading -->\n<h2 class=\"wp-block-heading\">Media</h2>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: </strong>If you upload images to the website, you should avoid uploading images with embedded location data (EXIF GPS) included. Visitors to the website can download and extract any location data from images on the website.</p>\n<!-- /wp:paragraph -->\n<!-- wp:heading -->\n<h2 class=\"wp-block-heading\">Cookies</h2>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: </strong>If you leave a comment on our site you may opt-in to saving your name, email address and website in cookies. These are for your convenience so that you do not have to fill in your details again when you leave another comment. These cookies will last for one year.</p>\n<!-- /wp:paragraph -->\n<!-- wp:paragraph -->\n<p>If you visit our login page, we will set a temporary cookie to determine if your browser accepts cookies. This cookie contains no personal data and is discarded when you close your browser.</p>\n<!-- /wp:paragraph -->\n<!-- wp:paragraph -->\n<p>When you log in, we will also set up several cookies to save your login information and your screen display choices. Login cookies last for two days, and screen options cookies last for a year. If you select &quot;Remember Me&quot;, your login will persist for two weeks. If you log out of your account, the login cookies will be removed.</p>\n<!-- /wp:paragraph -->\n<!-- wp:paragraph -->\n<p>If you edit or publish an article, an additional cookie will be saved in your browser. This cookie includes no personal data and simply indicates the post ID of the article you just edited. It expires after 1 day.</p>\n<!-- /wp:paragraph -->\n<!-- wp:heading -->\n<h2 class=\"wp-block-heading\">Embedded content from other websites</h2>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: </strong>Articles on this site may include embedded content (e.g. videos, images, articles, etc.). Embedded content from other websites behaves in the exact same way as if the visitor has visited the other website.</p>\n<!-- /wp:paragraph -->\n<!-- wp:paragraph -->\n<p>These websites may collect data about you, use cookies, embed additional third-party tracking, and monitor your interaction with that embedded content, including tracking your interaction with the embedded content if you have an account and are logged in to that website.</p>\n<!-- /wp:paragraph -->\n<!-- wp:heading -->\n<h2 class=\"wp-block-heading\">Who we share your data with</h2>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: </strong>If you request a password reset, your IP address will be included in the reset email.</p>\n<!-- /wp:paragraph -->\n<!-- wp:heading -->\n<h2 class=\"wp-block-heading\">How long we retain your data</h2>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: </strong>If you leave a comment, the comment and its metadata are retained indefinitely. This is so we can recognize and approve any follow-up comments automatically instead of holding them in a moderation queue.</p>\n<!-- /wp:paragraph -->\n<!-- wp:paragraph -->\n<p>For users that register on our website (if any), we also store the personal information they provide in their user profile. All users can see, edit, or delete their personal information at any time (except they cannot change their username). Website administrators can also see and edit that information.</p>\n<!-- /wp:paragraph -->\n<!-- wp:heading -->\n<h2 class=\"wp-block-heading\">What rights you have over your data</h2>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: </strong>If you have an account on this site, or have left comments, you can request to receive an exported file of the personal data we hold about you, including any data you have provided to us. You can also request that we erase any personal data we hold about you. This does not include any data we are obliged to keep for administrative, legal, or security purposes.</p>\n<!-- /wp:paragraph -->\n<!-- wp:heading -->\n<h2 class=\"wp-block-heading\">Where your data is sent</h2>\n<!-- /wp:heading -->\n<!-- wp:paragraph -->\n<p><strong class=\"privacy-policy-tutorial\">Suggested text: </strong>Visitor comments may be checked through an automated spam detection service.</p>\n<!-- /wp:paragraph -->\n','Privacy Policy','','draft','closed','open','','privacy-policy','','','2024-04-10 23:22:40','2024-04-10 23:22:40','',0,'http://localhost:8080/?page_id=3',0,'page','',0),
(4,0,'2024-04-10 23:23:20','2024-04-10 23:23:20','<!-- wp:paragraph -->\n<p>Welcome to WordPress. This is your first post. Edit or delete it, then start writing!</p>\n<!-- /wp:paragraph -->','Hello world!','','inherit','closed','closed','','1-revision-v1','','','2024-04-10 23:23:20','2024-04-10 23:23:20','',1,'http://localhost:8080/?p=4',0,'revision','',0),
(5,0,'2024-04-10 23:23:20','2024-04-10 23:23:20','<!-- wp:paragraph -->\n<p>This is an example page. It\'s different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>Hi there! I\'m a bike messenger by day, aspiring actor by night, and this is my website. I live in Los Angeles, have a great dog named Jack, and I like pi&#241;a coladas. (And gettin\' caught in the rain.)</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>...or something like this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickeys to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>As a new WordPress user, you should go to <a href=\"http://localhost:8080/wp-admin/\">your dashboard</a> to delete this page and create new pages for your content. Have fun!</p>\n<!-- /wp:paragraph -->','Sample Page','','inherit','closed','closed','','2-revision-v1','','','2024-04-10 23:23:20','2024-04-10 23:23:20','',2,'http://localhost:8080/?p=5',0,'revision','',0),
(8,0,'2019-11-22 15:58:35','2019-11-22 15:58:35','<!-- wp:heading --><h2>Who we are</h2><!-- /wp:heading --><!-- wp:paragraph --><p>Our website address is: http://localhost:8080.</p><!-- /wp:paragraph --><!-- wp:heading --><h2>What personal data we collect and why we collect it</h2><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>Comments</h3><!-- /wp:heading --><!-- wp:paragraph --><p>When visitors leave comments on the site we collect the data shown in the comments form, and also the visitor&#8217;s IP address and browser user agent string to help spam detection.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>An anonymized string created from your email address (also called a hash) may be provided to the Gravatar service to see if you are using it. The Gravatar service privacy policy is available here: https://automattic.com/privacy/. After approval of your comment, your profile picture is visible to the public in the context of your comment.</p><!-- /wp:paragraph --><!-- wp:heading {\"level\":3} --><h3>Media</h3><!-- /wp:heading --><!-- wp:paragraph --><p>If you upload images to the website, you should avoid uploading images with embedded location data (EXIF GPS) included. Visitors to the website can download and extract any location data from images on the website.</p><!-- /wp:paragraph --><!-- wp:heading {\"level\":3} --><h3>Contact forms</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>Cookies</h3><!-- /wp:heading --><!-- wp:paragraph --><p>If you leave a comment on our site you may opt-in to saving your name, email address and website in cookies. These are for your convenience so that you do not have to fill in your details again when you leave another comment. These cookies will last for one year.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>If you visit our login page, we will set a temporary cookie to determine if your browser accepts cookies. This cookie contains no personal data and is discarded when you close your browser.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>When you log in, we will also set up several cookies to save your login information and your screen display choices. Login cookies last for two days, and screen options cookies last for a year. If you select &quot;Remember Me&quot;, your login will persist for two weeks. If you log out of your account, the login cookies will be removed.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>If you edit or publish an article, an additional cookie will be saved in your browser. This cookie includes no personal data and simply indicates the post ID of the article you just edited. It expires after 1 day.</p><!-- /wp:paragraph --><!-- wp:heading {\"level\":3} --><h3>Embedded content from other websites</h3><!-- /wp:heading --><!-- wp:paragraph --><p>Articles on this site may include embedded content (e.g. videos, images, articles, etc.). Embedded content from other websites behaves in the exact same way as if the visitor has visited the other website.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>These websites may collect data about you, use cookies, embed additional third-party tracking, and monitor your interaction with that embedded content, including tracking your interaction with the embedded content if you have an account and are logged in to that website.</p><!-- /wp:paragraph --><!-- wp:heading {\"level\":3} --><h3>Analytics</h3><!-- /wp:heading --><!-- wp:heading --><h2>Who we share your data with</h2><!-- /wp:heading --><!-- wp:heading --><h2>How long we retain your data</h2><!-- /wp:heading --><!-- wp:paragraph --><p>If you leave a comment, the comment and its metadata are retained indefinitely. This is so we can recognize and approve any follow-up comments automatically instead of holding them in a moderation queue.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>For users that register on our website (if any), we also store the personal information they provide in their user profile. All users can see, edit, or delete their personal information at any time (except they cannot change their username). Website administrators can also see and edit that information.</p><!-- /wp:paragraph --><!-- wp:heading --><h2>What rights you have over your data</h2><!-- /wp:heading --><!-- wp:paragraph --><p>If you have an account on this site, or have left comments, you can request to receive an exported file of the personal data we hold about you, including any data you have provided to us. You can also request that we erase any personal data we hold about you. This does not include any data we are obliged to keep for administrative, legal, or security purposes.</p><!-- /wp:paragraph --><!-- wp:heading --><h2>Where we send your data</h2><!-- /wp:heading --><!-- wp:paragraph --><p>Visitor comments may be checked through an automated spam detection service.</p><!-- /wp:paragraph --><!-- wp:heading --><h2>Your contact information</h2><!-- /wp:heading --><!-- wp:heading --><h2>Additional information</h2><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>How we protect your data</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>What data breach procedures we have in place</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>What third parties we receive data from</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>What automated decision making and/or profiling we do with user data</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>Industry regulatory disclosure requirements</h3><!-- /wp:heading -->','Privacy Policy','','draft','closed','open','','privacy-policy','','','2019-11-22 15:58:35','2019-11-22 15:58:35','',0,'http://localhost:8080/?page_id=3',0,'page','',0),
(12,0,'2024-04-10 23:23:21','2024-04-10 23:23:21',' ','','','publish','closed','closed','','12','','','2024-04-10 23:23:21','2024-04-10 23:23:21','',0,'http://localhost:8080/2024/04/10/',3,'nav_menu_item','',0),
(13,0,'2024-04-10 23:23:21','2024-04-10 23:23:21','','About the Starter Kit','','publish','closed','closed','','about-the-starter-kit','','','2024-04-10 23:23:21','2024-04-10 23:23:21','',0,'http://localhost:8080/2024/04/10/about-the-starter-kit/',4,'nav_menu_item','',0),
(14,0,'2019-11-13 15:22:02','2019-11-13 15:22:02','<!-- wp:heading -->\n<h2 class=\"wp-block-heading\">What’s under the hood:</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>A automated installer which bootstraps a core WordPress installation that provides an established, stable REST API.w</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>A plugin which exposes a newer, in-progress GraphQL API for WordPress.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>The WordPress plugins you need to set up custom post types and custom fields (Advanced Custom Fields and Custom Post Type UI).</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Plugins which expose those custom fields and WordPress menus in the WP REST API (ACF to WP API and WP-REST-API V2 Menus).</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>JWT authentication plugins: JWT WP REST and JWT WP GraphQL.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>All the starter WordPress theme code and settings headless requires, including pretty permalinks, CORS Allow-Origin headers, and useful logging functions for easy debugging.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>A mechanism for easily importing data from an existing WordPress installation anywhere on the web using WP Migrate DB Pro and its accompanying plugins (license required).</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>A sample, starter frontend React app powered by GraphQL.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Another sample, starter frontend React app, server-side rendered via Next.js, powered by the WP REST API.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Docker containers and scripts to manage them, for easily running the frontend React apps and backend locally or deploying it to any hosting provider with Docker support.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Manage your content in WordPress and serve it using React. Too good to be true? <a href=\"http://localhost:8080/wp-admin/post.php?post=14&amp;action=edit\">Edit this page</a> and see for yourself!</p>\n<!-- /wp:paragraph -->','Congratulations!','','publish','closed','closed','','welcome','','','2024-04-11 00:35:41','2024-04-11 00:35:41','',0,'http://localhost:8080/welcome/',0,'page','',0),
(15,1,'2019-11-20 18:19:48','2019-11-20 18:19:48','<!-- wp:paragraph -->\n<p>If you interact with teams building software, or you sit within earshot of software engineers, you’ve probably heard them talking about <a href=\"https://graphql.org/\">GraphQL</a>. Developers get pretty hyped up about new technologies, especially ones that help them build software faster and with fewer bugs. But what is GraphQL, and should you care? In <a href=\"https://postlight.com/work\">our work</a> building software for our clients, more and more frequently we’ve been recommending and adopting GraphQL. Here’s why.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>The Origins of GraphQL</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Back in 2011, the smartphone revolution was in full swing. With the introduction of the iPhone and subsequent Android ecosystem, Facebook shifted significant focus into optimizing their mobile experience. That’s when Facebook’s engineering team faced a problem: Mobile phone data connections had high latency and low bandwidth, and that resulted in a slow user experience.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>To render the Facebook News Feed, for example, a mobile device would need to make several requests for different kinds of data to the servers, like: “Get me all the latest stories for this user’s feed. Okay now for each of those, get the comments associated with them. Now for each comment, get me all the replies and the name and photo of the person who posted them.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>All these different requests resulted to several seconds of load time, which meant impatient users spent less time on Facebook. To solve this problem, Facebook engineers set out to define a way to request <em>all</em> the data needed to render a screen in one shot. The result was a new query language and specification called <a href=\"https://graphql.org/\">GraphQL</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>What Is GraphQL?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>At its core, GraphQL is a query language (QL) for APIs. It lets apps like the ones on your phone or your web browser to ask for exactly the data they need from the server–no more, and no less–and receive it all in a single request, so things like your news feed show up fast.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In GraphQL, everything revolves around a <a href=\"https://graphql.org/learn/schema/\">schema</a>, which represents all the data in your system and what type of information it is. For example, a news story headline is a string of characters, but total number of likes is an integer.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In GraphQL, data is represented as a graph, which means each piece of data is related to the others in a meaningful way. For example, the total number of likes is related to a post. Another total number of likes is related to a comment on that post. Using this graph, data engineers can model complex relationships in a declarative way, which ensures no one will mistake the total likes on a comment for the total likes on a post. This reduces errors, and makes it easy for engineers to quickly understand what data is available from a GraphQL API and build against it.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>After they used it in production for several years, Facebook open-sourced GraphQL in 2015, and it was met with a tide of enthusiasm. It turns out GraphQL solves a lot of problems beyond fetching data on low latency mobile connections.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The GraphQL ecosystem has exploded in innovation and found many uses throughout the industry. Companies large and small have adopted GraphQL, including companies like Yelp, Intuit, and GitHub.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>If Facebook and GitHub Use GraphQL, Should My Team?</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>When adopting any new technology, it’s important to consider the benefits and drawbacks of it, and what they mean for your team. At Postlight, we work with our clients to design backend services that best serve their needs.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Over the last few years, we’ve used GraphQL to power all sorts of apps, from an email client to CRMs to content management systems. As we build and ship GraphQL backends to production, our confidence in the long term viability of GraphQL continues to increase. GraphQL is also appearing in more of our open source projects. <a href=\"https://postlight.com/labs/glide-salesforce-graphql\">Glide</a> helps developers rapidly prototype Salesforce integrations using GraphQL, and our <a href=\"https://postlight.com/labs/wordpress-react-starter-kit\">WordPress + React Starter Kit</a> now offers GraphQL out of the box.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When we compare GraphQL to other API designs, one of the most noticeable differences we see is that GraphQL tooling increases engineering productivity and time-to-market. Tools like <a href=\"https://www.graphile.org/postgraphile/\">PostGraphile</a> help engineers leverage hard-won SQL knowledge to produce a consistent and powerful GraphQL API based on their relational data model. For a more traditional application server environment, <a href=\"https://apollographql.com/docs/apollo-server/\">Apollo Server</a> is great for applications that talk to multiple data sources or internal services.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>At Postlight we build many frontend projects with <a href=\"https://postlight.com/trackchanges/choosing-react-first\">React</a>. Once our backend teams have established part of the data model, tools like <a href=\"https://www.apollographql.com/\">Apollo</a>’s excellent React client have the frontend engineers executing queries within minutes. They may also fire up <a href=\"https://github.com/graphql/graphiql\">GraphiQL</a> to explore the schema and execute queries. We’ve also adopted the concept of <a href=\"https://www.formidable.com/blog/2019/strong-typing/\">end-to-end types</a> using TypeScript. End-to-end types expose statically-typed GraphQL interfaces directly in a frontend codebase so that incorrect queries and type errors are a thing of the past.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Along with engineering productivity advances, GraphQL has also increased the consistency of backend services. Because GraphQL represents data as a statically-typed graph, resources are consistent and always return what the client asked for. GraphQL has also helped solidify best practices around complex API design problems like <a href=\"https://facebook.github.io/relay/graphql/connections.htm\">pagination</a>. Frontend and mobile developers are spending less time creating or learning bespoke pagination interfaces or fighting with inconsistent API endpoints.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>So Is GraphQL a Silver Bullet?</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Not so fast. I’ve painted a pretty picture of GraphQL so far, but it’s not without challenges. If we take a look back at history, it’s interesting to see how GraphQL differs from other API designs. For sake of time, let’s focus on the most ubiquitous network API design–<a href=\"https://restfulapi.net/\">HTTP REST APIs</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>REST became extremely popular due to its resource-oriented design and simplicity. REST heavily leverages HTTP’s semantics for how it works, while SOAP and other designs before it were transport-agnostic. Relying on HTTP has some drawbacks but also a lot of benefits. For example, a well designed REST API can be cached using powerful HTTP caching strategies that can lead to low-latency cached content close to the end user. GraphQL uses the POST HTTP method by default, which is not typically cached in the same way. In order to utilize some of these advanced HTTP caching strategies the community has come up with techniques like <a href=\"https://www.apollographql.com/docs/apollo-server/performance/apq/\">Automatic Persisted Queries</a> and a larger reliance on client-side caching.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>GraphQL also introduces some complexity into your system when resolving data from an API request. GraphQL requires code to parse and execute a query and logic to map that query to underline data stores or services. REST API endpoints, on the other hand, can be lean and small. For some projects, that maybe the right choice. Companies like Airbnb are <a href=\"https://medium.com/airbnb-engineering/reconciling-graphql-and-thrift-at-airbnb-a97e8d290712\">facing (and helping solve) problems</a> in this area and sharing the results with the community.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>All in all, we’ve been pretty happy with the increased productivity and benefits of the GraphQL ecosystem. Want to discuss the pros and cons of API design? Drop us a line <a href=\"mailto:hello@postlight.com\">hello@postlight.com</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em><a href=\"https://postlight.com/about/aaron-ortbals\">Aaron Ortbals</a> is a Partner and Director of Engineering at Postlight.</em></p>\n<!-- /wp:paragraph -->','What Do You Need to Know About GraphQL?','','trash','open','open','','what-do-you-need-to-know-about-graphql__trashed','','','2024-04-14 01:49:27','2024-04-14 01:49:27','',0,'http://localhost:8080/?p=12',0,'post','',0),
(16,1,'2019-11-20 18:22:14','2019-11-20 18:22:14','<!-- wp:paragraph -->\n<p>We talk a lot about <a href=\"https://trackchanges.postlight.com/building-awesome-cms-f034344d8ed#.p7mhgk5v4\" target=\"_blank\" rel=\"noopener noreferrer\">content management systems</a> at Postlight, often in the context of a specific client’s needs, and sometimes, as a question about our general philosophy around publishing. And we also build a lot of custom tools for solving very tricky publishing problems—a good example is <a href=\"https://postlight.com/work/instant\" target=\"_blank\" rel=\"noopener noreferrer\">Instant.me</a>, which benefited from a custom CMS, fully oriented around a specific workflow.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But not every nail needs a fully-custom hammer. During our CMS conversations, inevitably I am the person in the room who brings up <a href=\"http://wordpress.org\" target=\"_blank\" rel=\"noopener noreferrer\">WordPress</a>. Then, my teammates put on their most patient facial expressions and listen to me make the argument.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Ultimately, as a director, I am obligated to consider all the technologies that can help our client achieve our goals—including the old, boring ones. Enter WordPress.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>WordPress is not particularly exciting, intrinsically modern, or lightweight. It’s a 13-year-old monolithic web application that powers 25% of the web and probably 30% of web spam. But, a whole lot of the time, WordPress is the right framework.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Since I started here about six months ago, I’ve helped ship two major WordPress projects.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Last week, we helped launch a brand new, reimagined web site for <a href=\"https://news.vice.com\" target=\"_blank\" rel=\"noopener noreferrer\">VICE News</a> (in parallel with the premier of <a href=\"http://www.hbo.com/vice\" target=\"_blank\" rel=\"noopener noreferrer\">VICE News Tonight on HBO</a>). The web site mirrors the philosophy and aesthetic of the TV show, featuring a stream of splashy graphics, bold headlines, videos, GIFs, and interactives, with customizable animations that trigger as the user browses the stream.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The key thing about <a href=\"https://postlight.com/work/vice-news\">our work on VICE News</a> is that we were on a <em>very </em>accelerated schedule to build and launch this ambitious content quickly. We needed a running start. A newsroom filled with reporters publishes new content on the site on an hourly basis—so using a robust piece of software with roots in blogging isn’t a surprising choice.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>There is a lot of ambition long-term for VICE News, and it’s possible—even likely!—it will outgrow WordPress. Which is fine. If you design a WordPress platform carefully, it’s possible to migrate the posts and artwork to another platform later. But given schedule and constraints—it was an obvious choice for now.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>It’s pretty remarkable that in 2016 we’re still building fancy web sites for modern media companies and startups using WordPress. And yet.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Four Good WordPress Things</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>I have a few things I really like about WordPress:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul>\n<li><strong>Thirteen years of features and development.</strong> WordPress core gives you so much out of the box: post and page creation, user permissions and role management, categories, tags, content revision history, drafting, publishing, previewing, content-scheduling, media management with image cropping and rotation, post locking when another editor is working on a piece, multiple sites, and WYSIWYG theming, to name a few.</li>\n<li><strong>Deep community support and documentation.</strong> You never want to be the first person trying to solve a problem with a piece of software, and you never are with WordPress. The community is so established and mature — and most of its users are writers — that at least 300 people have tried to do the thing you’re trying to do and wrote about the solution they found online.</li>\n<li><strong>A site that’s easy to hire for (whether engineering or editorial) and easy to host.</strong> WordPress’ market share means that anyone who has published anything online feels right at home looking at the familiar and comforting grays and blues of the WordPress publishing interface. Likewise, a mature market of WP developers, service providers, premium themes, and plugins has grown up around WordPress, as well as plentiful plug-and-play managed hosting options.</li>\n<li><strong>New features are a plugin away.</strong> When WordPress core is lacking, plugins fill the gap. If you need to integrate with Slack, add multiple authors to a byline, publish AMP versions of your content, auto-generate a sitemap, expose post data in a REST API, customize your site experience based on your users’s location, control in-article ad placement, or create custom objects or fields, there’s a plugin for that. Plus, building your own plugin from scratch is straightforward.</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Four Bad WordPress Things</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>But it’s not all good. When you use WordPress, you also get a lot of baggage. My teammate <a href=\"https://medium.com/u/71d6cc6b0b1f\" target=\"_blank\" rel=\"noopener noreferrer\">Dusty Matthews</a> — who was responsible for the previous WordPress incarnation of <a href=\"http://theawl.com\" target=\"_blank\" rel=\"noopener noreferrer\">The Awl</a> network of sites — has a canned response whenever someone has a WordPress WTF moment. “It’s a WordPress thing,” he sighs, a knowing look in his eye. Here are the four killer WordPress issues.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul>\n<li><strong>WP’s “everything is a post” approach feels like hammering a round peg into a square hole</strong> and then trying to retrieve it again undamaged.</li>\n<li><a href=\"https://codex.wordpress.org/The_Loop\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>The Loop</strong></a><strong> bites you in the ass at least a half dozen times per project. </strong>Adding blocks of raw PHP in WordPress templates can drive someone who believes in a clean separation of view and logic absolutely batty.</li>\n<li><strong>It’s slow. </strong>It takes a while to load a page and do all the things WordPress does, sometimes seconds per page—which won’t scale. So you have to build in layers of caching—and that means that…</li>\n<li><strong>It’s really, really hard to get consistent caching logic. </strong>This one can really bite you. You end up juggling caching logic in your head and figuring out strategies for breaking the cache when news breaks and a big new story goes up right now. You’d think this could be a solved problem—but when you factor in all the different systems and hosting solutions required to ship WordPress at scale, caching remains a tricky consideration to navigate.</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Modernizing, Slowly</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>WordPress is improving, quickly in small ways, but slowly—very, very, slowly — in big ways. Matt Mullenweg gave the WordPress community a telling homework assignment for 2016: <a href=\"http://wesbos.com/learn-javascript/\" target=\"_blank\" rel=\"noopener noreferrer\">“Learn JavaScript, deeply.”</a> Automattic’s <a href=\"https://developer.wordpress.com/2015/11/23/the-story-behind-the-new-wordpress-com/\" target=\"_blank\" rel=\"noopener noreferrer\">React-based Calypso rewrite</a> of the WordPress admin is a clear sign that at least the leaders of the community are trying to reimagine what a WordPress born in 2016 would look like. Eventually? Soon? The <a href=\"http://v2.wp-api.org/\" target=\"_blank\" rel=\"noopener noreferrer\">WP REST API</a> will be part of core so that <a href=\"https://pantheon.io/decoupled-cms\" target=\"_blank\" rel=\"noopener noreferrer\">headless WordPress</a> implementations, which decouple the backend and frontend, will become less cutting-edge and much more commonplace.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The <a href=\"https://github.com/postlight/awesome-cms\" target=\"_blank\" rel=\"noopener noreferrer\">universe of content management systems</a> continues to expand, and yes, using WordPress often feels like a throwback to 2006. It’s also often the right tool for the job, and it’s incredibly fast to get it up and running—plus editors and writers often know it well and like using it.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>We love doing custom work that solves really difficult, thorny problems, and the way we see WordPress is that it solves a lot of boring, well-known problems so that we can focus on creating great experiences and facing new challenges.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Gina Trapani is a director of engineering at Postlight. </em></p>\n<!-- /wp:paragraph -->','WordPress Without Shame','','trash','open','open','','wordpress-without-shame__trashed','','','2024-04-14 01:49:27','2024-04-14 01:49:27','',0,'http://localhost:8080/?p=14',0,'post','',0),
(17,1,'2019-11-20 18:24:13','2019-11-20 18:24:13','<!-- wp:paragraph -->\n<p>Whenever a team proposes the programming language, architecture or framework of choice to tackle a problem, my first instinct is to respond with: <em>Why bother?</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I’m not trying to be contrarian. I’m also not trying to hold onto the past while the engineers pitch the latest and greatest tech to solve a problem. I’m just trying to inject some pragmatism into the conversation. <em>Those early decisions are always the most impactful and therefore potentially the most costly. </em>The decisions made in those early meetings will establish the path and trajectory for the rest of the project.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The old thing (in this case, a monolithic CMS <a href=\"https://postlight.com/trackchanges/wordpress-without-shame\">like WordPress</a> that produced regular HTML web pages) might be boring but it works. Provably works. And so when it came time to rebuild and redesign <a href=\"https://postlight.com/\">postlight.com</a>, I had to say it: <em>Why bother with headless WordPress?</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>What is a headless CMS?</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Put simply, a headless CMS doesn’t bother with the templates. Or with making pages. There’s an entire world of templates out there. Templates are essentially web page “containers” that are wired up so that when you hit publish, WordPress “pours” its content into the right places of the page and serves it up to the world.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>“Headless” means it serves up the content as raw data via an API. WordPress is perfectly suited to serve content this way because it has an <a href=\"https://developer.wordpress.org/rest-api/\">API ready to go</a> out of the box. The work then shifts to building a front-end that takes that raw content and puts it into various assets for consumption. This often occurs via some flavor of JavaScript framework. <a href=\"https://postlight.com/trackchanges/choosing-react-first\">React</a> is the framework of choice for many these days.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Yeah, but why bother?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Well, there are many good reasons to use a headless CMS:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li><strong>Going beyond the web page. </strong>The CMS is no longer just for publishing anymore. Content is doing <em>all sorts of things </em>today. The article has given way to many flavors of content packaging. By decoupling it from any single template, all sorts of possibilities open up. For example, if you’re looking to deliver your content via an <a href=\"https://www.amazon.com/alexa-skills/b?ie=UTF8&amp;node=13727921011\">Alexa skill</a> or integrated into a mobile app, a headless CMS makes a whole lot of sense.</li><li><strong>Speed. </strong>By leveraging frameworks like React, you can be much more targeted about which bits of the page have to come over the wire instead of delivering the entire page each time.</li><li><strong>New and improved experiences. </strong>Did you ever land on one of those news sites that just keeps giving articles forever as you scroll? That’s a chore with static templates. By allowing content to progressively come in over the wire as you scroll, you can pull off a pretty slick experience.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>But I’m building a marketing website. Do I really need a headless CMS?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Ah, now we’re getting down to it. The answer is: Maybe not. The constant temptation with new technology (headless WordPress isn’t even that new anymore, but it’s certainly not as well-defined as traditional WordPress) is to use it. While I could list out the disadvantages of a headless CMS here, that isn’t fair either.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The best way to make this call is to ask a few questions and let that drive your decision:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Will your content make its way out into world in various shapes and forms (e.g. IoT, social, web, mobile app)? If so, then you should be leaning towards headless.</li><li>Do you have the skill sets at your disposal to build a headless CMS platform? This usually requires people that are versed in more modern frameworks and technologies (e.g. React).</li><li>Will your platform need to shift and change a whole lot? If your CMS is set to position you to do all sorts of things with your content then you’re going to want the flexibility of deploying teams to leverage that API for all sorts of purposes (microsites, etc.).</li><li>Is your CMS big? In other words, can more than one team take advantage of that API and run parallel with other teams?</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>But all of these roll up to one big, giant, mega-question: <em>Can you explain why this is a good idea in terms of growth?</em> Because with headless, you’re giving up simplicity, and you need to get something in return. A faster development cycle, a better experience on mobile out of the box, and an increased likelihood that more people will see and engage with the content we produce.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Sites and platforms are funny in that it can be sort of dumb to see them in terms of ROI. Websites are about getting a return on other investments: Investments in content, in design, in building a team.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If you can’t make that case, and not just argue it but really prove it out, you should use what’s familiar. Ultimately this is a business decision.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>But am I good for five years? Ten years?</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Good technology decisions look ahead. There is no doubt that a headless CMS best positions you for those unknown demands down the road. Unless you’re just standing up a basic <em>Home/About Us/Contact Us-</em>style marketing site, you should seriously consider a headless CMS path. So while the hard questions are worth asking, it’s hard to argue against the strategic flexibility of looking ahead.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>If you’re interested in diving in and exploring the world of headless WordPress, our popular <a href=\"https://postlight.com/labs/wordpress-react-starter-kit\">Headless WordPress Starter Kit</a> is a great place to start. </em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em><a href=\"https://postlight.com/about/rich-ziade\">Rich Ziade</a> is president of Postlight, a full-service digital product studio in New York City. Email him at <a href=\"mailto:hello@postlight.com\">rich.ziade@postlight.com</a>.</em></p>\n<!-- /wp:paragraph -->','Why Bother with a Headless CMS?','','trash','open','open','','why-bother-with-a-headless-cms__trashed','','','2024-04-14 01:49:27','2024-04-14 01:49:27','',0,'http://localhost:8080/?p=16',0,'post','',0),
(29,0,'2019-11-20 20:14:32','2019-11-20 20:14:32','<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/dash-for-slack\">Dash for Slack</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Gather your team in a temporary Slack channel to accelerate decisions through deadlines.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/tinysheet\">Tinysheet</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Mobile-first mini spreadsheet that\'s lightweight, private, and powerful.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/rfp-builder\">RFP Builder</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Write a Request for Proposal for your next digital product in minutes.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/liftoff-airtable-cms\">Liftoff: Airtable CMS</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Easily create a static website powered by Airtable.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/glide-salesforce-graphql\">Glide: Salesforce GraphQL</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Modernize Salesforce API access with GraphQL.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/fyre-ipsum\">Fyre Ipsum</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Lorem ipsum based on the Fyre Festival pitch deck—or any content on the web.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/cloudflare-worker-app-kit\">Cloudflare Worker App Kit</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Get dynamic content at static speeds in your app with Cloudflare Workers.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/react-google-sheet-to-chart\">React Google Sheet to Chart</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Easily embed custom charts based on a Google Sheet in your React app.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/mercury\">Mercury</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Extract meaningful content from the chaos of web pages.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/wordpress-react-starter-kit\">WordPress + React Starter Kit</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Spin up a WordPress-powered React app in one step.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/node-js-typescript-starter-kit\">Node.js + TypeScript Starter Kit</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Skip JavaScript tooling setup and get right to coding.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/modern-serverless-starter-kit\">Modern Serverless Starter Kit</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Get your next serverless JavaScript function deployed in seconds.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/lux\">Lux</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Build scalable, Node.js-powered REST APIs with almost no code.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/knight-foundation\">Knight Foundation</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Turn raw data into socially relevant insights.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/awesome-cms\">Awesome CMS</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">A constantly-updated directory of content management systems.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/gif-battle\">GIF Battle</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Challenge your friends to a battle of GIFs.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<figure class=\"pl-block-lab-previews__post\">\n<figcaption class=\"pl-block-lab-previews__card-content\">\n<h2><a class=\"pl-block-lab-previews__link\" href=\"https://postlight.com/labs/sotu-for-slack\">SOTU for Slack</a></h2>\n<p class=\"pl-block-lab-previews__abstract\">Get a snapshot of every project in your company—without all the digging.</p>\n</figcaption>\n</figure>\n<!-- /wp:html -->','Labs by Postlight','','publish','closed','closed','','labs-by-postlight','','','2019-11-20 20:14:32','2019-11-20 20:14:32','',0,'http://localhost:8080/?page_id=29',0,'page','',0),
(38,0,'2019-11-20 21:31:10','2019-11-20 21:31:10','<!-- wp:heading {\"level\":3} -->\n<h3>Yes, we’re hiring</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>When you partner with Postlight we assemble an experienced interdisciplinary team to make your vision real.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p> Postlight is the sum of its people. From day one, we committed to building a place where people who love their craft want to come and grow. We hire incredible talent and we do everything we can to foster a collaborative, supportive environment where everyone can do their best work.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<div class=\"mt5 mb6\">\n<a href=\"https://postlight.com/careers\" class=\"round-btn invert ba bw1 pv2 ph3\">View Open Positions</a>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p></p>\n<!-- /wp:paragraph -->','Postlight Careers','','publish','closed','closed','','postlight-careers','','','2019-11-20 21:31:10','2019-11-20 21:31:10','',0,'http://localhost:8080/?page_id=38',0,'page','',0),
(39,0,'2024-04-10 23:23:21','2024-04-10 23:23:21','','Home','','publish','closed','closed','','home','','','2024-04-10 23:23:21','2024-04-10 23:23:21','',0,'http://localhost:8080/2024/04/10/home/',1,'nav_menu_item','',0),
(44,0,'2019-11-22 16:07:12','2019-11-22 16:07:12','<!-- wp:group -->\n<div class=\"wp-block-group\"><div class=\"wp-block-group__inner-container\"><!-- wp:heading -->\n<h2>Platform Architecture</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>\n                                        API Design                                    </li><li>\n                                        Application Infrastructure                                    </li><li>\n                                        Server Architecture                                    </li><li>\n                                        Data Science                                    </li></ul>\n<!-- /wp:list -->\n\n<!-- wp:button {\"className\":\"round-btn pointer invert dib white ba bw1 pv2 ph3\"} -->\n<div class=\"wp-block-button round-btn pointer invert dib white ba bw1 pv2 ph3\"><a class=\"wp-block-button__link\" href=\"https://postlight.com/work\">Learn More</a></div>\n<!-- /wp:button --></div></div>\n<!-- /wp:group -->\n\n<!-- wp:group -->\n<div class=\"wp-block-group\"><div class=\"wp-block-group__inner-container\"><!-- wp:heading -->\n<h2>Product Strategy</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>\n                                        Competitive and User Research                                    </li><li>\n                                        Requirements Analysis                                    </li><li>\n                                        Product Management                                    </li><li>\n                                        Content Management                                    </li></ul>\n<!-- /wp:list -->\n\n<!-- wp:button {\"className\":\"round-btn pointer invert dib white ba bw1 pv2 ph3\"} -->\n<div class=\"wp-block-button round-btn pointer invert dib white ba bw1 pv2 ph3\"><a class=\"wp-block-button__link\" href=\"https://postlight.com/work\">Learn More</a></div>\n<!-- /wp:button --></div></div>\n<!-- /wp:group -->\n\n<!-- wp:group -->\n<div class=\"wp-block-group\"><div class=\"wp-block-group__inner-container\"><!-- wp:heading -->\n<h2>Product Design</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>\n                                        User Experience Design                                    </li><li>\n                                        Information Architecture                                    </li><li>\n                                        Web Design                                    </li><li>\n                                        Mobile App Design                                    </li></ul>\n<!-- /wp:list -->\n\n<!-- wp:button {\"className\":\"round-btn pointer invert dib white ba bw1 pv2 ph3\"} -->\n<div class=\"wp-block-button round-btn pointer invert dib white ba bw1 pv2 ph3\"><a class=\"wp-block-button__link\" href=\"https://postlight.com/work\">Learn More</a></div>\n<!-- /wp:button --></div></div>\n<!-- /wp:group -->\n\n<!-- wp:group -->\n<div class=\"wp-block-group\"><div class=\"wp-block-group__inner-container\"><!-- wp:heading -->\n<h2>Software Engineering</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>\n                                        API Development                                    </li><li>\n                                        React and React Native                                    </li><li>\n                                        Web Development                                    </li><li>\n                                        Mobile App Development                                    </li></ul>\n<!-- /wp:list -->\n\n<!-- wp:button {\"className\":\"round-btn pointer invert dib white ba bw1 pv2 ph3\"} -->\n<div class=\"wp-block-button round-btn pointer invert dib white ba bw1 pv2 ph3\"><a class=\"wp-block-button__link\" href=\"https://postlight.com/work\">Learn More</a></div>\n<!-- /wp:button --></div></div>\n<!-- /wp:group -->','Postlight Services','','publish','closed','closed','','postlight-services','','','2019-11-22 16:07:12','2019-11-22 16:07:12','',0,'http://localhost:8080/?page_id=44',0,'page','',0),
(45,0,'2024-04-10 23:23:22','2024-04-10 23:23:22','','Graphql2','','inherit','open','closed','','graphql2','','','2024-04-10 23:23:22','2024-04-10 23:23:22','',15,'http://localhost:8080/wp-content/uploads/2019/11/Graphql2.png',0,'attachment','image/png',0),
(46,0,'2024-04-10 23:23:24','2024-04-10 23:23:24','','19-word-press-without-shame-0','','inherit','open','closed','','19-word-press-without-shame-0','','','2024-04-10 23:23:24','2024-04-10 23:23:24','',16,'http://localhost:8080/wp-content/uploads/2019/11/19-word-press-without-shame-0.png',0,'attachment','image/png',0),
(47,0,'2024-04-10 23:23:25','2024-04-10 23:23:25','','cropped-hal-gatewood-tZc3vjPCk-Q-unsplash','','inherit','open','closed','','cropped-hal-gatewood-tzc3vjpck-q-unsplash','','','2024-04-10 23:23:25','2024-04-10 23:23:25','',17,'http://localhost:8080/wp-content/uploads/2019/11/cropped-hal-gatewood-tZc3vjPCk-Q-unsplash.jpg',0,'attachment','image/jpeg',0),
(48,0,'2024-04-10 23:23:26','2024-04-10 23:23:26','','careers-photo-opt','','inherit','open','closed','','careers-photo-opt','','','2024-04-10 23:23:26','2024-04-10 23:23:26','',38,'http://localhost:8080/wp-content/uploads/2019/11/careers-photo-opt.jpg',0,'attachment','image/jpeg',0),
(50,1,'2024-04-10 23:32:35','2024-04-10 23:32:35','a:12:{s:8:\"location\";a:1:{i:0;a:1:{i:0;a:3:{s:5:\"param\";s:9:\"post_type\";s:8:\"operator\";s:2:\"==\";s:5:\"value\";s:7:\"expense\";}}}s:8:\"position\";s:6:\"normal\";s:5:\"style\";s:7:\"default\";s:15:\"label_placement\";s:3:\"top\";s:21:\"instruction_placement\";s:5:\"label\";s:14:\"hide_on_screen\";s:0:\"\";s:11:\"description\";s:7:\"Expense\";s:12:\"show_in_rest\";i:1;s:15:\"show_in_graphql\";i:1;s:18:\"graphql_field_name\";s:7:\"expense\";s:37:\"map_graphql_types_from_location_rules\";i:0;s:13:\"graphql_types\";s:0:\"\";}','Expense','expense','publish','closed','closed','','group_661720f351d3d','','','2024-04-19 22:16:48','2024-04-19 22:16:48','',0,'http://localhost:8080/?post_type=acf-field-group&#038;p=50',0,'acf-field-group','',0),
(51,1,'2024-04-10 23:32:35','2024-04-10 23:32:35','a:14:{s:10:\"aria-label\";s:0:\"\";s:4:\"type\";s:6:\"number\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:1;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:15:\"show_in_graphql\";i:1;s:13:\"default_value\";s:0:\"\";s:3:\"min\";i:0;s:3:\"max\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:4:\"step\";s:0:\"\";s:7:\"prepend\";s:0:\"\";s:6:\"append\";s:0:\"\";}','Value','value','publish','closed','closed','','field_661720f379cce','','','2024-04-15 18:33:45','2024-04-15 18:33:45','',50,'http://localhost:8080/?post_type=acf-field&#038;p=51',0,'acf-field','',0),
(54,1,'2024-04-11 00:35:41','2024-04-11 00:35:41','<!-- wp:heading -->\n<h2 class=\"wp-block-heading\">What’s under the hood:</h2>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>A automated installer which bootstraps a core WordPress installation that provides an established, stable REST API.w</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>A plugin which exposes a newer, in-progress GraphQL API for WordPress.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>The WordPress plugins you need to set up custom post types and custom fields (Advanced Custom Fields and Custom Post Type UI).</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Plugins which expose those custom fields and WordPress menus in the WP REST API (ACF to WP API and WP-REST-API V2 Menus).</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>JWT authentication plugins: JWT WP REST and JWT WP GraphQL.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>All the starter WordPress theme code and settings headless requires, including pretty permalinks, CORS Allow-Origin headers, and useful logging functions for easy debugging.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>A mechanism for easily importing data from an existing WordPress installation anywhere on the web using WP Migrate DB Pro and its accompanying plugins (license required).</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>A sample, starter frontend React app powered by GraphQL.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Another sample, starter frontend React app, server-side rendered via Next.js, powered by the WP REST API.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Docker containers and scripts to manage them, for easily running the frontend React apps and backend locally or deploying it to any hosting provider with Docker support.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Manage your content in WordPress and serve it using React. Too good to be true? <a href=\"http://localhost:8080/wp-admin/post.php?post=14&amp;action=edit\">Edit this page</a> and see for yourself!</p>\n<!-- /wp:paragraph -->','Congratulations!','','inherit','closed','closed','','14-revision-v1','','','2024-04-11 00:35:41','2024-04-11 00:35:41','',14,'http://localhost:8080/?p=54',0,'revision','',0),
(55,1,'2024-04-11 01:13:06','2024-04-11 01:13:06','<!-- wp:image {\"id\":48,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"http://localhost:8080/wp-content/uploads/2019/11/careers-photo-opt-1024x490.jpg\" alt=\"\" class=\"wp-image-48\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sagittis facilisis lacus ut accumsan. In facilisis congue lorem quis ullamcorper. Vivamus id aliquam massa, sit amet sollicitudin dui. Sed vel neque eget lectus aliquet feugiat sit amet at velit. Ut tortor massa, bibendum ut sollicitudin a, ultrices cursus sem. Donec ante dui, lacinia id sem ut, fermentum scelerisque neque. Duis a risus sem. Phasellus dictum fringilla augue sed hendrerit. Donec laoreet magna at felis suscipit pharetra. Suspendisse consequat turpis mi, eu placerat nunc laoreet sed. Proin sit amet est sodales, fermentum ex consectetur, ultricies justo.</p>\n<!-- /wp:paragraph -->','Test Post','','trash','open','open','','test-post__trashed','','','2024-04-14 01:49:27','2024-04-14 01:49:27','',0,'http://localhost:8080/?p=55',0,'post','',0),
(56,1,'2024-04-11 01:13:06','2024-04-11 01:13:06','<!-- wp:paragraph -->\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sagittis facilisis lacus ut accumsan. In facilisis congue lorem quis ullamcorper. Vivamus id aliquam massa, sit amet sollicitudin dui. Sed vel neque eget lectus aliquet feugiat sit amet at velit. Ut tortor massa, bibendum ut sollicitudin a, ultrices cursus sem. Donec ante dui, lacinia id sem ut, fermentum scelerisque neque. Duis a risus sem. Phasellus dictum fringilla augue sed hendrerit. Donec laoreet magna at felis suscipit pharetra. Suspendisse consequat turpis mi, eu placerat nunc laoreet sed. Proin sit amet est sodales, fermentum ex consectetur, ultricies justo.</p>\n<!-- /wp:paragraph -->','Test Post','','inherit','closed','closed','','55-revision-v1','','','2024-04-11 01:13:06','2024-04-11 01:13:06','',55,'http://localhost:8080/?p=56',0,'revision','',0),
(57,1,'2024-04-11 01:13:21','2024-04-11 01:13:21','<!-- wp:paragraph -->\n<p>Whenever a team proposes the programming language, architecture or framework of choice to tackle a problem, my first instinct is to respond with: <em>Why bother?</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I’m not trying to be contrarian. I’m also not trying to hold onto the past while the engineers pitch the latest and greatest tech to solve a problem. I’m just trying to inject some pragmatism into the conversation. <em>Those early decisions are always the most impactful and therefore potentially the most costly. </em>The decisions made in those early meetings will establish the path and trajectory for the rest of the project.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The old thing (in this case, a monolithic CMS <a href=\"https://postlight.com/trackchanges/wordpress-without-shame\">like WordPress</a> that produced regular HTML web pages) might be boring but it works. Provably works. And so when it came time to rebuild and redesign <a href=\"https://postlight.com/\">postlight.com</a>, I had to say it: <em>Why bother with headless WordPress?</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>What is a headless CMS?</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Put simply, a headless CMS doesn’t bother with the templates. Or with making pages. There’s an entire world of templates out there. Templates are essentially web page “containers” that are wired up so that when you hit publish, WordPress “pours” its content into the right places of the page and serves it up to the world.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>“Headless” means it serves up the content as raw data via an API. WordPress is perfectly suited to serve content this way because it has an <a href=\"https://developer.wordpress.org/rest-api/\">API ready to go</a> out of the box. The work then shifts to building a front-end that takes that raw content and puts it into various assets for consumption. This often occurs via some flavor of JavaScript framework. <a href=\"https://postlight.com/trackchanges/choosing-react-first\">React</a> is the framework of choice for many these days.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Yeah, but why bother?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Well, there are many good reasons to use a headless CMS:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li><strong>Going beyond the web page. </strong>The CMS is no longer just for publishing anymore. Content is doing <em>all sorts of things </em>today. The article has given way to many flavors of content packaging. By decoupling it from any single template, all sorts of possibilities open up. For example, if you’re looking to deliver your content via an <a href=\"https://www.amazon.com/alexa-skills/b?ie=UTF8&amp;node=13727921011\">Alexa skill</a> or integrated into a mobile app, a headless CMS makes a whole lot of sense.</li><li><strong>Speed. </strong>By leveraging frameworks like React, you can be much more targeted about which bits of the page have to come over the wire instead of delivering the entire page each time.</li><li><strong>New and improved experiences. </strong>Did you ever land on one of those news sites that just keeps giving articles forever as you scroll? That’s a chore with static templates. By allowing content to progressively come in over the wire as you scroll, you can pull off a pretty slick experience.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>But I’m building a marketing website. Do I really need a headless CMS?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Ah, now we’re getting down to it. The answer is: Maybe not. The constant temptation with new technology (headless WordPress isn’t even that new anymore, but it’s certainly not as well-defined as traditional WordPress) is to use it. While I could list out the disadvantages of a headless CMS here, that isn’t fair either.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The best way to make this call is to ask a few questions and let that drive your decision:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Will your content make its way out into world in various shapes and forms (e.g. IoT, social, web, mobile app)? If so, then you should be leaning towards headless.</li><li>Do you have the skill sets at your disposal to build a headless CMS platform? This usually requires people that are versed in more modern frameworks and technologies (e.g. React).</li><li>Will your platform need to shift and change a whole lot? If your CMS is set to position you to do all sorts of things with your content then you’re going to want the flexibility of deploying teams to leverage that API for all sorts of purposes (microsites, etc.).</li><li>Is your CMS big? In other words, can more than one team take advantage of that API and run parallel with other teams?</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>But all of these roll up to one big, giant, mega-question: <em>Can you explain why this is a good idea in terms of growth?</em> Because with headless, you’re giving up simplicity, and you need to get something in return. A faster development cycle, a better experience on mobile out of the box, and an increased likelihood that more people will see and engage with the content we produce.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Sites and platforms are funny in that it can be sort of dumb to see them in terms of ROI. Websites are about getting a return on other investments: Investments in content, in design, in building a team.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If you can’t make that case, and not just argue it but really prove it out, you should use what’s familiar. Ultimately this is a business decision.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>But am I good for five years? Ten years?</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Good technology decisions look ahead. There is no doubt that a headless CMS best positions you for those unknown demands down the road. Unless you’re just standing up a basic <em>Home/About Us/Contact Us-</em>style marketing site, you should seriously consider a headless CMS path. So while the hard questions are worth asking, it’s hard to argue against the strategic flexibility of looking ahead.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>If you’re interested in diving in and exploring the world of headless WordPress, our popular <a href=\"https://postlight.com/labs/wordpress-react-starter-kit\">Headless WordPress Starter Kit</a> is a great place to start. </em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em><a href=\"https://postlight.com/about/rich-ziade\">Rich Ziade</a> is president of Postlight, a full-service digital product studio in New York City. Email him at <a href=\"mailto:hello@postlight.com\">rich.ziade@postlight.com</a>.</em></p>\n<!-- /wp:paragraph -->','Why Bother with a Headless CMS?','','inherit','closed','closed','','17-revision-v1','','','2024-04-11 01:13:21','2024-04-11 01:13:21','',17,'http://localhost:8080/?p=57',0,'revision','',0),
(58,1,'2024-04-11 01:13:21','2024-04-11 01:13:21','<!-- wp:paragraph -->\n<p>We talk a lot about <a href=\"https://trackchanges.postlight.com/building-awesome-cms-f034344d8ed#.p7mhgk5v4\" target=\"_blank\" rel=\"noopener noreferrer\">content management systems</a> at Postlight, often in the context of a specific client’s needs, and sometimes, as a question about our general philosophy around publishing. And we also build a lot of custom tools for solving very tricky publishing problems—a good example is <a href=\"https://postlight.com/work/instant\" target=\"_blank\" rel=\"noopener noreferrer\">Instant.me</a>, which benefited from a custom CMS, fully oriented around a specific workflow.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But not every nail needs a fully-custom hammer. During our CMS conversations, inevitably I am the person in the room who brings up <a href=\"http://wordpress.org\" target=\"_blank\" rel=\"noopener noreferrer\">WordPress</a>. Then, my teammates put on their most patient facial expressions and listen to me make the argument.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Ultimately, as a director, I am obligated to consider all the technologies that can help our client achieve our goals—including the old, boring ones. Enter WordPress.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>WordPress is not particularly exciting, intrinsically modern, or lightweight. It’s a 13-year-old monolithic web application that powers 25% of the web and probably 30% of web spam. But, a whole lot of the time, WordPress is the right framework.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Since I started here about six months ago, I’ve helped ship two major WordPress projects.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Last week, we helped launch a brand new, reimagined web site for <a href=\"https://news.vice.com\" target=\"_blank\" rel=\"noopener noreferrer\">VICE News</a> (in parallel with the premier of <a href=\"http://www.hbo.com/vice\" target=\"_blank\" rel=\"noopener noreferrer\">VICE News Tonight on HBO</a>). The web site mirrors the philosophy and aesthetic of the TV show, featuring a stream of splashy graphics, bold headlines, videos, GIFs, and interactives, with customizable animations that trigger as the user browses the stream.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The key thing about <a href=\"https://postlight.com/work/vice-news\">our work on VICE News</a> is that we were on a <em>very </em>accelerated schedule to build and launch this ambitious content quickly. We needed a running start. A newsroom filled with reporters publishes new content on the site on an hourly basis—so using a robust piece of software with roots in blogging isn’t a surprising choice.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>There is a lot of ambition long-term for VICE News, and it’s possible—even likely!—it will outgrow WordPress. Which is fine. If you design a WordPress platform carefully, it’s possible to migrate the posts and artwork to another platform later. But given schedule and constraints—it was an obvious choice for now.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>It’s pretty remarkable that in 2016 we’re still building fancy web sites for modern media companies and startups using WordPress. And yet.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Four Good WordPress Things</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>I have a few things I really like about WordPress:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul>\n<li><strong>Thirteen years of features and development.</strong> WordPress core gives you so much out of the box: post and page creation, user permissions and role management, categories, tags, content revision history, drafting, publishing, previewing, content-scheduling, media management with image cropping and rotation, post locking when another editor is working on a piece, multiple sites, and WYSIWYG theming, to name a few.</li>\n<li><strong>Deep community support and documentation.</strong> You never want to be the first person trying to solve a problem with a piece of software, and you never are with WordPress. The community is so established and mature — and most of its users are writers — that at least 300 people have tried to do the thing you’re trying to do and wrote about the solution they found online.</li>\n<li><strong>A site that’s easy to hire for (whether engineering or editorial) and easy to host.</strong> WordPress’ market share means that anyone who has published anything online feels right at home looking at the familiar and comforting grays and blues of the WordPress publishing interface. Likewise, a mature market of WP developers, service providers, premium themes, and plugins has grown up around WordPress, as well as plentiful plug-and-play managed hosting options.</li>\n<li><strong>New features are a plugin away.</strong> When WordPress core is lacking, plugins fill the gap. If you need to integrate with Slack, add multiple authors to a byline, publish AMP versions of your content, auto-generate a sitemap, expose post data in a REST API, customize your site experience based on your users’s location, control in-article ad placement, or create custom objects or fields, there’s a plugin for that. Plus, building your own plugin from scratch is straightforward.</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Four Bad WordPress Things</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>But it’s not all good. When you use WordPress, you also get a lot of baggage. My teammate <a href=\"https://medium.com/u/71d6cc6b0b1f\" target=\"_blank\" rel=\"noopener noreferrer\">Dusty Matthews</a> — who was responsible for the previous WordPress incarnation of <a href=\"http://theawl.com\" target=\"_blank\" rel=\"noopener noreferrer\">The Awl</a> network of sites — has a canned response whenever someone has a WordPress WTF moment. “It’s a WordPress thing,” he sighs, a knowing look in his eye. Here are the four killer WordPress issues.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul>\n<li><strong>WP’s “everything is a post” approach feels like hammering a round peg into a square hole</strong> and then trying to retrieve it again undamaged.</li>\n<li><a href=\"https://codex.wordpress.org/The_Loop\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>The Loop</strong></a><strong> bites you in the ass at least a half dozen times per project. </strong>Adding blocks of raw PHP in WordPress templates can drive someone who believes in a clean separation of view and logic absolutely batty.</li>\n<li><strong>It’s slow. </strong>It takes a while to load a page and do all the things WordPress does, sometimes seconds per page—which won’t scale. So you have to build in layers of caching—and that means that…</li>\n<li><strong>It’s really, really hard to get consistent caching logic. </strong>This one can really bite you. You end up juggling caching logic in your head and figuring out strategies for breaking the cache when news breaks and a big new story goes up right now. You’d think this could be a solved problem—but when you factor in all the different systems and hosting solutions required to ship WordPress at scale, caching remains a tricky consideration to navigate.</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Modernizing, Slowly</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>WordPress is improving, quickly in small ways, but slowly—very, very, slowly — in big ways. Matt Mullenweg gave the WordPress community a telling homework assignment for 2016: <a href=\"http://wesbos.com/learn-javascript/\" target=\"_blank\" rel=\"noopener noreferrer\">“Learn JavaScript, deeply.”</a> Automattic’s <a href=\"https://developer.wordpress.com/2015/11/23/the-story-behind-the-new-wordpress-com/\" target=\"_blank\" rel=\"noopener noreferrer\">React-based Calypso rewrite</a> of the WordPress admin is a clear sign that at least the leaders of the community are trying to reimagine what a WordPress born in 2016 would look like. Eventually? Soon? The <a href=\"http://v2.wp-api.org/\" target=\"_blank\" rel=\"noopener noreferrer\">WP REST API</a> will be part of core so that <a href=\"https://pantheon.io/decoupled-cms\" target=\"_blank\" rel=\"noopener noreferrer\">headless WordPress</a> implementations, which decouple the backend and frontend, will become less cutting-edge and much more commonplace.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The <a href=\"https://github.com/postlight/awesome-cms\" target=\"_blank\" rel=\"noopener noreferrer\">universe of content management systems</a> continues to expand, and yes, using WordPress often feels like a throwback to 2006. It’s also often the right tool for the job, and it’s incredibly fast to get it up and running—plus editors and writers often know it well and like using it.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>We love doing custom work that solves really difficult, thorny problems, and the way we see WordPress is that it solves a lot of boring, well-known problems so that we can focus on creating great experiences and facing new challenges.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Gina Trapani is a director of engineering at Postlight. </em></p>\n<!-- /wp:paragraph -->','WordPress Without Shame','','inherit','closed','closed','','16-revision-v1','','','2024-04-11 01:13:21','2024-04-11 01:13:21','',16,'http://localhost:8080/?p=58',0,'revision','',0),
(59,1,'2024-04-11 01:13:21','2024-04-11 01:13:21','<!-- wp:paragraph -->\n<p>If you interact with teams building software, or you sit within earshot of software engineers, you’ve probably heard them talking about <a href=\"https://graphql.org/\">GraphQL</a>. Developers get pretty hyped up about new technologies, especially ones that help them build software faster and with fewer bugs. But what is GraphQL, and should you care? In <a href=\"https://postlight.com/work\">our work</a> building software for our clients, more and more frequently we’ve been recommending and adopting GraphQL. Here’s why.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>The Origins of GraphQL</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Back in 2011, the smartphone revolution was in full swing. With the introduction of the iPhone and subsequent Android ecosystem, Facebook shifted significant focus into optimizing their mobile experience. That’s when Facebook’s engineering team faced a problem: Mobile phone data connections had high latency and low bandwidth, and that resulted in a slow user experience.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>To render the Facebook News Feed, for example, a mobile device would need to make several requests for different kinds of data to the servers, like: “Get me all the latest stories for this user’s feed. Okay now for each of those, get the comments associated with them. Now for each comment, get me all the replies and the name and photo of the person who posted them.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>All these different requests resulted to several seconds of load time, which meant impatient users spent less time on Facebook. To solve this problem, Facebook engineers set out to define a way to request <em>all</em> the data needed to render a screen in one shot. The result was a new query language and specification called <a href=\"https://graphql.org/\">GraphQL</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>What Is GraphQL?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>At its core, GraphQL is a query language (QL) for APIs. It lets apps like the ones on your phone or your web browser to ask for exactly the data they need from the server–no more, and no less–and receive it all in a single request, so things like your news feed show up fast.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In GraphQL, everything revolves around a <a href=\"https://graphql.org/learn/schema/\">schema</a>, which represents all the data in your system and what type of information it is. For example, a news story headline is a string of characters, but total number of likes is an integer.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In GraphQL, data is represented as a graph, which means each piece of data is related to the others in a meaningful way. For example, the total number of likes is related to a post. Another total number of likes is related to a comment on that post. Using this graph, data engineers can model complex relationships in a declarative way, which ensures no one will mistake the total likes on a comment for the total likes on a post. This reduces errors, and makes it easy for engineers to quickly understand what data is available from a GraphQL API and build against it.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>After they used it in production for several years, Facebook open-sourced GraphQL in 2015, and it was met with a tide of enthusiasm. It turns out GraphQL solves a lot of problems beyond fetching data on low latency mobile connections.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The GraphQL ecosystem has exploded in innovation and found many uses throughout the industry. Companies large and small have adopted GraphQL, including companies like Yelp, Intuit, and GitHub.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>If Facebook and GitHub Use GraphQL, Should My Team?</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>When adopting any new technology, it’s important to consider the benefits and drawbacks of it, and what they mean for your team. At Postlight, we work with our clients to design backend services that best serve their needs.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Over the last few years, we’ve used GraphQL to power all sorts of apps, from an email client to CRMs to content management systems. As we build and ship GraphQL backends to production, our confidence in the long term viability of GraphQL continues to increase. GraphQL is also appearing in more of our open source projects. <a href=\"https://postlight.com/labs/glide-salesforce-graphql\">Glide</a> helps developers rapidly prototype Salesforce integrations using GraphQL, and our <a href=\"https://postlight.com/labs/wordpress-react-starter-kit\">WordPress + React Starter Kit</a> now offers GraphQL out of the box.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When we compare GraphQL to other API designs, one of the most noticeable differences we see is that GraphQL tooling increases engineering productivity and time-to-market. Tools like <a href=\"https://www.graphile.org/postgraphile/\">PostGraphile</a> help engineers leverage hard-won SQL knowledge to produce a consistent and powerful GraphQL API based on their relational data model. For a more traditional application server environment, <a href=\"https://apollographql.com/docs/apollo-server/\">Apollo Server</a> is great for applications that talk to multiple data sources or internal services.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>At Postlight we build many frontend projects with <a href=\"https://postlight.com/trackchanges/choosing-react-first\">React</a>. Once our backend teams have established part of the data model, tools like <a href=\"https://www.apollographql.com/\">Apollo</a>’s excellent React client have the frontend engineers executing queries within minutes. They may also fire up <a href=\"https://github.com/graphql/graphiql\">GraphiQL</a> to explore the schema and execute queries. We’ve also adopted the concept of <a href=\"https://www.formidable.com/blog/2019/strong-typing/\">end-to-end types</a> using TypeScript. End-to-end types expose statically-typed GraphQL interfaces directly in a frontend codebase so that incorrect queries and type errors are a thing of the past.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Along with engineering productivity advances, GraphQL has also increased the consistency of backend services. Because GraphQL represents data as a statically-typed graph, resources are consistent and always return what the client asked for. GraphQL has also helped solidify best practices around complex API design problems like <a href=\"https://facebook.github.io/relay/graphql/connections.htm\">pagination</a>. Frontend and mobile developers are spending less time creating or learning bespoke pagination interfaces or fighting with inconsistent API endpoints.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>So Is GraphQL a Silver Bullet?</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Not so fast. I’ve painted a pretty picture of GraphQL so far, but it’s not without challenges. If we take a look back at history, it’s interesting to see how GraphQL differs from other API designs. For sake of time, let’s focus on the most ubiquitous network API design–<a href=\"https://restfulapi.net/\">HTTP REST APIs</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>REST became extremely popular due to its resource-oriented design and simplicity. REST heavily leverages HTTP’s semantics for how it works, while SOAP and other designs before it were transport-agnostic. Relying on HTTP has some drawbacks but also a lot of benefits. For example, a well designed REST API can be cached using powerful HTTP caching strategies that can lead to low-latency cached content close to the end user. GraphQL uses the POST HTTP method by default, which is not typically cached in the same way. In order to utilize some of these advanced HTTP caching strategies the community has come up with techniques like <a href=\"https://www.apollographql.com/docs/apollo-server/performance/apq/\">Automatic Persisted Queries</a> and a larger reliance on client-side caching.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>GraphQL also introduces some complexity into your system when resolving data from an API request. GraphQL requires code to parse and execute a query and logic to map that query to underline data stores or services. REST API endpoints, on the other hand, can be lean and small. For some projects, that maybe the right choice. Companies like Airbnb are <a href=\"https://medium.com/airbnb-engineering/reconciling-graphql-and-thrift-at-airbnb-a97e8d290712\">facing (and helping solve) problems</a> in this area and sharing the results with the community.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>All in all, we’ve been pretty happy with the increased productivity and benefits of the GraphQL ecosystem. Want to discuss the pros and cons of API design? Drop us a line <a href=\"mailto:hello@postlight.com\">hello@postlight.com</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em><a href=\"https://postlight.com/about/aaron-ortbals\">Aaron Ortbals</a> is a Partner and Director of Engineering at Postlight.</em></p>\n<!-- /wp:paragraph -->','What Do You Need to Know About GraphQL?','','inherit','closed','closed','','15-revision-v1','','','2024-04-11 01:13:21','2024-04-11 01:13:21','',15,'http://localhost:8080/?p=59',0,'revision','',0),
(60,1,'2024-04-11 01:40:39','2024-04-11 01:40:39','<!-- wp:navigation-link {\"className\":\" menu-item menu-item-type-custom menu-item-object-custom\",\"description\":\"\",\"id\":null,\"kind\":\"custom\",\"label\":\"Home\",\"opensInNewTab\":false,\"rel\":null,\"title\":\"\",\"type\":\"custom\",\"url\":\"/\"} /--><!-- wp:navigation-link {\"className\":\" menu-item menu-item-type-taxonomy menu-item-object-category\",\"description\":\"\",\"id\":\"1\",\"kind\":\"taxonomy\",\"label\":\"Sample Category\",\"opensInNewTab\":false,\"rel\":null,\"title\":\"\",\"type\":\"category\",\"url\":\"http://localhost:8080/category/uncategorized/\"} /--><!-- wp:navigation-link {\"className\":\" menu-item menu-item-type-custom menu-item-object-custom\",\"description\":\"\",\"id\":null,\"kind\":\"custom\",\"label\":\"About the Starter Kit\",\"opensInNewTab\":false,\"rel\":null,\"title\":\"\",\"type\":\"custom\",\"url\":\"https://postlight.com/trackchanges/introducing-postlights-wordpress-react-starter-kit\"} /-->','Header Menu','','publish','closed','closed','','header-menu','','','2024-04-11 01:40:39','2024-04-11 01:40:39','',0,'http://localhost:8080/2024/04/11/header-menu/',0,'wp_navigation','',0),
(61,1,'2024-04-11 01:40:50','2024-04-11 01:40:50','<!-- wp:image {\"id\":48,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"http://localhost:8080/wp-content/uploads/2019/11/careers-photo-opt-1024x490.jpg\" alt=\"\" class=\"wp-image-48\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sagittis facilisis lacus ut accumsan. In facilisis congue lorem quis ullamcorper. Vivamus id aliquam massa, sit amet sollicitudin dui. Sed vel neque eget lectus aliquet feugiat sit amet at velit. Ut tortor massa, bibendum ut sollicitudin a, ultrices cursus sem. Donec ante dui, lacinia id sem ut, fermentum scelerisque neque. Duis a risus sem. Phasellus dictum fringilla augue sed hendrerit. Donec laoreet magna at felis suscipit pharetra. Suspendisse consequat turpis mi, eu placerat nunc laoreet sed. Proin sit amet est sodales, fermentum ex consectetur, ultricies justo.</p>\n<!-- /wp:paragraph -->','Test Post','','inherit','closed','closed','','55-revision-v1','','','2024-04-11 01:40:50','2024-04-11 01:40:50','',55,'http://localhost:8080/?p=61',0,'revision','',0),
(65,1,'2024-04-11 01:50:45','2024-04-11 01:50:45','{\"version\": 2, \"isGlobalStylesUserThemeJSON\": true }','Custom Styles','','publish','closed','closed','','wp-global-styles-twentytwentyfour','','','2024-04-11 01:50:45','2024-04-11 01:50:45','',0,'http://localhost:8080/posts/wp-global-styles-twentytwentyfour/',0,'wp_global_styles','',0),
(78,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/schema-config-mutation-scheme {\"mutationScheme\":\"nested\"} /-->','Nested mutations','','publish','closed','closed','','nested-mutations','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-schemaconfig/nested-mutations/',0,'graphql-schemaconfig','',0),
(79,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/schema-configuration {\"schemaConfiguration\":78} /--><!-- wp:gatographql/custom-endpoint-options /--><!-- wp:gatographql/endpoint-graphiql /--><!-- wp:gatographql/endpoint-voyager /-->','Nested mutations','Private client to execute queries that need nested mutations','private','closed','closed','','nested-mutations','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql/nested-mutations/',0,'graphql-endpoint','',0),
(80,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/schema-config-mutation-scheme {\"mutationScheme\":\"nested\"} /--><!-- wp:gatographql/schema-config-payload-types-for-mutations {\"enabledConst\":\"disabled\"} /-->','Nested mutations + Entity as mutation payload type','','publish','closed','closed','','nested-mutations-entity-as-mutation-payload-type','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-schemaconfig/nested-mutations-entity-as-mutation-payload-type/',0,'graphql-schemaconfig','',0),
(81,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d postId: ID of the post to duplicate\\n# \\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query duplicates a post.\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/duplicating\\u002da\\u002dblog\\u002dpost/\\n#\\n########################################################################\\n\\nquery InitializeDynamicVariables\\n  @configureWarningsOnExportingDuplicateVariable(enabled: false)\\n{\\n  authorID: _echo(value: null)\\n    @export(as: \\u0022authorID\\u0022)\\n    @remove\\n\\n  categoryIDs: _echo(value: [])\\n    @export(as: \\u0022categoryIDs\\u0022)\\n    @remove\\n\\n  featuredImageID: _echo(value: null)\\n    @export(as: \\u0022featuredImageID\\u0022)\\n    @remove\\n\\n  tagIDs: _echo(value: [])\\n    @export(as: \\u0022tagIDs\\u0022)\\n    @remove\\n}\\n\\nquery GetPostAndExportData($postId: ID!)\\n  @depends(on: \\u0022InitializeDynamicVariables\\u0022)\\n{\\n  post(by: { id: $postId }, status: any) {\\n    # Fields not to be duplicated\\n    id\\n    slug\\n    date\\n    status\\n\\n    # Fields to be duplicated\\n    author {\\n      id @export(as: \\u0022authorID\\u0022)\\n    }\\n    categories {\\n      id @export(as: \\u0022categoryIDs\\u0022, type: LIST)\\n    }\\n    rawContent @export(as: \\u0022rawContent\\u0022)\\n    rawExcerpt @export(as: \\u0022excerpt\\u0022)\\n    featuredImage {\\n      id @export(as: \\u0022featuredImageID\\u0022)\\n    }\\n    tags {\\n      id @export(as: \\u0022tagIDs\\u0022, type: LIST)\\n    }\\n    rawTitle @export(as: \\u0022title\\u0022)\\n  }\\n}\\n\\nmutation DuplicatePost\\n  @depends(on: \\u0022GetPostAndExportData\\u0022)\\n{\\n  createPost(input: {\\n    status: draft,\\n    authorBy: {\\n      id: $authorID\\n    },\\n    categoriesBy: {\\n      ids: $categoryIDs\\n    },\\n    contentAs: {\\n      html: $rawContent\\n    },\\n    excerpt: $excerpt\\n    featuredImageBy: {\\n      id: $featuredImageID\\n    },\\n    tagsBy: {\\n      ids: $tagIDs\\n    },\\n    title: $title\\n  }) {\\n    status\\n    errors {\\n      __typename\\n      ...on ErrorPayload {\\n        message\\n      }\\n    }\\n    post {\\n      # Fields not to be duplicated\\n      id\\n      slug\\n      date\\n      status\\n\\n      # Fields to be duplicated\\n      author {\\n        id\\n      }\\n      categories {\\n        id\\n      }\\n      rawContent\\n      excerpt\\n      featuredImage {\\n        id\\n      }\\n      tags {\\n        id\\n      }\\n      title\\n    }\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Duplicate post','','private','closed','closed','','duplicate-post','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/duplicate-post/',0,'graphql-query','',0),
(82,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d limit: Number of posts to duplicate\\n#   \\u002d offset: Position of the first post to duplicate\\n# \\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query duplicates the posts retrieved via the\\n# provided `$limit` and `$offset` variables (sorted by ascending ID).\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/duplicating\\u002dmultiple\\u002dblog\\u002dposts\\u002dat\\u002donce/\\n#\\n########################################################################\\n\\nquery InitializeDynamicVariables\\n  @configureWarningsOnExportingDuplicateVariable(enabled: false)\\n{\\n  postInput: _echo(value: [])\\n    @export(as: \\u0022postInput\\u0022)\\n    @remove\\n}\\n\\nquery GetPostsAndExportData($limit: Int! = 5, $offset: Int! = 0)\\n  @depends(on: \\u0022InitializeDynamicVariables\\u0022)\\n{\\n  postsToDuplicate: posts(\\n    pagination: {\\n      limit : $limit\\n      offset: $offset\\n    }\\n    sort: {\\n      by: ID,\\n      order: ASC\\n    }\\n  ) {\\n    # Fields not to be duplicated\\n    id\\n    slug\\n    date\\n    status\\n\\n    # Fields to be duplicated\\n    author {\\n      id\\n    }\\n    categories {\\n      id\\n    }\\n    rawContent\\n    excerpt\\n    featuredImage {\\n      id\\n    }\\n    tags {\\n      id\\n    }\\n    title\\n\\n    # Already create (and export) the inputs for the mutation\\n    postInput: _echo(value: {\\n      status: draft,\\n      authorBy: {\\n        id: $__author\\n      },\\n      categoriesBy: {\\n        ids: $__categories\\n      },\\n      contentAs: {\\n        html: $__rawContent\\n      },\\n      excerpt: $__excerpt\\n      featuredImageBy: {\\n        id: $__featuredImage\\n      },\\n      tagsBy: {\\n        ids: $__tags\\n      },\\n      title: $__title\\n    })\\n      @export(as: \\u0022postInput\\u0022, type: LIST)\\n      @remove\\n  }\\n}\\n\\nmutation CreatePosts\\n  @depends(on: \\u0022GetPostsAndExportData\\u0022)\\n{\\n  createdPostIDs: _echo(value: $postInput)\\n    @underEachArrayItem(\\n      passValueOnwardsAs: \\u0022input\\u0022\\n    )\\n      @applyField(\\n        name: \\u0022createPost\\u0022\\n        arguments: {\\n          input: $input\\n        },\\n        setResultInResponse: true\\n      )\\n    @export(as: \\u0022createdPostIDs\\u0022)\\n}\\n\\nquery DuplicatePosts\\n  @depends(on: \\u0022CreatePosts\\u0022)\\n{\\n  createdPosts: posts(\\n    filter: {\\n      ids: $createdPostIDs,\\n      status: [draft]\\n    }\\n  ) {\\n    # Fields not to be duplicated\\n    id\\n    slug\\n    date\\n    status\\n\\n    # Fields to be duplicated\\n    author {\\n      id\\n    }\\n    categories {\\n      id\\n    }\\n    rawContent\\n    excerpt\\n    featuredImage {\\n      id\\n    }\\n    tags {\\n      id\\n    }\\n    title\\n  }\\n}\",\"variables\":\"{\\n  \\u0022limit\\u0022: 10,\\n  \\u0022offset\\u0022: 0\\n}\"} /--><!-- wp:gatographql/schema-configuration {\"schemaConfiguration\":80} /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Duplicate posts','','private','closed','closed','','duplicate-posts','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/duplicate-posts/',0,'graphql-query','',0),
(83,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d postId: The ID of the post to do the search and replace\\n#   \\u002d replaceFrom: The list of strings to search\\n#   \\u002d replaceTo: The list of strings to replace with\\n# \\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query retrieves a post, replaces all\\n# occurrences of a list of strings with another list of strings\\n# in the post\'s content and title, and stores the post again.\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/search\\u002dreplace\\u002dand\\u002dstore\\u002dagain/\\n#\\n########################################################################\\n\\nquery GetPostData(\\n  $postId: ID!\\n  $replaceFrom: [String!]!,\\n  $replaceTo: [String!]!\\n) {\\n  post(by: { id: $postId }, status: any) {\\n    title\\n    adaptedPostTitle: _strReplaceMultiple(\\n      search: $replaceFrom\\n      replaceWith: $replaceTo\\n      in: $__title\\n    )\\n      @export(as: \\u0022adaptedPostTitle\\u0022)\\n\\n    rawContent\\n    adaptedRawContent: _strReplaceMultiple(\\n      search: $replaceFrom\\n      replaceWith: $replaceTo\\n      in: $__rawContent\\n    )\\n      @export(as: \\u0022adaptedRawContent\\u0022)\\n  }\\n}\\n\\nmutation ReplaceStringsInPost($postId: ID!)\\n  @depends(on: \\u0022GetPostData\\u0022)\\n{\\n  updatePost(input: {\\n    id: $postId,\\n    title: $adaptedPostTitle,\\n    contentAs: { html: $adaptedRawContent },\\n  }) {\\n    status\\n    errors {\\n      __typename\\n      ...on ErrorPayload {\\n        message\\n      }\\n    }\\n    post {\\n      id\\n      title\\n      rawContent\\n    }\\n  }\\n}\",\"variables\":\"{\\n  \\u0022replaceFrom\\u0022: [\\n    \\u0022\\u0022\\n  ],\\n  \\u0022replaceTo\\u0022: [\\n    \\u0022\\u0022\\n  ]\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Replace strings in post','','private','closed','closed','','replace-strings-in-post','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/replace-strings-in-post/',0,'graphql-query','',0),
(84,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d limit: Number of posts to update\\n#   \\u002d offset: Position of the first post to update\\n#   \\u002d replaceFrom: The list of strings to search\\n#   \\u002d replaceTo: The list of strings to replace with\\n# \\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query adapts content in bulk, updating the\\n# title, content and excerpt for multiple posts with a single request.\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/adapting\\u002dcontent\\u002din\\u002dbulk/\\n#\\n########################################################################\\n\\nquery TransformAndExportData(\\n  $limit: Int! = 5,\\n  $offset: Int! = 0,\\n  $replaceFrom: [String!]!\\n  $replaceTo: [String!]!\\n) {\\n  posts: posts(\\n    pagination: { limit: $limit, offset: $offset }\\n    sort: { by: ID, order: ASC }\\n  ) {\\n    rawTitle\\n    rawContent\\n    rawExcerpt\\n      @strReplaceMultiple(\\n        search: $replaceFrom\\n        replaceWith: $replaceTo\\n        affectAdditionalFieldsUnderPos: [1, 2]\\n      )\\n      @deferredExport(\\n        as: \\u0022postAdaptedSources\\u0022\\n        type: DICTIONARY\\n        affectAdditionalFieldsUnderPos: [1, 2]\\n      )\\n  }\\n}\\n\\nquery AdaptDataForMutationInput\\n  @depends(on: \\u0022TransformAndExportData\\u0022)\\n{\\n  postInputs: _echo(value: $postAdaptedSources)\\n    @underEachJSONObjectProperty(\\n      passValueOnwardsAs: \\u0022adaptedSource\\u0022,\\n      affectDirectivesUnderPos: [1, 2, 3, 4]\\n    )\\n      @applyField(\\n        name: \\u0022_objectProperty\\u0022,\\n        arguments: {\\n          object: $adaptedSource,\\n          by: {\\n            key: \\u0022rawTitle\\u0022\\n          }\\n        },\\n        passOnwardsAs: \\u0022adaptedTitle\\u0022\\n      )\\n      @applyField(\\n        name: \\u0022_objectProperty\\u0022,\\n        arguments: {\\n          object: $adaptedSource,\\n          by: {\\n            key: \\u0022rawExcerpt\\u0022\\n          }\\n        },\\n        passOnwardsAs: \\u0022adaptedExcerpt\\u0022\\n      )\\n      @applyField(\\n        name: \\u0022_objectProperty\\u0022,\\n        arguments: {\\n          object: $adaptedSource,\\n          by: {\\n            key: \\u0022rawContent\\u0022\\n          }\\n        },\\n        passOnwardsAs: \\u0022adaptedContent\\u0022\\n      )\\n      @applyField(\\n        name: \\u0022_echo\\u0022,\\n        arguments: {\\n          value: {\\n            title: $adaptedTitle,\\n            excerpt: $adaptedExcerpt,\\n            contentAs: {\\n              html: $adaptedContent\\n            }\\n          }\\n        },\\n        setResultInResponse: true\\n      )\\n    @export(as: \\u0022postInputs\\u0022)\\n}\\n\\nmutation ReplaceStringsInPosts(\\n  $limit: Int! = 5,\\n  $offset: Int! = 0\\n)\\n  @depends(on: \\u0022AdaptDataForMutationInput\\u0022)\\n{\\n  adaptedPosts: posts(\\n    pagination: { limit: $limit, offset: $offset }\\n    sort: { by: ID, order: ASC }\\n  ) {\\n    id\\n    postInput: _objectProperty(\\n      object: $postInputs,\\n      by: { key: $__id }\\n    ) @remove\\n    update(input: $__postInput) {\\n      status\\n      errors {\\n        __typename\\n        ...on ErrorPayload {\\n          message\\n        }\\n      }\\n      post {\\n        title\\n        excerpt\\n      }\\n    }\\n  }\\n}\",\"variables\":\"{\\n  \\u0022limit\\u0022: 10,\\n  \\u0022offset\\u0022: 0,\\n  \\u0022replaceFrom\\u0022: [\\n    \\u0022\\u0022\\n  ],\\n  \\u0022replaceTo\\u0022: [\\n    \\u0022\\u0022\\n  ]\\n}\"} /--><!-- wp:gatographql/schema-configuration {\"schemaConfiguration\":78} /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Replace strings in posts','','private','closed','closed','','replace-strings-in-posts','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/replace-strings-in-posts/',0,'graphql-query','',0),
(85,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d postId: The ID of the post to do the search and replace\\n#   \\u002d searchRegex: The list of regex to search\\n#   \\u002d replaceWith: The list of strings to replace with\\n# \\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query retrieves a post, replaces all\\n# matches of a list of regex strings with a list of strings\\n# in the post\'s content and title, and stores the post again.\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/search\\u002dreplace\\u002dand\\u002dstore\\u002dagain/\\n#\\n########################################################################\\n\\nquery GetPostData(\\n  $postId: ID!\\n  $searchRegex: [String!]!,\\n  $replaceWith: [String!]!\\n) {\\n  post(by: { id: $postId }, status: any) {\\n    title\\n    adaptedPostTitle: _strRegexReplaceMultiple(\\n      searchRegex: $searchRegex\\n      replaceWith: $replaceWith\\n      in: $__title\\n    )\\n      @export(as: \\u0022adaptedPostTitle\\u0022)\\n\\n    rawContent\\n    adaptedRawContent: _strRegexReplaceMultiple(\\n      searchRegex: $searchRegex\\n      replaceWith: $replaceWith\\n      in: $__rawContent\\n    )\\n      @export(as: \\u0022adaptedRawContent\\u0022)\\n  }\\n}\\n\\nmutation RegexReplaceStringsInPost($postId: ID!)\\n  @depends(on: \\u0022GetPostData\\u0022)\\n{\\n  updatePost(input: {\\n    id: $postId,\\n    title: $adaptedPostTitle,\\n    contentAs: { html: $adaptedRawContent },\\n  }) {\\n    status\\n    errors {\\n      __typename\\n      ...on ErrorPayload {\\n        message\\n      }\\n    }\\n    post {\\n      id\\n      title\\n      rawContent\\n    }\\n  }\\n}\",\"variables\":\"{\\n  \\u0022searchRegex\\u0022: [],\\n  \\u0022replaceWith\\u0022: []\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Regex replace strings in post','','private','closed','closed','','regex-replace-strings-in-post','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/regex-replace-strings-in-post/',0,'graphql-query','',0),
(86,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d limit: Number of posts to update\\n#   \\u002d offset: Position of the first post to update\\n#   \\u002d searchRegex: The list of regex to search\\n#   \\u002d replaceWith: The list of strings to replace with\\n# \\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query adapts content in bulk, searching for\\n# matches using regex in the title, content and excerpt for multiple\\n# posts, and replacing them with another string.\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/adapting\\u002dcontent\\u002din\\u002dbulk/\\n#\\n########################################################################\\n\\nquery TransformAndExportData(\\n  $limit: Int! = 5,\\n  $offset: Int! = 0,\\n  $searchRegex: [String!]!\\n  $replaceWith: [String!]!\\n) {\\n  posts: posts(\\n    pagination: { limit: $limit, offset: $offset }\\n    sort: { by: ID, order: ASC }\\n  ) {\\n    rawTitle\\n    rawContent\\n    rawExcerpt\\n      @strRegexReplaceMultiple(\\n        searchRegex: $searchRegex\\n        replaceWith: $replaceWith\\n        affectAdditionalFieldsUnderPos: [1, 2]\\n      )\\n      @deferredExport(\\n        as: \\u0022postAdaptedSources\\u0022\\n        type: DICTIONARY\\n        affectAdditionalFieldsUnderPos: [1, 2]\\n      )\\n  }\\n}\\n\\nquery AdaptDataForMutationInput\\n  @depends(on: \\u0022TransformAndExportData\\u0022)\\n{\\n  postInputs: _echo(value: $postAdaptedSources)\\n    @underEachJSONObjectProperty(\\n      passValueOnwardsAs: \\u0022adaptedSource\\u0022,\\n      affectDirectivesUnderPos: [1, 2, 3, 4]\\n    )\\n      @applyField(\\n        name: \\u0022_objectProperty\\u0022,\\n        arguments: {\\n          object: $adaptedSource,\\n          by: {\\n            key: \\u0022rawTitle\\u0022\\n          }\\n        },\\n        passOnwardsAs: \\u0022adaptedTitle\\u0022\\n      )\\n      @applyField(\\n        name: \\u0022_objectProperty\\u0022,\\n        arguments: {\\n          object: $adaptedSource,\\n          by: {\\n            key: \\u0022rawExcerpt\\u0022\\n          }\\n        },\\n        passOnwardsAs: \\u0022adaptedExcerpt\\u0022\\n      )\\n      @applyField(\\n        name: \\u0022_objectProperty\\u0022,\\n        arguments: {\\n          object: $adaptedSource,\\n          by: {\\n            key: \\u0022rawContent\\u0022\\n          }\\n        },\\n        passOnwardsAs: \\u0022adaptedContent\\u0022\\n      )\\n      @applyField(\\n        name: \\u0022_echo\\u0022,\\n        arguments: {\\n          value: {\\n            title: $adaptedTitle,\\n            excerpt: $adaptedExcerpt,\\n            contentAs: {\\n              html: $adaptedContent\\n            }\\n          }\\n        },\\n        setResultInResponse: true\\n      )\\n    @export(as: \\u0022postInputs\\u0022)\\n}\\n\\nmutation RegexReplaceStringsInPosts(\\n  $limit: Int! = 5,\\n  $offset: Int! = 0\\n)\\n  @depends(on: \\u0022AdaptDataForMutationInput\\u0022)\\n{\\n  adaptedPosts: posts(\\n    pagination: { limit: $limit, offset: $offset }\\n    sort: { by: ID, order: ASC }\\n  ) {\\n    id\\n    postInput: _objectProperty(\\n      object: $postInputs,\\n      by: { key: $__id }\\n    ) @remove\\n    update(input: $__postInput) {\\n      status\\n      errors {\\n        __typename\\n        ...on ErrorPayload {\\n          message\\n        }\\n      }\\n      post {\\n        title\\n        excerpt\\n      }\\n    }\\n  }\\n}\",\"variables\":\"{\\n  \\u0022limit\\u0022: 10,\\n  \\u0022offset\\u0022: 0,\\n  \\u0022searchRegex\\u0022: [],\\n  \\u0022replaceWith\\u0022: []\\n}\"} /--><!-- wp:gatographql/schema-configuration {\"schemaConfiguration\":78} /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Regex replace strings in posts','','private','closed','closed','','regex-replace-strings-in-posts','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/regex-replace-strings-in-posts/',0,'graphql-query','',0),
(87,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d postId: ID of the post to modify\\n# \\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query does a regex search and replace to add\\n# missing links in the post\'s HTML content.\\n#\\n# All URLs which are not surrounded by an anchor tag, such as:\\n#\\n#   \\u003cp\\u003eVisit my website: https://mysite.com.\\u003c/p\\u003e\\n#\\n# ...are added the correspondig `\\u003ca\\u003e` tag around them (while also\\n# removing the domain from the text, and adding a target to open in\\n# a new window), becoming:\\n#\\n#  \\u003cp\\u003eVisit my website: \\u003ca href=\\u0022https://mysite.com\\u0022 target=\\u0022_blank\\u0022\\u003emysite.com\\u003c/a\\u003e.\\u003c/p\\u003e\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/search\\u002dreplace\\u002dand\\u002dstore\\u002dagain/#heading\\u002dadding\\u002dmissing\\u002dlinks\\n#\\n########################################################################\\n\\nquery GetPostData($postId: ID!) {\\n  post(by: { id: $postId }, status: any) {\\n    id\\n    rawContent\\n    adaptedRawContent: _strRegexReplace(\\n      searchRegex: \\u0022#\\\\\\\\s+((https?)://(\\\\\\\\S*?\\\\\\\\.\\\\\\\\S*?))([\\\\\\\\s)\\\\\\\\[\\\\\\\\]{},;\\\\\\u0022\\\\\\\\\':\\u003c]|\\\\\\\\.\\\\\\\\s|$)#i\\u0022\\n      replaceWith: \\u0022\\u003ca href=\\\\\\u0022$1\\\\\\u0022 target=\\\\\\u0022_blank\\\\\\u0022\\u003e$3\\u003c/a\\u003e$4\\u0022\\n      in: $__rawContent\\n    )\\n      @export(as: \\u0022adaptedRawContent\\u0022)\\n  }\\n}\\n\\nmutation AddMissingLinksInPost($postId: ID!)\\n  @depends(on: \\u0022GetPostData\\u0022)\\n{\\n  updatePost(input: {\\n    id: $postId,\\n    contentAs: { html: $adaptedRawContent },\\n  }) {\\n    status\\n    errors {\\n      __typename\\n      ...on ErrorPayload {\\n        message\\n      }\\n    }\\n    post {\\n      id\\n      title\\n      rawContent\\n    }\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Add missing links in post','','private','closed','closed','','add-missing-links-in-post','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/add-missing-links-in-post/',0,'graphql-query','',0),
(88,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d postId: ID of the post to modify\\n# \\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query replaces all `http` URLs with `https`\\n# in the image sources from the post\'s HTML\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/search\\u002dreplace\\u002dand\\u002dstore\\u002dagain/#heading\\u002dreplacing\\u002dhttp\\u002dwith\\u002dhttps\\n#\\n########################################################################\\n\\nquery GetPostData($postId: ID!) {\\n  post(by: { id: $postId }, status: any) {\\n    id\\n    rawContent\\n    adaptedRawContent: _strRegexReplace(\\n      searchRegex: \\u0022/\\u003cimg(\\\\\\\\s+)?([^\\u003e]*?\\\\\\\\s+?)?src=([\\\\\\u0022\'])http:\\\\\\\\/\\\\\\\\/(.*?)/\\u0022\\n      replaceWith: \\u0022\\u003cimg$1$2src=$3https://$4$3\\u0022\\n      in: $__rawContent\\n    )\\n      @export(as: \\u0022adaptedRawContent\\u0022)\\n  }\\n}\\n\\nmutation ReplaceHttpWithHttpsInImageSourcesInPost($postId: ID!)\\n  @depends(on: \\u0022GetPostData\\u0022)\\n{\\n  updatePost(input: {\\n    id: $postId,\\n    contentAs: { html: $adaptedRawContent },\\n  }) {\\n    status\\n    errors {\\n      __typename\\n      ...on ErrorPayload {\\n        message\\n      }\\n    }\\n    post {\\n      id\\n      title\\n      rawContent\\n    }\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Replace \"http\" with \"https\" in image sources in post','','private','closed','closed','','replace-http-with-https-in-image-sources-in-post','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/replace-http-with-https-in-image-sources-in-post/',0,'graphql-query','',0),
(89,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d oldDomain: The old domain\\n#   \\u002d newDomain: The new domain\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query  first filters all posts containing\\n# \\u0022https://my\\u002dold\\u002ddomain.com\\u0022 in its content, and replaces this string\\n# with \\u0022https://my\\u002dnew\\u002ddomain.com\\u0022\\n#\\n# *********************************************************************\\n# \\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/site\\u002dmigrations/\\n#\\n########################################################################\\n\\nmutation ReplaceOldWithNewDomainInPosts(\\n  $oldDomain: String!,\\n  $newDomain: String!\\n) {\\n  posts(\\n    filter: {\\n      search: $oldDomain\\n    },\\n    pagination: {\\n      limit: \\u002d1\\n    }\\n  ) {\\n    id\\n    rawContent\\n    adaptedRawContent: _strReplace(\\n      search: $oldDomain\\n      replaceWith: $newDomain\\n      in: $__rawContent\\n    )\\n    update(input: {\\n      contentAs: { html: $__adaptedRawContent }\\n    }) {\\n      status\\n      errors {\\n        __typename\\n        ...on ErrorPayload {\\n          message\\n        }\\n      }\\n      post {\\n        id\\n        rawContent\\n      }\\n    }\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration {\"schemaConfiguration\":78} /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Replace domain in posts','','private','closed','closed','','replace-domain-in-posts','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/replace-domain-in-posts/',0,'graphql-query','',0),
(90,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d oldPostSlug: The old post or page slug\\n#   \\u002d newPostSlug: The new post or page slug\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# After changing the slug of a post or page, execute this Persisted\\n# GraphQL query to convert all content to point to the new URL.\\n#\\n# *********************************************************************\\n# \\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/site\\u002dmigrations/#heading\\u002dadapting\\u002dcontent\\u002dto\\u002da\\u002dnew\\u002dpost\\u002dor\\u002dpage\\u002durl\\n#\\n########################################################################\\n\\nquery ExportData(\\n  $oldPostSlug: String!\\n  $newPostSlug: String!\\n) {\\n  siteURL: optionValue(name: \\u0022siteurl\\u0022)\\n\\n  oldPostURL: _strAppend(\\n    after: $__siteURL,\\n    append: $oldPostSlug\\n  ) @export(as: \\u0022oldPostURL\\u0022)\\n\\n  newPostURL: _strAppend(\\n    after: $__siteURL,\\n    append: $newPostSlug\\n  ) @export(as: \\u0022newPostURL\\u0022)\\n}\\n\\nmutation ReplaceOldWithNewSlugInPosts\\n  @depends(on: \\u0022ExportData\\u0022)\\n{\\n  posts(\\n    filter: {\\n      search: $oldPostURL\\n    },\\n    pagination: {\\n      limit: \\u002d1\\n    }\\n  ) {\\n    id\\n    rawContent\\n    adaptedRawContent: _strReplace(\\n      search: $oldPostURL\\n      replaceWith: $newPostURL\\n      in: $__rawContent\\n    )\\n    update(input: {\\n      contentAs: { html: $__adaptedRawContent }\\n    }) {\\n      status\\n      errors {\\n        __typename\\n        ...on ErrorPayload {\\n          message\\n        }\\n      }\\n      post {\\n        id\\n        rawContent\\n      }\\n    }\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration {\"schemaConfiguration\":78} /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Replace post slug in posts','','private','closed','closed','','replace-post-slug-in-posts','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/replace-post-slug-in-posts/',0,'graphql-query','',0),
(91,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d searchBlockType: After what block type to insert the new block (\\u0022wp:paragraph\\u0022 by default)\\n#   \\u002d injectAfterBlockCount: After how many occurrences of the block to search will the new block be placed\\n#   \\u002d injectBlockMarkup: The HTML for the block to insert\\n#       eg: \\u003c!\\u002d\\u002d mycompany:black\\u002dfriday\\u002dcampaign\\u002dvideo \\u002d\\u002d\\u003e\\u003cfigure class=\\\\\\u0022wp\\u002dblock\\u002dvideo\\\\\\u0022\\u003e\\u003cvideo controls src=\\\\\\u0022https://mysite.com/videos/BlackFriday2023.mp4\\\\\\u0022\\u003e\\u003c/video\\u003e\\u003c/figure\\u003e\\u003c!\\u002d\\u002d /mycompany:black\\u002dfriday\\u002dcampaign\\u002dvideo \\u002d\\u002d\\u003e\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query identifies the nth block of a given type\\n# (\\u0022wp:paragraph\\u0022 by default) in all posts, and places the provided\\n# custom block\'s HTML content right after it.\\n#\\n# *********************************************************************\\n# \\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/inserting\\u002dremoving\\u002da\\u002dgutenberg\\u002dblock\\u002din\\u002dbulk/#heading\\u002dinserting\\u002dthe\\u002dblock\\u002dwith\\u002dmore\\u002doptions\\n#\\n########################################################################\\n\\nquery CreateRegex(\\n  $searchBlockType: String! = \\u0022wp:paragraph\\u0022\\n  $injectAfterBlockCount: Int = 1\\n  $injectBlockMarkup: String!\\n) {\\n  endingBlockMarkup: _sprintf(\\n    string: \\u0022\\u003c!\\u002d\\u002d /%s \\u002d\\u002d\\u003e\\u0022,\\n    values: [$searchBlockType]\\n  )\\n    @remove\\n  endingBlockMarkupArray: _arrayPad(\\n    array: [],\\n    length: $injectAfterBlockCount,\\n    value: $__endingBlockMarkup\\n  )\\n    @remove\\n  regexString: _arrayJoin(\\n    array: $__endingBlockMarkupArray,\\n    separator: \\u0022[\\\\\\\\s\\\\\\\\S]+\\u0022\\n  )\\n    @remove\\n  regex: _sprintf(\\n    string: \\u0022#(%s)#U\\u0022,\\n    values: [$__regexString]\\n  )\\n    @export(as: \\u0022regex\\u0022)\\n    @remove\\n  replaceWith: _sprintf(\\n    string: \\u0022${1}%s\\u0022,\\n    values: [$injectBlockMarkup]\\n  )\\n    @export(as: \\u0022replaceWith\\u0022)\\n    @remove\\n}\\n\\nmutation InsertBlockInPosts\\n  @depends(on: \\u0022CreateRegex\\u0022)\\n{\\n  posts: posts(\\n    pagination: { limit: \\u002d1 }\\n  ) {\\n    id\\n    rawContent\\n    adaptedRawContent: _strRegexReplace(\\n      in: $__rawContent,\\n      searchRegex: $regex,\\n      replaceWith: $replaceWith,\\n      limit: 1\\n    )\\n    update(input: {\\n      contentAs: { html: $__adaptedRawContent },\\n    }) {\\n      status\\n      errors {\\n        __typename\\n        ...on ErrorPayload {\\n          message\\n        }\\n      }\\n      post {\\n        id\\n        rawContent\\n      }\\n    }\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration {\"schemaConfiguration\":78} /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Insert block in posts','','private','closed','closed','','insert-block-in-posts','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/insert-block-in-posts/',0,'graphql-query','',0),
(92,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d removeBlockType: The HTML for the block to insert\\n#       eg: mycompany:black\\u002dfriday\\u002dcampaign\\u002dvideo\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query removes a block of a given type\\n# from all posts\\n#\\n# *********************************************************************\\n# \\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/inserting\\u002dremoving\\u002da\\u002dgutenberg\\u002dblock\\u002din\\u002dbulk/#heading\\u002dremoving\\u002da\\u002dblock\\u002dwith\\u002dmore\\u002doptions\\n#\\n########################################################################\\n\\nquery CreateVars(\\n  $removeBlockType: String!\\n) {\\n  regex: _sprintf(\\n    string: \\u0022#(\\u003c!\\u002d\\u002d %1$s \\u002d\\u002d\\u003e[\\\\\\\\s\\\\\\\\S]+\\u003c!\\u002d\\u002d /%1$s \\u002d\\u002d\\u003e)#\\u0022,\\n    values: [$removeBlockType]\\n  )\\n    @export(as: \\u0022regex\\u0022)\\n    @remove\\n\\n  search: _sprintf(\\n    string: \\u0022\\\\\\u0022\\u003c!\\u002d\\u002d /%1$s \\u002d\\u002d\\u003e\\\\\\u0022\\u0022,\\n    values: [$removeBlockType]\\n  )\\n    @export(as: \\u0022search\\u0022)\\n    @remove\\n}\\n\\nmutation RemoveBlockFromPosts\\n  @depends(on: \\u0022CreateVars\\u0022)\\n{\\n  posts(filter: { search: $search } ) {\\n    id\\n    rawContent\\n    adaptedRawContent: _strRegexReplace(\\n      in: $__rawContent,\\n      searchRegex: $regex,\\n      replaceWith: \\u0022\\u0022\\n    )\\n    update(input: {\\n      contentAs: { html: $__adaptedRawContent },\\n    }) {\\n      status\\n      errors {\\n        __typename\\n        ...on ErrorPayload {\\n          message\\n        }\\n      }\\n      post {\\n        id\\n        rawContent\\n      }\\n    }\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration {\"schemaConfiguration\":78} /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Remove block from posts','','private','closed','closed','','remove-block-from-posts','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/remove-block-from-posts/',0,'graphql-query','',0),
(93,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d postId: ID of the post to translate\\n#   \\u002d toLang: The language code to translate to, from Google Translate (https://cloud.google.com/translate/docs/languages)\\n#   \\u002d update: Indicate if to update the post, or create a new one\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query translates a post to the desired language,\\n# with full support for Gutenberg, for the following block types:\\n# \\n#   \\u002d core/heading\\n#   \\u002d core/paragraph\\n#   \\u002d core/image\\n#   \\u002d core/button\\n#   \\u002d core/table\\n#   \\u002d core/list\\u002ditem\\n#   \\u002d core/cover\\n#   \\u002d core/media\\u002dtext\\n#   \\u002d core/verse\\n#   \\u002d core/quote\\n#   \\u002d core/pullquote\\n#   \\u002d core/audio\\n#   \\u002d core/video\\n#   \\u002d core/preformatted\\n#   \\u002d core/embed\\n#\\n# Depending on the `$update` parameter, the translation will either\\n# be saved as:\\n#\\n#   \\u002d false (default): A new post (using the translated slug) with \\u0022draft\\u0022 status\\n#   \\u002d true: The same post\\n#\\n# *********************************************************************\\n# \\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/translating\\u002dblock\\u002dcontent\\u002din\\u002da\\u002dpost\\u002dto\\u002da\\u002ddifferent\\u002dlanguage/\\n#\\n########################################################################\\n\\nquery InitializeEmptyVariables {\\n  emptyArray: _echo(value: [])\\n    @export(as: \\u0022coreHeadingContentItems\\u0022)\\n    @export(as: \\u0022coreHeadingContentReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreHeadingContentReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022coreParagraphContentItems\\u0022)\\n    @export(as: \\u0022coreParagraphContentReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreParagraphContentReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022coreImageAltItems\\u0022)\\n    @export(as: \\u0022coreImageAltReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreImageAltReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022coreImageCaptionItems\\u0022)\\n    @export(as: \\u0022coreImageCaptionReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreImageCaptionReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022coreButtonTextItems\\u0022)\\n    @export(as: \\u0022coreButtonTextReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreButtonTextReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022coreTableCaptionItems\\u0022)\\n    @export(as: \\u0022coreTableCaptionReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreTableCaptionReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022coreTableBodyCellsContentItems\\u0022)\\n    @export(as: \\u0022coreTableBodyCellsContentReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreTableBodyCellsContentReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022coreListItemContentItems\\u0022)\\n    @export(as: \\u0022coreListItemContentReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreListItemContentReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022coreCoverAltItems\\u0022)\\n    @export(as: \\u0022coreCoverAltReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreCoverAltReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022coreMediaTextAltItems\\u0022)\\n    @export(as: \\u0022coreMediaTextAltReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreMediaTextAltReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022coreVerseContentItems\\u0022)\\n    @export(as: \\u0022coreVerseContentReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreVerseContentReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022coreQuoteCitationItems\\u0022)\\n    @export(as: \\u0022coreQuoteCitationReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreQuoteCitationReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022corePullquoteCitationItems\\u0022)\\n    @export(as: \\u0022corePullquoteCitationReplacementsFrom\\u0022)\\n    @export(as: \\u0022corePullquoteCitationReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022corePullquoteValueItems\\u0022)\\n    @export(as: \\u0022corePullquoteValueReplacementsFrom\\u0022)\\n    @export(as: \\u0022corePullquoteValueReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022coreAudioCaptionItems\\u0022)\\n    @export(as: \\u0022coreAudioCaptionReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreAudioCaptionReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022coreVideoCaptionItems\\u0022)\\n    @export(as: \\u0022coreVideoCaptionReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreVideoCaptionReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022corePreformattedContentItems\\u0022)\\n    @export(as: \\u0022corePreformattedContentReplacementsFrom\\u0022)\\n    @export(as: \\u0022corePreformattedContentReplacementsTo\\u0022)\\n\\n    @export(as: \\u0022coreEmbedCaptionItems\\u0022)\\n    @export(as: \\u0022coreEmbedCaptionReplacementsFrom\\u0022)\\n    @export(as: \\u0022coreEmbedCaptionReplacementsTo\\u0022)\\n\\n    @remove\\n}\\n\\nquery FetchData($postId: ID!)\\n  @configureWarningsOnExportingDuplicateVariable(enabled: false)\\n  @depends(on: \\u0022InitializeEmptyVariables\\u0022)\\n{\\n  post(by: { id: $postId }, status: any) {\\n    id\\n    title\\n      @export(as: \\u0022title\\u0022)\\n    rawContent\\n      @export(as: \\u0022rawContent\\u0022)\\n    \\n\\n    coreHeading: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/heading\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.content\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreHeadingContentItems\\u0022\\n          )\\n    \\n\\n    coreParagraph: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/paragraph\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.content\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreParagraphContentItems\\u0022\\n          )\\n    \\n\\n    coreImage: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/image\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { key: \\u0022attributes\\u0022 }\\n          affectDirectivesUnderPos: [1, 3]\\n        )\\n          @underJSONObjectProperty(\\n            by: { key: \\u0022alt\\u0022 }\\n            failIfNonExistingKeyOrPath: false\\n          )\\n            @export(\\n              as: \\u0022coreImageAltItems\\u0022\\n            )\\n    \\n          @underJSONObjectProperty(\\n            by: { key: \\u0022caption\\u0022 }\\n            failIfNonExistingKeyOrPath: false\\n          )\\n            @export(\\n              as: \\u0022coreImageCaptionItems\\u0022\\n            )\\n\\n    \\n    coreButton: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/button\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.text\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreButtonTextItems\\u0022\\n          )\\n    \\n\\n    coreTable: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/table\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { key: \\u0022attributes\\u0022 }\\n          affectDirectivesUnderPos: [1, 3]\\n        )\\n          @underJSONObjectProperty(\\n            by: { key: \\u0022caption\\u0022 }\\n            failIfNonExistingKeyOrPath: false\\n          )\\n            @export(\\n              as: \\u0022coreTableCaptionItems\\u0022\\n            )\\n    \\n          @underJSONObjectProperty(\\n            by: { key: \\u0022body\\u0022 }\\n            failIfNonExistingKeyOrPath: false\\n          )\\n            @underEachArrayItem\\n              @underJSONObjectProperty(\\n                by: { key: \\u0022cells\\u0022 }\\n              )\\n                @underEachArrayItem\\n                  @underJSONObjectProperty(\\n                    by: { key: \\u0022content\\u0022 }\\n                  )\\n                    @export(\\n                      as: \\u0022coreTableBodyCellsContentItems\\u0022\\n                    )\\n\\n    \\n    coreListItem: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/list\\u002ditem\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.content\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreListItemContentItems\\u0022\\n          )\\n    \\n\\n    coreCover: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/cover\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.alt\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreCoverAltItems\\u0022\\n          )\\n    \\n\\n    coreMediaText: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/media\\u002dtext\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.mediaAlt\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreMediaTextAltItems\\u0022\\n          )\\n    \\n\\n    coreVerse: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/verse\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.content\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreVerseContentItems\\u0022\\n          )\\n    \\n\\n    coreQuote: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/quote\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.citation\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreQuoteCitationItems\\u0022\\n          )\\n    \\n\\n    corePullquote: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/pullquote\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { key: \\u0022attributes\\u0022 }\\n          affectDirectivesUnderPos: [1, 3]\\n        )\\n          @underJSONObjectProperty(\\n            by: { key: \\u0022citation\\u0022 }\\n            failIfNonExistingKeyOrPath: false\\n          )\\n            @export(\\n              as: \\u0022corePullquoteCitationItems\\u0022\\n            )\\n    \\n          @underJSONObjectProperty(\\n            by: { key: \\u0022value\\u0022 }\\n            failIfNonExistingKeyOrPath: false\\n          )\\n            @export(\\n              as: \\u0022corePullquoteValueItems\\u0022\\n            )\\n    \\n\\n    coreAudio: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/audio\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.caption\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreAudioCaptionItems\\u0022\\n          )\\n    \\n\\n    coreVideo: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/video\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.caption\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreVideoCaptionItems\\u0022\\n          )\\n    \\n\\n    corePreformatted: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/preformatted\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.content\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022corePreformattedContentItems\\u0022\\n          )\\n    \\n\\n    coreEmbed: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/embed\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.caption\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreEmbedCaptionItems\\u0022\\n          )\\n  }\\n}\\n\\nquery TransformData(\\n  $toLang: String!\\n)\\n  @depends(on: \\u0022FetchData\\u0022)\\n{  \\n  transformations: _echo(value: {\\n    meta: {\\n      from: [\\u0022\\u0022],\\n      to: [$title],\\n    }\\n    coreHeadingContent: {\\n      from: $coreHeadingContentItems,\\n      to: $coreHeadingContentItems,\\n    },\\n    coreParagraphContent: {\\n      from: $coreParagraphContentItems,\\n      to: $coreParagraphContentItems,\\n    },\\n    coreImageAlt: {\\n      from: $coreImageAltItems,\\n      to: $coreImageAltItems,\\n    },\\n    coreImageCaption: {\\n      from: $coreImageCaptionItems,\\n      to: $coreImageCaptionItems,\\n    },\\n    coreButtonText: {\\n      from: $coreButtonTextItems\\n      to: $coreButtonTextItems\\n    },\\n    coreTableCaption: {\\n      from: $coreTableCaptionItems,\\n      to: $coreTableCaptionItems,\\n    },\\n    coreTableBodyCellsContent: {\\n      from: $coreTableBodyCellsContentItems,\\n      to: $coreTableBodyCellsContentItems,\\n    },\\n    coreListItemContent: {\\n      from: $coreListItemContentItems,\\n      to: $coreListItemContentItems,\\n    },\\n    coreCoverAlt: {\\n      from: $coreCoverAltItems,\\n      to: $coreCoverAltItems,\\n    },\\n    coreMediaTextAlt: {\\n      from: $coreMediaTextAltItems,\\n      to: $coreMediaTextAltItems,\\n    },\\n    coreVerseContent: {\\n      from: $coreVerseContentItems,\\n      to: $coreVerseContentItems,\\n    },\\n    coreQuoteCitation: {\\n      from: $coreQuoteCitationItems,\\n      to: $coreQuoteCitationItems,\\n    },\\n    corePullquoteCitation: {\\n      from: $corePullquoteCitationItems,\\n      to: $corePullquoteCitationItems,\\n    },\\n    corePullquoteValue: {\\n      from: $corePullquoteValueItems,\\n      to: $corePullquoteValueItems,\\n    },\\n    coreAudioCaption: {\\n      from: $coreAudioCaptionItems,\\n      to: $coreAudioCaptionItems,\\n    },\\n    coreVideoCaption: {\\n      from: $coreVideoCaptionItems,\\n      to: $coreVideoCaptionItems,\\n    },\\n    corePreformattedContent: {\\n      from: $corePreformattedContentItems,\\n      to: $corePreformattedContentItems,\\n    },\\n    coreEmbedCaption: {\\n      from: $coreEmbedCaptionItems,\\n      to: $coreEmbedCaptionItems,\\n    },\\n  })\\n    @underEachJSONObjectProperty\\n      @underJSONObjectProperty(by: { key: \\u0022to\\u0022 })\\n        @underEachArrayItem\\n          @strTranslate(to: $toLang)\\n    @export(as: \\u0022transformations\\u0022)\\n}\\n\\nquery EscapeRegexStrings\\n  @depends(on: \\u0022TransformData\\u0022)\\n{  \\n  escapedRegexStrings: _echo(value: $transformations)\\n    @underEachJSONObjectProperty\\n      @underJSONObjectProperty(by: { key: \\u0022from\\u0022 })\\n        @underEachArrayItem\\n          @strReplaceMultiple(\\n            search: [\\n              \\u0022\\\\\\\\\\u0022,\\n              \\u0022^\\u0022,\\n              \\u0022$\\u0022,\\n              \\u0022|\\u0022,\\n              \\u0022[\\u0022,\\n              \\u0022]\\u0022,\\n              \\u0022(\\u0022,\\n              \\u0022)\\u0022,\\n              \\u0022{\\u0022,\\n              \\u0022{\\u0022,\\n              \\u0022#\\u0022,\\n              \\u0022?\\u0022,\\n              \\u0022.\\u0022,\\n              \\u0022*\\u0022,\\n              \\u0022+\\u0022\\n            ],\\n            replaceWith: [\\n              \\u0022\\\\\\\\\\\\\\\\\\u0022,\\n              \\u0022\\\\\\\\^\\u0022,\\n              \\u0022\\\\\\\\$\\u0022,\\n              \\u0022\\\\\\\\|\\u0022,\\n              \\u0022\\\\\\\\[\\u0022,\\n              \\u0022\\\\\\\\]\\u0022,\\n              \\u0022\\\\\\\\(\\u0022,\\n              \\u0022\\\\\\\\)\\u0022,\\n              \\u0022\\\\\\\\{\\u0022,\\n              \\u0022\\\\\\\\}\\u0022,\\n              \\u0022\\\\\\\\#\\u0022,\\n              \\u0022\\\\\\\\?\\u0022,\\n              \\u0022\\\\\\\\.\\u0022,\\n              \\u0022\\\\\\\\*\\u0022,\\n              \\u0022\\\\\\\\+\\u0022\\n            ]\\n          )\\n    @underEachJSONObjectProperty(\\n      filter: {\\n        by: {\\n          excludeKeys: \\u0022meta\\u0022\\n        }\\n      }\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem\\n          @strRegexReplace(\\n            searchRegex: \\u0022#\\\\\\\\$(\\\\\\\\d+)#\\u0022,\\n            replaceWith: \\u0022\\\\\\\\\\\\\\\\\\\\\\\\$1\\u0022\\n          )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022${1}%s${2}\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n    @export(as: \\u0022escapedRegexTransformations\\u0022)\\n}\\n\\nquery CreateRegexReplacements\\n  @depends(on: \\u0022EscapeRegexStrings\\u0022)\\n{  \\n  regexReplacements: _echo(value: $escapedRegexTransformations)\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreHeadingContent\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:heading .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003ch[1\\u002d6] ?.*?\\u003e)%s(\\u003c/h[1\\u002d6]\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:heading \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreHeadingContentReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreHeadingContentReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreParagraphContent\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:paragraph .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cp ?.*?\\u003e)%s(\\u003c/p\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:paragraph \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreParagraphContentReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreParagraphContentReplacementsTo\\u0022,\\n        )\\n  \\n  \\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreImageAlt\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:image .*?\\u002d\\u002d\\u003e\\\\\\\\n?.*\\u003cimg .*?alt=\\\\\\\\\\\\\\u0022)%s(\\\\\\\\\\\\\\u0022.*\\u003e.*\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:image \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreImageAltReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreImageAltReplacementsTo\\u0022,\\n        )\\n  \\n  \\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreImageCaption\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:image .*?\\u002d\\u002d\\u003e\\\\\\\\n?.*\\u003cfigcaption ?.*?\\u003e)%s(\\u003c/figcaption\\u003e.*\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:image \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreImageCaptionReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreImageCaptionReplacementsTo\\u0022,\\n        )\\n  \\n  \\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreButtonText\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:button .*?\\u002d\\u002d\\u003e\\\\\\\\n?.*\\u003ca ?.*?\\u003e)%s(\\u003c/a\\u003e.*\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:button \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreButtonTextReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreButtonTextReplacementsTo\\u0022,\\n        )\\n  \\n  \\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreTableCaption\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:table .*?\\u002d\\u002d\\u003e\\\\\\\\n?.*\\u003cfigcaption ?.*?\\u003e.*)%s(.*\\u003c/figcaption\\u003e.*\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:table \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreTableCaptionReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreTableCaptionReplacementsTo\\u0022,\\n        )\\n  \\n  \\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreTableBodyCellsContent\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:table .*?\\u002d\\u002d\\u003e\\\\\\\\n?.*\\u003ctable ?.*?\\u003e.*)%s(.*\\u003c/table\\u003e.*\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:table \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreTableBodyCellsContentReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreTableBodyCellsContentReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreListItemContent\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:list\\u002ditem .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cli ?.*?\\u003e)%s(\\u003c/li\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:list\\u002ditem \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreListItemContentReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreListItemContentReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreCoverAlt\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:cover .*?\\u002d\\u002d\\u003e\\\\\\\\n?.*\\u003cimg .*?alt=\\\\\\\\\\\\\\u0022)%s(\\\\\\\\\\\\\\u0022.*\\u003e.*\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:cover \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreCoverAltReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreCoverAltReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreMediaTextAlt\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:media\\u002dtext .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cdiv .*\\u003e\\u003cfigure .*\\u003e\\u003cimg .*?alt=\\\\\\\\\\\\\\u0022)%s(\\\\\\\\\\\\\\u0022)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreMediaTextAltReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreMediaTextAltReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreVerseContent\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:verse .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cpre ?.*?\\u003e)%s(\\u003c/pre\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:verse \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreVerseContentReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreVerseContentReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreQuoteCitation\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:quote .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cblockquote ?.*?\\u003e.*\\u003ccite ?.*?\\u003e)%s(\\u003c/cite\\u003e\\u003c/blockquote\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:quote \\u002d\\u002d\\u003e)#s\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreQuoteCitationReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreQuoteCitationReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022corePullquoteCitation\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:pullquote .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cfigure ?.*?\\u003e\\u003cblockquote ?.*?\\u003e\\u003cp ?.*?\\u003e.*\\u003c/p\\u003e\\u003ccite ?.*?\\u003e)%s(\\u003c/cite\\u003e\\u003c/blockquote\\u003e\\u003c/figure\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:pullquote \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022corePullquoteCitationReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022corePullquoteCitationReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022corePullquoteValue\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:pullquote .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cfigure ?.*?\\u003e\\u003cblockquote ?.*?\\u003e\\u003cp ?.*?\\u003e)%s(\\u003c/p\\u003e\\u003ccite ?.*?\\u003e.*\\u003c/cite\\u003e\\u003c/blockquote\\u003e\\u003c/figure\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:pullquote \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022corePullquoteValueReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022corePullquoteValueReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreAudioCaption\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:audio .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cfigure ?.*?\\u003e\\u003caudio ?.*?\\u003e.*\\u003c/audio\\u003e\\u003cfigcaption ?.*?\\u003e)%s(\\u003c/figcaption\\u003e\\u003c/figure\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:audio \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreAudioCaptionReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreAudioCaptionReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreVideoCaption\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:video .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cfigure ?.*?\\u003e\\u003cvideo ?.*?\\u003e.*\\u003c/video\\u003e\\u003cfigcaption ?.*?\\u003e)%s(\\u003c/figcaption\\u003e\\u003c/figure\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:video \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreVideoCaptionReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreVideoCaptionReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022corePreformattedContent\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:preformatted .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cpre ?.*?\\u003e)%s(\\u003c/pre\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:preformatted \\u002d\\u002d\\u003e)#\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022corePreformattedContentReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022corePreformattedContentReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreEmbedCaption\\u0022 }\\n      affectDirectivesUnderPos: [1, 5]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 3],\\n      )\\n        @underEachArrayItem(\\n          passValueOnwardsAs: \\u0022value\\u0022\\n        )\\n          @applyField(\\n            name: \\u0022_sprintf\\u0022,\\n            arguments: {\\n              string: \\u0022#(\\u003c!\\u002d\\u002d wp:embed .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cfigure ?.*?\\u003e\\u003cdiv ?.*?\\u003e.*\\u003c/div\\u003e\\u003cfigcaption ?.*?\\u003e)%s(\\u003c/figcaption\\u003e\\u003c/figure\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:embed \\u002d\\u002d\\u003e)#s\\u0022,\\n              values: [$value]\\n            },\\n            setResultInResponse: true\\n          )\\n        @export(\\n          as: \\u0022coreEmbedCaptionReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreEmbedCaptionReplacementsTo\\u0022,\\n        )\\n}\\n\\nquery ExecuteRegexReplacements\\n  @depends(on: \\u0022CreateRegexReplacements\\u0022)\\n{  \\n  transformedRawContent: _echo(value: $rawContent)\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreHeadingContentReplacementsFrom,\\n      replaceWith: $coreHeadingContentReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreParagraphContentReplacementsFrom,\\n      replaceWith: $coreParagraphContentReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreImageAltReplacementsFrom,\\n      replaceWith: $coreImageAltReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreImageCaptionReplacementsFrom,\\n      replaceWith: $coreImageCaptionReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreButtonTextReplacementsFrom,\\n      replaceWith: $coreButtonTextReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreTableCaptionReplacementsFrom,\\n      replaceWith: $coreTableCaptionReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreTableBodyCellsContentReplacementsFrom,\\n      replaceWith: $coreTableBodyCellsContentReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreListItemContentReplacementsFrom,\\n      replaceWith: $coreListItemContentReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreCoverAltReplacementsFrom,\\n      replaceWith: $coreCoverAltReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreMediaTextAltReplacementsFrom,\\n      replaceWith: $coreMediaTextAltReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreVerseContentReplacementsFrom,\\n      replaceWith: $coreVerseContentReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreQuoteCitationReplacementsFrom,\\n      replaceWith: $coreQuoteCitationReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $corePullquoteCitationReplacementsFrom,\\n      replaceWith: $corePullquoteCitationReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $corePullquoteValueReplacementsFrom,\\n      replaceWith: $corePullquoteValueReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreAudioCaptionReplacementsFrom,\\n      replaceWith: $coreAudioCaptionReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreVideoCaptionReplacementsFrom,\\n      replaceWith: $coreVideoCaptionReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $corePreformattedContentReplacementsFrom,\\n      replaceWith: $corePreformattedContentReplacementsTo\\n    )\\n    @strRegexReplaceMultiple(\\n      limit: 1,\\n      searchRegex: $coreEmbedCaptionReplacementsFrom,\\n      replaceWith: $coreEmbedCaptionReplacementsTo\\n    )\\n    \\n    @export(as: \\u0022transformedRawContent\\u0022)\\n}\\n\\nquery PrepareMetaReplacements\\n  @depends(on: \\u0022TransformData\\u0022)\\n{  \\n  transformedMeta: _objectProperty(\\n    object: $transformations,\\n    by: { path: \\u0022meta.to\\u0022 }\\n  )\\n    @underArrayItem(index: 0)\\n      @export(as: \\u0022transformedTitle\\u0022)\\n}\\n\\nmutation TranslateGutenbergPost(\\n  $postId: ID!\\n  $update: Boolean! = false\\n)\\n  @depends(on: [\\n    \\u0022ExecuteRegexReplacements\\u0022,\\n    \\u0022PrepareMetaReplacements\\u0022\\n  ]\\n) {\\n  createPost(input: {\\n    title: $transformedTitle,\\n    contentAs: {\\n      html: $transformedRawContent\\n    },\\n    status: draft\\n  })\\n    @skip(if: $update)\\n  {\\n    status\\n    errors {\\n      __typename\\n      ...on ErrorPayload {\\n        message\\n      }\\n    }\\n    post {\\n      id\\n      title\\n      slug\\n      rawContent\\n    }    \\n  }\\n\\n  updatePost(input: {\\n    id: $postId,\\n    title: $transformedTitle,\\n    contentAs: {\\n      html: $transformedRawContent\\n    }\\n  })\\n    @include(if: $update)\\n  {\\n    status\\n    errors {\\n      __typename\\n      ...on ErrorPayload {\\n        message\\n      }\\n    }\\n    post {\\n      id\\n      title\\n      rawContent\\n    }    \\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Translate post (Gutenberg)','','private','closed','closed','','translate-post-gutenberg','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/translate-post-gutenberg/',0,'graphql-query','',0),
(94,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d postIds: List of IDs of the posts to translate\\n#   \\u002d toLang: The language code to translate to, from Google Translate (https://cloud.google.com/translate/docs/languages)\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query translates multiple posts at once\\n# (in bulk), while executing a single call to the Google Translate\\n# API containing all text to translate from all the posts.\\n#\\n# The translation for each post will be saved under the same post.\\n#\\n# See Persisted Query \\u0022Translate post (Gutenberg)\\u0022 for additional\\n# documentation.\\n#\\n# *********************************************************************\\n# \\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/bulk\\u002dtranslating\\u002dblock\\u002dcontent\\u002din\\u002dmultiple\\u002dposts\\u002dto\\u002da\\u002ddifferent\\u002dlanguage/\\n#\\n########################################################################\\n\\nquery InitializeEmptyVariables($postIds: [ID!]!) {\\n  emptyVars: posts(filter: { ids: $postIds, status: any } ) {\\n    emptyArray: _echo(value: [])\\n      @export(\\n        as: \\u0022coreHeadingContentItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreHeadingContentReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreHeadingContentReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022coreParagraphContentItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreParagraphContentReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreParagraphContentReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022coreImageAltItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreImageAltReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreImageAltReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022coreImageCaptionItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreImageCaptionReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreImageCaptionReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022coreButtonTextItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreButtonTextReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreButtonTextReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022coreTableCaptionItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreTableCaptionReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreTableCaptionReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022coreTableBodyCellsContentItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreTableBodyCellsContentReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreTableBodyCellsContentReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022coreListItemContentItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreListItemContentReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreListItemContentReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022coreCoverAltItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreCoverAltReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreCoverAltReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022coreMediaTextAltItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreMediaTextAltReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreMediaTextAltReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022coreVerseContentItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreVerseContentReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreVerseContentReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022coreQuoteCitationItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreQuoteCitationReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreQuoteCitationReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022corePullquoteCitationItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022corePullquoteCitationReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022corePullquoteCitationReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022corePullquoteValueItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022corePullquoteValueReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022corePullquoteValueReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022coreAudioCaptionItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreAudioCaptionReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreAudioCaptionReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022coreVideoCaptionItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreVideoCaptionReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreVideoCaptionReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022corePreformattedContentItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022corePreformattedContentReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022corePreformattedContentReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n\\n      @export(\\n        as: \\u0022coreEmbedCaptionItems\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreEmbedCaptionReplacementsFrom\\u0022\\n        type: DICTIONARY\\n      )\\n      @export(\\n        as: \\u0022coreEmbedCaptionReplacementsTo\\u0022\\n        type: DICTIONARY\\n      )\\n  }\\n}\\n\\nquery FetchData($postIds: [ID!]!)\\n  @configureWarningsOnExportingDuplicateVariable(enabled: false)\\n  @depends(on: \\u0022InitializeEmptyVariables\\u0022)\\n{\\n  posts(filter: { ids: $postIds, status: any } ) {\\n    id\\n    title\\n      @export(as: \\u0022title\\u0022, type: DICTIONARY)\\n    rawContent\\n      @export(as: \\u0022rawContent\\u0022, type: DICTIONARY)\\n    \\n\\n    coreHeading: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/heading\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.content\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreHeadingContentItems\\u0022\\n            type: DICTIONARY\\n          )\\n    \\n\\n    coreParagraph: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/paragraph\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.content\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreParagraphContentItems\\u0022\\n            type: DICTIONARY\\n          )\\n    \\n\\n    coreImage: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/image\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { key: \\u0022attributes\\u0022 }\\n          affectDirectivesUnderPos: [1, 3]\\n        )\\n          @underJSONObjectProperty(\\n            by: { key: \\u0022alt\\u0022 }\\n            failIfNonExistingKeyOrPath: false\\n          )\\n            @export(\\n              as: \\u0022coreImageAltItems\\u0022\\n              type: DICTIONARY\\n            )\\n    \\n          @underJSONObjectProperty(\\n            by: { key: \\u0022caption\\u0022 }\\n            failIfNonExistingKeyOrPath: false\\n          )\\n            @export(\\n              as: \\u0022coreImageCaptionItems\\u0022\\n              type: DICTIONARY\\n            )\\n\\n    \\n    coreButton: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/button\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.text\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreButtonTextItems\\u0022\\n            type: DICTIONARY\\n          )\\n    \\n\\n    coreTable: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/table\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { key: \\u0022attributes\\u0022 }\\n          affectDirectivesUnderPos: [1, 3]\\n        )\\n          @underJSONObjectProperty(\\n            by: { key: \\u0022caption\\u0022 }\\n            failIfNonExistingKeyOrPath: false\\n          )\\n            @export(\\n              as: \\u0022coreTableCaptionItems\\u0022\\n              type: DICTIONARY\\n            )\\n    \\n          @underJSONObjectProperty(\\n            by: { key: \\u0022body\\u0022 }\\n            failIfNonExistingKeyOrPath: false\\n          )\\n            @underEachArrayItem\\n              @underJSONObjectProperty(\\n                by: { key: \\u0022cells\\u0022 }\\n              )\\n                @underEachArrayItem\\n                  @underJSONObjectProperty(\\n                    by: { key: \\u0022content\\u0022 }\\n                  )\\n                    @export(\\n                      as: \\u0022coreTableBodyCellsContentItems\\u0022\\n                      type: DICTIONARY\\n                    )\\n\\n    \\n    coreListItem: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/list\\u002ditem\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.content\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreListItemContentItems\\u0022\\n            type: DICTIONARY\\n          )\\n    \\n\\n    coreCover: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/cover\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.alt\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreCoverAltItems\\u0022\\n            type: DICTIONARY\\n          )\\n    \\n\\n    coreMediaText: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/media\\u002dtext\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.mediaAlt\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreMediaTextAltItems\\u0022\\n            type: DICTIONARY\\n          )\\n    \\n\\n    coreVerse: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/verse\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.content\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreVerseContentItems\\u0022\\n            type: DICTIONARY\\n          )\\n    \\n\\n    coreQuote: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/quote\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.citation\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreQuoteCitationItems\\u0022\\n            type: DICTIONARY\\n          )\\n    \\n\\n    corePullquote: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/pullquote\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { key: \\u0022attributes\\u0022 }\\n          affectDirectivesUnderPos: [1, 3]\\n        )\\n          @underJSONObjectProperty(\\n            by: { key: \\u0022citation\\u0022 }\\n            failIfNonExistingKeyOrPath: false\\n          )\\n            @export(\\n              as: \\u0022corePullquoteCitationItems\\u0022\\n              type: DICTIONARY\\n            )\\n    \\n          @underJSONObjectProperty(\\n            by: { key: \\u0022value\\u0022 }\\n            failIfNonExistingKeyOrPath: false\\n          )\\n            @export(\\n              as: \\u0022corePullquoteValueItems\\u0022\\n              type: DICTIONARY\\n            )\\n    \\n\\n    coreAudio: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/audio\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.caption\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreAudioCaptionItems\\u0022\\n            type: DICTIONARY\\n          )\\n    \\n\\n    coreVideo: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/video\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.caption\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreVideoCaptionItems\\u0022\\n            type: DICTIONARY\\n          )\\n    \\n\\n    corePreformatted: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/preformatted\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.content\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022corePreformattedContentItems\\u0022\\n            type: DICTIONARY\\n          )\\n    \\n\\n    coreEmbed: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/embed\\u0022 }\\n    )\\n      @underEachArrayItem\\n        @underJSONObjectProperty(\\n          by: { path: \\u0022attributes.caption\\u0022 }\\n          failIfNonExistingKeyOrPath: false\\n        )\\n          @export(\\n            as: \\u0022coreEmbedCaptionItems\\u0022\\n            type: DICTIONARY\\n          )\\n  }\\n}\\n\\nquery AdaptData\\n  @depends(on: \\u0022FetchData\\u0022)\\n{\\n  adaptedToTitle: _echo(value: $title)\\n    @underEachJSONObjectProperty(\\n      passValueOnwardsAs: \\u0022value\\u0022\\n    )\\n      @applyField(\\n        name: \\u0022_echo\\u0022\\n        arguments: {\\n          value: [$value]\\n        }\\n        setResultInResponse: true\\n      )\\n    @export(as: \\u0022adaptedToTitle\\u0022)\\n  adaptedFromTitle: _echo(value: $title)\\n    @underEachJSONObjectProperty\\n      @applyField(\\n        name: \\u0022_echo\\u0022\\n        arguments: {\\n          value: [\\u0022\\u0022]\\n        }\\n        setResultInResponse: true\\n      )\\n    @export(as: \\u0022adaptedFromTitle\\u0022)\\n}\\n\\nquery TransformData(\\n  $toLang: String!\\n)\\n  @depends(on: \\u0022AdaptData\\u0022)\\n{\\n  transformations: _echo(value: {\\n    meta: {\\n      from: $adaptedFromTitle,\\n      to: $adaptedToTitle,\\n    }\\n    coreHeadingContent: {\\n      from: $coreHeadingContentItems,\\n      to: $coreHeadingContentItems,\\n    },\\n    coreParagraphContent: {\\n      from: $coreParagraphContentItems,\\n      to: $coreParagraphContentItems,\\n    },\\n    coreImageAlt: {\\n      from: $coreImageAltItems,\\n      to: $coreImageAltItems,\\n    },\\n    coreImageCaption: {\\n      from: $coreImageCaptionItems,\\n      to: $coreImageCaptionItems,\\n    },\\n    coreButtonText: {\\n      from: $coreButtonTextItems\\n      to: $coreButtonTextItems\\n    },\\n    coreTableCaption: {\\n      from: $coreTableCaptionItems,\\n      to: $coreTableCaptionItems,\\n    },\\n    coreTableBodyCellsContent: {\\n      from: $coreTableBodyCellsContentItems,\\n      to: $coreTableBodyCellsContentItems,\\n    },\\n    coreListItemContent: {\\n      from: $coreListItemContentItems,\\n      to: $coreListItemContentItems,\\n    },\\n    coreCoverAlt: {\\n      from: $coreCoverAltItems,\\n      to: $coreCoverAltItems,\\n    },\\n    coreMediaTextAlt: {\\n      from: $coreMediaTextAltItems,\\n      to: $coreMediaTextAltItems,\\n    },\\n    coreVerseContent: {\\n      from: $coreVerseContentItems,\\n      to: $coreVerseContentItems,\\n    },\\n    coreQuoteCitation: {\\n      from: $coreQuoteCitationItems,\\n      to: $coreQuoteCitationItems,\\n    },\\n    corePullquoteCitation: {\\n      from: $corePullquoteCitationItems,\\n      to: $corePullquoteCitationItems,\\n    },\\n    corePullquoteValue: {\\n      from: $corePullquoteValueItems,\\n      to: $corePullquoteValueItems,\\n    },\\n    coreAudioCaption: {\\n      from: $coreAudioCaptionItems,\\n      to: $coreAudioCaptionItems,\\n    },\\n    coreVideoCaption: {\\n      from: $coreVideoCaptionItems,\\n      to: $coreVideoCaptionItems,\\n    },\\n    corePreformattedContent: {\\n      from: $corePreformattedContentItems,\\n      to: $corePreformattedContentItems,\\n    },\\n    coreEmbedCaption: {\\n      from: $coreEmbedCaptionItems,\\n      to: $coreEmbedCaptionItems,\\n    },\\n  })\\n    @underEachJSONObjectProperty\\n      @underJSONObjectProperty(by: { key: \\u0022to\\u0022 })\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem\\n            @strTranslate(to: $toLang)\\n    @export(as: \\u0022transformations\\u0022)\\n}\\n\\nquery EscapeRegexStrings\\n  @depends(on: \\u0022TransformData\\u0022)\\n{  \\n  escapedRegexStrings: _echo(value: $transformations)\\n    @underEachJSONObjectProperty(\\n      filter: {\\n        by: {\\n          excludeKeys: \\u0022meta\\u0022\\n        }\\n      }\\n    )\\n      @underJSONObjectProperty(by: { key: \\u0022from\\u0022 })\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem\\n            @strReplaceMultiple(\\n              search: [\\n                \\u0022\\\\\\\\\\u0022,\\n                \\u0022^\\u0022,\\n                \\u0022$\\u0022,\\n                \\u0022|\\u0022,\\n                \\u0022[\\u0022,\\n                \\u0022]\\u0022,\\n                \\u0022(\\u0022,\\n                \\u0022)\\u0022,\\n                \\u0022{\\u0022,\\n                \\u0022{\\u0022,\\n                \\u0022#\\u0022,\\n                \\u0022?\\u0022,\\n                \\u0022.\\u0022,\\n                \\u0022*\\u0022,\\n                \\u0022+\\u0022\\n              ],\\n              replaceWith: [\\n                \\u0022\\\\\\\\\\\\\\\\\\u0022,\\n                \\u0022\\\\\\\\^\\u0022,\\n                \\u0022\\\\\\\\$\\u0022,\\n                \\u0022\\\\\\\\|\\u0022,\\n                \\u0022\\\\\\\\[\\u0022,\\n                \\u0022\\\\\\\\]\\u0022,\\n                \\u0022\\\\\\\\(\\u0022,\\n                \\u0022\\\\\\\\)\\u0022,\\n                \\u0022\\\\\\\\{\\u0022,\\n                \\u0022\\\\\\\\}\\u0022,\\n                \\u0022\\\\\\\\#\\u0022,\\n                \\u0022\\\\\\\\?\\u0022,\\n                \\u0022\\\\\\\\.\\u0022,\\n                \\u0022\\\\\\\\*\\u0022,\\n                \\u0022\\\\\\\\+\\u0022\\n              ]\\n            )\\n    @underEachJSONObjectProperty(\\n      filter: {\\n        by: {\\n          excludeKeys: \\u0022meta\\u0022\\n        }\\n      }\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @underEachJSONObjectProperty(\\n          affectDirectivesUnderPos: [1, 3]\\n        )\\n          @underEachArrayItem\\n            @strRegexReplace(\\n              searchRegex: \\u0022#\\\\\\\\$(\\\\\\\\d+)#\\u0022,\\n              replaceWith: \\u0022\\\\\\\\\\\\\\\\\\\\\\\\$1\\u0022\\n            )\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022${1}%s${2}\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n    @export(as: \\u0022escapedRegexTransformations\\u0022)\\n}\\n\\nquery CreateRegexReplacements\\n  @depends(on: \\u0022EscapeRegexStrings\\u0022)\\n{  \\n  regexReplacements: _echo(value: $escapedRegexTransformations)\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreHeadingContent\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:heading .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003ch[1\\u002d6] ?.*?\\u003e)%s(\\u003c/h[1\\u002d6]\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:heading \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreHeadingContentReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreHeadingContentReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreParagraphContent\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:paragraph .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cp ?.*?\\u003e)%s(\\u003c/p\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:paragraph \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreParagraphContentReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreParagraphContentReplacementsTo\\u0022,\\n        )\\n  \\n  \\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreImageAlt\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:image .*?\\u002d\\u002d\\u003e\\\\\\\\n?.*\\u003cimg .*?alt=\\\\\\\\\\\\\\u0022)%s(\\\\\\\\\\\\\\u0022.*\\u003e.*\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:image \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreImageAltReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreImageAltReplacementsTo\\u0022,\\n        )\\n  \\n  \\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreImageCaption\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:image .*?\\u002d\\u002d\\u003e\\\\\\\\n?.*\\u003cfigcaption ?.*?\\u003e)%s(\\u003c/figcaption\\u003e.*\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:image \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreImageCaptionReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreImageCaptionReplacementsTo\\u0022,\\n        )\\n  \\n  \\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreButtonText\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:button .*?\\u002d\\u002d\\u003e\\\\\\\\n?.*\\u003ca ?.*?\\u003e)%s(\\u003c/a\\u003e.*\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:button \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreButtonTextReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreButtonTextReplacementsTo\\u0022,\\n        )\\n  \\n  \\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreTableCaption\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:table .*?\\u002d\\u002d\\u003e\\\\\\\\n?.*\\u003cfigcaption ?.*?\\u003e.*)%s(.*\\u003c/figcaption\\u003e.*\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:table \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreTableCaptionReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreTableCaptionReplacementsTo\\u0022,\\n        )\\n  \\n  \\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreTableBodyCellsContent\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:table .*?\\u002d\\u002d\\u003e\\\\\\\\n?.*\\u003ctable ?.*?\\u003e.*)%s(.*\\u003c/table\\u003e.*\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:table \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreTableBodyCellsContentReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreTableBodyCellsContentReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreListItemContent\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:list\\u002ditem .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cli ?.*?\\u003e)%s(\\u003c/li\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:list\\u002ditem \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreListItemContentReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreListItemContentReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreCoverAlt\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:cover .*?\\u002d\\u002d\\u003e\\\\\\\\n?.*\\u003cimg .*?alt=\\\\\\\\\\\\\\u0022)%s(\\\\\\\\\\\\\\u0022.*\\u003e.*\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:cover \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreCoverAltReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreCoverAltReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreMediaTextAlt\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:media\\u002dtext .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cdiv .*\\u003e\\u003cfigure .*\\u003e\\u003cimg .*?alt=\\\\\\\\\\\\\\u0022)%s(\\\\\\\\\\\\\\u0022)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreMediaTextAltReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreMediaTextAltReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreVerseContent\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:verse .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cpre ?.*?\\u003e)%s(\\u003c/pre\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:verse \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreVerseContentReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreVerseContentReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreQuoteCitation\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:quote .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cblockquote ?.*?\\u003e.*\\u003ccite ?.*?\\u003e)%s(\\u003c/cite\\u003e\\u003c/blockquote\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:quote \\u002d\\u002d\\u003e)#s\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreQuoteCitationReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreQuoteCitationReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022corePullquoteCitation\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:pullquote .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cfigure ?.*?\\u003e\\u003cblockquote ?.*?\\u003e\\u003cp ?.*?\\u003e.*\\u003c/p\\u003e\\u003ccite ?.*?\\u003e)%s(\\u003c/cite\\u003e\\u003c/blockquote\\u003e\\u003c/figure\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:pullquote \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022corePullquoteCitationReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022corePullquoteCitationReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022corePullquoteValue\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:pullquote .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cfigure ?.*?\\u003e\\u003cblockquote ?.*?\\u003e\\u003cp ?.*?\\u003e)%s(\\u003c/p\\u003e\\u003ccite ?.*?\\u003e.*\\u003c/cite\\u003e\\u003c/blockquote\\u003e\\u003c/figure\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:pullquote \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022corePullquoteValueReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022corePullquoteValueReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreAudioCaption\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:audio .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cfigure ?.*?\\u003e\\u003caudio ?.*?\\u003e.*\\u003c/audio\\u003e\\u003cfigcaption ?.*?\\u003e)%s(\\u003c/figcaption\\u003e\\u003c/figure\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:audio \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreAudioCaptionReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreAudioCaptionReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreVideoCaption\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:video .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cfigure ?.*?\\u003e\\u003cvideo ?.*?\\u003e.*\\u003c/video\\u003e\\u003cfigcaption ?.*?\\u003e)%s(\\u003c/figcaption\\u003e\\u003c/figure\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:video \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreVideoCaptionReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreVideoCaptionReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022corePreformattedContent\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:preformatted .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cpre ?.*?\\u003e)%s(\\u003c/pre\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:preformatted \\u002d\\u002d\\u003e)#\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022corePreformattedContentReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022corePreformattedContentReplacementsTo\\u0022,\\n        )\\n\\n\\n    @underJSONObjectProperty(\\n      by: { key: \\u0022coreEmbedCaption\\u0022 }\\n      affectDirectivesUnderPos: [1, 6]\\n    )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022from\\u0022 }\\n        affectDirectivesUnderPos: [1, 4],\\n      )\\n        @underEachJSONObjectProperty\\n          @underEachArrayItem(\\n            passValueOnwardsAs: \\u0022value\\u0022\\n          )\\n            @applyField(\\n              name: \\u0022_sprintf\\u0022,\\n              arguments: {\\n                string: \\u0022#(\\u003c!\\u002d\\u002d wp:embed .*?\\u002d\\u002d\\u003e\\\\\\\\n?\\u003cfigure ?.*?\\u003e\\u003cdiv ?.*?\\u003e.*\\u003c/div\\u003e\\u003cfigcaption ?.*?\\u003e)%s(\\u003c/figcaption\\u003e\\u003c/figure\\u003e\\\\\\\\n?\\u003c!\\u002d\\u002d /wp:embed \\u002d\\u002d\\u003e)#s\\u0022,\\n                values: [$value]\\n              },\\n              setResultInResponse: true\\n            )\\n        @export(\\n          as: \\u0022coreEmbedCaptionReplacementsFrom\\u0022,\\n        )\\n      @underJSONObjectProperty(\\n        by: { key: \\u0022to\\u0022 }\\n      )\\n        @export(\\n          as: \\u0022coreEmbedCaptionReplacementsTo\\u0022,\\n        )\\n}\\n\\nquery ExecuteRegexReplacements\\n  @depends(on: \\u0022CreateRegexReplacements\\u0022)\\n{\\n  transformedRawContent: _echo(value: $rawContent)\\n    @underEachJSONObjectProperty(\\n      passKeyOnwardsAs: \\u0022postID\\u0022\\n      affectDirectivesUnderPos: [\\n        1, 2,\\n        6, 7,\\n        11, 12,\\n        16, 17,\\n        21, 22,\\n        26, 27,\\n        31, 32,\\n        36, 37,\\n        41, 42,\\n        46, 47,\\n        51, 52,\\n        56, 57,\\n        61, 62,\\n        66, 67,\\n        71, 72,\\n        76, 77,\\n        81, 82,\\n        86, 87,\\n      ]\\n    )\\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreHeadingContentReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreHeadingContentReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreHeadingContentReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreHeadingContentReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreHeadingContentReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreHeadingContentReplacementsFrom,\\n          replaceWith: $postCoreHeadingContentReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreParagraphContentReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreParagraphContentReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreParagraphContentReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreParagraphContentReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreParagraphContentReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreParagraphContentReplacementsFrom,\\n          replaceWith: $postCoreParagraphContentReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreImageAltReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreImageAltReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreImageAltReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreImageAltReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreImageAltReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreImageAltReplacementsFrom,\\n          replaceWith: $postCoreImageAltReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreImageCaptionReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreImageCaptionReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreImageCaptionReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreImageCaptionReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreImageCaptionReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreImageCaptionReplacementsFrom,\\n          replaceWith: $postCoreImageCaptionReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreButtonTextReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreButtonTextReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreButtonTextReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreButtonTextReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreButtonTextReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreButtonTextReplacementsFrom,\\n          replaceWith: $postCoreButtonTextReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreTableCaptionReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreTableCaptionReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreTableCaptionReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreTableCaptionReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreTableCaptionReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreTableCaptionReplacementsFrom,\\n          replaceWith: $postCoreTableCaptionReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreTableBodyCellsContentReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreTableBodyCellsContentReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreTableBodyCellsContentReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreTableBodyCellsContentReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreTableBodyCellsContentReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreTableBodyCellsContentReplacementsFrom,\\n          replaceWith: $postCoreTableBodyCellsContentReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreListItemContentReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreListItemContentReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreListItemContentReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreListItemContentReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreListItemContentReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreListItemContentReplacementsFrom,\\n          replaceWith: $postCoreListItemContentReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreCoverAltReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreCoverAltReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreCoverAltReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreCoverAltReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreCoverAltReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreCoverAltReplacementsFrom,\\n          replaceWith: $postCoreCoverAltReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreMediaTextAltReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreMediaTextAltReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreMediaTextAltReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreMediaTextAltReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreMediaTextAltReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreMediaTextAltReplacementsFrom,\\n          replaceWith: $postCoreMediaTextAltReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreVerseContentReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreVerseContentReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreVerseContentReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreVerseContentReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreVerseContentReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreVerseContentReplacementsFrom,\\n          replaceWith: $postCoreVerseContentReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreQuoteCitationReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreQuoteCitationReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreQuoteCitationReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreQuoteCitationReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreQuoteCitationReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreQuoteCitationReplacementsFrom,\\n          replaceWith: $postCoreQuoteCitationReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $corePullquoteCitationReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $corePullquoteCitationReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCorePullquoteCitationReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $corePullquoteCitationReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCorePullquoteCitationReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCorePullquoteCitationReplacementsFrom,\\n          replaceWith: $postCorePullquoteCitationReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $corePullquoteValueReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $corePullquoteValueReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCorePullquoteValueReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $corePullquoteValueReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCorePullquoteValueReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCorePullquoteValueReplacementsFrom,\\n          replaceWith: $postCorePullquoteValueReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreAudioCaptionReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreAudioCaptionReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreAudioCaptionReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreAudioCaptionReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreAudioCaptionReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreAudioCaptionReplacementsFrom,\\n          replaceWith: $postCoreAudioCaptionReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreVideoCaptionReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreVideoCaptionReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreVideoCaptionReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreVideoCaptionReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreVideoCaptionReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreVideoCaptionReplacementsFrom,\\n          replaceWith: $postCoreVideoCaptionReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $corePreformattedContentReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $corePreformattedContentReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCorePreformattedContentReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $corePreformattedContentReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCorePreformattedContentReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCorePreformattedContentReplacementsFrom,\\n          replaceWith: $postCorePreformattedContentReplacementsTo\\n        )\\n    \\n    \\n      @applyField(\\n        name: \\u0022_propertyExistsInJSONObject\\u0022\\n        arguments: {\\n          object: $coreEmbedCaptionReplacementsFrom\\n          by: { key: $postID }\\n        }\\n        passOnwardsAs: \\u0022hasPostID\\u0022\\n      )\\n      @if(\\n        condition: $hasPostID\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreEmbedCaptionReplacementsFrom,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreEmbedCaptionReplacementsFrom\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $coreEmbedCaptionReplacementsTo,\\n            by: {\\n              key: $postID\\n            }\\n          },\\n          passOnwardsAs: \\u0022postCoreEmbedCaptionReplacementsTo\\u0022\\n        )\\n        @strRegexReplaceMultiple(\\n          limit: 1,\\n          searchRegex: $postCoreEmbedCaptionReplacementsFrom,\\n          replaceWith: $postCoreEmbedCaptionReplacementsTo\\n        )\\n    \\n    @export(as: \\u0022transformedRawContent\\u0022)\\n}\\n\\nquery PrepareMetaReplacements\\n  @depends(on: \\u0022TransformData\\u0022)\\n{  \\n  transformedMeta: _echo(value: $title)\\n    @underEachJSONObjectProperty(\\n      passKeyOnwardsAs: \\u0022postID\\u0022\\n      affectDirectivesUnderPos: [1, 2, 3]\\n    )\\n      @applyField(\\n        name: \\u0022_sprintf\\u0022,\\n        arguments: {\\n          string: \\u0022meta.to.%s\\u0022,\\n          values: [$postID]\\n        }\\n        passOnwardsAs: \\u0022titlePath\\u0022\\n      )\\n      @applyField(\\n        name: \\u0022_objectProperty\\u0022,\\n        arguments: {\\n          object: $transformations\\n          by: { path: $titlePath }\\n        }\\n        passOnwardsAs: \\u0022transformedPostTitleAsArray\\u0022\\n      )\\n      @applyField(\\n        name: \\u0022_arrayItem\\u0022,\\n        arguments: {\\n          array: $transformedPostTitleAsArray\\n          position: 0\\n        }\\n        setResultInResponse: true\\n      )\\n    @export(\\n      as: \\u0022transformedTitle\\u0022\\n    )\\n}\\n\\nmutation TranslateGutenbergPosts($postIds: [ID!]!)\\n  @depends(on: [\\n    \\u0022ExecuteRegexReplacements\\u0022,\\n    \\u0022PrepareMetaReplacements\\u0022\\n]) {\\n  updatePosts: posts(filter: { ids: $postIds, status: any } ) {\\n    id\\n    transformedRawContent: _objectProperty(\\n      object: $transformedRawContent,\\n      by: {\\n        key: $__id\\n      }\\n    )\\n    transformedTitle: _objectProperty(\\n      object: $transformedTitle,\\n      by: {\\n        key: $__id\\n      }\\n    )\\n    update(input: {\\n      title: $__transformedTitle,\\n      contentAs: {\\n        html: $__transformedRawContent\\n      }\\n    }) {\\n      status\\n      errors {\\n        __typename\\n        ...on ErrorPayload {\\n          message\\n        }\\n      }\\n      post {\\n        id\\n        title\\n        rawContent\\n      }\\n    }\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration {\"schemaConfiguration\":78} /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Translate posts (Gutenberg)','','private','closed','closed','','translate-posts-gutenberg','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/translate-posts-gutenberg/',0,'graphql-query','',0),
(95,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d upstreamServerGraphQLEndpointURL: The GraphQL endpoint on the upstream WordPress site\\n#   \\u002d postSlug: The slug of the post to import\\n# \\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query imports a post from some upstream\\n# WordPress site into our local WordPress site.\\n#\\n# The Gato GraphQL plugin (free version) must be installed on the\\n# upstream website.\\n#\\n# The resources referenced in the post must all exist locally:\\n#\\n#   \\u002d The author\\n#   \\u002d The featured image (if any)\\n#   \\u002d The categories\\n#   \\u002d (Tags also, however if these do not already exist, they are created together with the post, so it\'s not an issue)\\n#\\n# As the common identifier for resources between the upstream and local sites, we use:\\n#\\n#   \\u002d Slugs for categories, tags and media items\\n#   \\u002d Usernames for users\\n#\\n# If any of the resources does not exist in the local site, the GraphQL query prints an error and halts the import.\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/importing\\u002da\\u002dpost\\u002dfrom\\u002danother\\u002dwordpress\\u002dsite/\\n#\\n########################################################################\\n\\nquery InitializeDynamicVariables\\n  @configureWarningsOnExportingDuplicateVariable(enabled: false)\\n{\\n  initVariablesWithFalse: _echo(value: false)\\n    @export(as: \\u0022requestProducedErrors\\u0022)\\n    @export(as: \\u0022responseHasErrors\\u0022)\\n    @export(as: \\u0022postIsMissing\\u0022)\\n    @export(as: \\u0022postHasAuthor\\u0022)\\n    @export(as: \\u0022postHasFeaturedImage\\u0022)\\n    @export(as: \\u0022postHasCategories\\u0022)\\n    @export(as: \\u0022postHasTags\\u0022)\\n    @remove\\n\\n  initVariablesWithNull: _echo(value: null)\\n    @export(as: \\u0022existingAuthorUsername\\u0022)\\n    @export(as: \\u0022existingFeaturedImageSlug\\u0022)\\n    @export(as: \\u0022featuredImageMutationInput\\u0022)\\n    @remove\\n\\n  initVariablesWithEmptyArray: _echo(value: [])\\n    @export(as: \\u0022existingCategorySlugs\\u0022)\\n    @export(as: \\u0022existingTagSlugs\\u0022)\\n    @remove\\n}\\n\\nquery CheckIfPostExistsLocally($postSlug: String!)\\n  @depends(on: \\u0022InitializeDynamicVariables\\u0022)\\n{\\n  localPost: post(\\n    by: { slug: $postSlug }\\n    status: any\\n  ) {\\n    id\\n  }\\n\\n  postAlreadyExists: _notNull(value: $__localPost)\\n    @export(as: \\u0022postAlreadyExists\\u0022)\\n}\\n\\nquery FailIfPostAlreadyExistsLocally($postSlug: String!)\\n  @depends(on: \\u0022CheckIfPostExistsLocally\\u0022)\\n  @include(if: $postAlreadyExists)\\n{\\n  errorMessage: _sprintf(\\n    string: \\u0022Post with slug \'%s\' already exists locally\\u0022,\\n    values: [$postSlug]\\n  ) @remove\\n\\n  _fail(\\n    message: $__errorMessage\\n    data: {\\n      slug: $postSlug\\n    }\\n  ) @remove\\n\\n  createPost: _echo(value: null)\\n}\\n\\nquery ConnectToGraphQLAPI(\\n  $upstreamServerGraphQLEndpointURL: String!\\n  $postSlug: String!\\n)\\n  @depends(on: \\u0022FailIfPostAlreadyExistsLocally\\u0022)\\n  @skip(if: $postAlreadyExists)\\n{\\n  externalData: _sendGraphQLHTTPRequest(input:{\\n    endpoint: $upstreamServerGraphQLEndpointURL,\\n    query: \\u0022\\u0022\\u0022\\n    \\nquery GetPost($postSlug: String!) {\\n  post(by: { slug: $postSlug }, status: any) {\\n    id\\n    slug\\n    rawTitle\\n    rawContent\\n    rawExcerpt\\n    author {\\n      id\\n      username\\n    }\\n    featuredImage {\\n      id\\n      slug\\n    }\\n    categories {\\n      id\\n      slug\\n    }\\n    tags {\\n      id\\n      slug\\n    }\\n  }\\n}\\n\\n    \\u0022\\u0022\\u0022,\\n    variables: [\\n      {\\n        name: \\u0022postSlug\\u0022,\\n        value: $postSlug\\n      }\\n    ]\\n  })\\n    @export(as: \\u0022externalData\\u0022)\\n\\n  requestProducedErrors: _isNull(value: $__externalData)\\n    @export(as: \\u0022requestProducedErrors\\u0022)\\n    @remove\\n}\\n\\nquery ValidateResponse\\n  @depends(on: \\u0022ConnectToGraphQLAPI\\u0022)\\n  @skip(if: $postAlreadyExists)\\n  @skip(if: $requestProducedErrors)\\n{\\n  responseHasErrors: _propertyIsSetInJSONObject(\\n    object: $externalData\\n    by: {\\n      key: \\u0022errors\\u0022\\n    }\\n  )\\n    @export(as: \\u0022responseHasErrors\\u0022)\\n    @remove\\n\\n  postExists: _propertyIsSetInJSONObject(\\n    object: $externalData\\n    by: {\\n      path: \\u0022data.post\\u0022\\n    }\\n  )\\n    @remove\\n    \\n  postIsMissing: _not(value: $__postExists)\\n    @export(as: \\u0022postIsMissing\\u0022)\\n    @remove\\n}\\n\\nquery FailIfResponseHasErrors\\n  @depends(on: \\u0022ValidateResponse\\u0022)\\n  @skip(if: $postAlreadyExists)\\n  @skip(if: $requestProducedErrors)\\n  @skip(if: $postIsMissing)\\n  @include(if: $responseHasErrors)\\n{\\n  errors: _objectProperty(\\n    object: $externalData,\\n    by: {\\n      key: \\u0022errors\\u0022\\n    }\\n  ) @remove\\n\\n  _fail(\\n    message: \\u0022Executing the GraphQL query against the upstream webserver produced error(s)\\u0022\\n    data: {\\n      errors: $__errors\\n    }\\n  ) @remove\\n\\n  createPost: _echo(value: null)\\n}\\n\\nquery FailIfPostNotExists($postSlug: String!)\\n  @depends(on: \\u0022FailIfResponseHasErrors\\u0022)\\n  @skip(if: $requestProducedErrors)\\n  @include(if: $postIsMissing)\\n{\\n  errorMessage: _sprintf(\\n    string: \\u0022There is no post with slug \'%s\' in the origin\\u0022,\\n    values: [$postSlug]\\n  ) @remove\\n\\n  _fail(\\n    message: $__errorMessage\\n    data: {\\n      slug: $postSlug\\n    }\\n  ) @remove\\n  \\n  createPost: _echo(value: null)\\n}\\n\\nquery ExportInputs\\n  @depends(on: \\u0022FailIfPostNotExists\\u0022)\\n  @skip(if: $postAlreadyExists)\\n  @skip(if: $requestProducedErrors)\\n  @skip(if: $responseHasErrors)\\n  @skip(if: $postIsMissing)\\n{\\n  postData: _objectProperty(\\n    object: $externalData,\\n    by: { path: \\u0022data.post\\u0022 }\\n  ) @remove\\n\\n  postTitle: _objectProperty(\\n    object: $__postData,\\n    by: { key: \\u0022rawTitle\\u0022 }\\n  )\\n    @export(as: \\u0022postTitle\\u0022)\\n    @remove\\n\\n  postContent: _objectProperty(\\n    object: $__postData,\\n    by: { key: \\u0022rawContent\\u0022 }\\n  )\\n    @export(as: \\u0022postContent\\u0022)\\n    @remove\\n\\n  postExcerpt: _objectProperty(\\n    object: $__postData,\\n    by: { key: \\u0022rawExcerpt\\u0022 }\\n  )\\n    @export(as: \\u0022postExcerpt\\u0022)\\n    @remove\\n\\n  postAuthorUsername: _objectProperty(\\n    object: $__postData,\\n    by: { key: \\u0022author\\u0022 }\\n  )\\n    @passOnwards(\\n      as: \\u0022author\\u0022\\n    )\\n    @applyField(\\n      name: \\u0022_notNull\\u0022,\\n      arguments: {\\n        value: $author\\n      },\\n      passOnwardsAs: \\u0022hasAuthor\\u0022\\n    )\\n    @if(condition: $hasAuthor)\\n      @applyField(\\n        name: \\u0022_objectProperty\\u0022,\\n        arguments: {\\n          object: $author,\\n          by: { key: \\u0022username\\u0022 }\\n        },\\n        setResultInResponse: true\\n      )\\n    @export(as: \\u0022postAuthorUsername\\u0022)\\n    @remove\\n\\n  postHasAuthor: _notNull(\\n    value: $__postAuthorUsername\\n  )\\n    @export(as: \\u0022postHasAuthor\\u0022)\\n    @remove\\n\\n  postFeaturedImageSlug: _objectProperty(\\n    object: $__postData,\\n    by: { key: \\u0022featuredImage\\u0022 }\\n  )\\n    @passOnwards(\\n      as: \\u0022featuredImage\\u0022\\n    )\\n    @applyField(\\n      name: \\u0022_notNull\\u0022,\\n      arguments: {\\n        value: $featuredImage\\n      },\\n      passOnwardsAs: \\u0022hasFeaturedImage\\u0022\\n    )\\n    @if(condition: $hasFeaturedImage)\\n      @applyField(\\n        name: \\u0022_objectProperty\\u0022,\\n        arguments: {\\n          object: $featuredImage,\\n          by: { key: \\u0022slug\\u0022 }\\n        },\\n        setResultInResponse: true\\n      )\\n    @export(as: \\u0022postFeaturedImageSlug\\u0022)\\n    @remove\\n\\n  postHasFeaturedImage: _notNull(\\n    value: $__postFeaturedImageSlug\\n  )\\n    @export(as: \\u0022postHasFeaturedImage\\u0022)\\n    @remove\\n\\n  postCategorySlugs: _objectProperty(\\n    object: $__postData,\\n    by: { key: \\u0022categories\\u0022 }\\n  )\\n    @underEachArrayItem(\\n      passValueOnwardsAs: \\u0022category\\u0022\\n    )\\n      @applyField(\\n        name: \\u0022_objectProperty\\u0022\\n        arguments: {\\n          object: $category,\\n          by: {\\n            key: \\u0022slug\\u0022\\n          }\\n        }\\n        setResultInResponse: true\\n      )\\n    @export(as: \\u0022postCategorySlugs\\u0022)\\n    @remove\\n\\n  postHasCategories: _notEmpty(\\n    value: $__postCategorySlugs\\n  )\\n    @export(as: \\u0022postHasCategories\\u0022)\\n    @remove\\n\\n  postTagSlugs: _objectProperty(\\n    object: $__postData,\\n    by: { key: \\u0022tags\\u0022 }\\n  )\\n    @underEachArrayItem(\\n      passValueOnwardsAs: \\u0022tag\\u0022\\n    )\\n      @applyField(\\n        name: \\u0022_objectProperty\\u0022\\n        arguments: {\\n          object: $tag,\\n          by: {\\n            key: \\u0022slug\\u0022\\n          }\\n        }\\n        setResultInResponse: true\\n      )\\n    @export(as: \\u0022postTagSlugs\\u0022)\\n    @remove\\n\\n  postHasTags: _notEmpty(\\n    value: $__postTagSlugs\\n  )\\n    @export(as: \\u0022postHasTags\\u0022)\\n    @remove\\n}\\n\\nquery ExportExistingResources\\n  @depends(on: \\u0022ExportInputs\\u0022)\\n  @skip(if: $postAlreadyExists)\\n  @skip(if: $requestProducedErrors)\\n  @skip(if: $responseHasErrors)\\n  @skip(if: $postIsMissing)\\n{\\n  existingAuthorByUsername: user(by: { username: $postAuthorUsername })\\n    @include(if: $postHasAuthor)\\n  {\\n    id\\n    username @export(as: \\u0022existingAuthorUsername\\u0022)\\n  }\\n\\n  existingFeaturedImageBySlug: mediaItem(by: { slug: $postFeaturedImageSlug })\\n    @include(if: $postHasFeaturedImage)\\n  {\\n    id\\n    slug @export(as: \\u0022existingFeaturedImageSlug\\u0022)\\n  }\\n\\n  existingCategoriesBySlug: postCategories(filter: { slugs: $postCategorySlugs })\\n    @include(if: $postHasCategories)\\n  {\\n    id\\n    slug @export(as: \\u0022existingCategorySlugs\\u0022, type: LIST)\\n  }\\n\\n  existingTagsBySlug: postTags(filter: { slugs: $postTagSlugs })\\n    @include(if: $postHasTags)\\n  {\\n    id\\n    slug @export(as: \\u0022existingTagSlugs\\u0022, type: LIST)\\n  }\\n}\\n\\nquery ExportMissingResources\\n  @depends(on: \\u0022ExportExistingResources\\u0022)\\n  @skip(if: $postAlreadyExists)\\n  @skip(if: $requestProducedErrors)\\n  @skip(if: $responseHasErrors)\\n  @skip(if: $postIsMissing)\\n{\\n  isAuthorMissing: _notEquals(\\n    value1: $postAuthorUsername,\\n    value2: $existingAuthorUsername\\n  ) @export(as: \\u0022isAuthorMissing\\u0022)\\n  \\n  isFeaturedImageMissing: _notEquals(\\n    value1: $postFeaturedImageSlug,\\n    value2: $existingFeaturedImageSlug\\n  ) @export(as: \\u0022isFeaturedImageMissing\\u0022)\\n\\n  missingCategorySlugs: _arrayDiff(\\n    arrays: [$postCategorySlugs, $existingCategorySlugs]\\n  ) @export(as: \\u0022missingCategorySlugs\\u0022)\\n  areCategoriesMissing: _notEmpty(\\n    value: $__missingCategorySlugs\\n  ) @export(as: \\u0022areCategoriesMissing\\u0022)\\n\\n  # missingTagSlugs: _arrayDiff(\\n  #   arrays: [$postTagSlugs, $existingTagSlugs]\\n  # ) @export(as: \\u0022missingTagSlugs\\u0022)\\n  # areTagsMissing: _notEmpty(\\n  #   value: $__missingTagSlugs\\n  # ) @export(as: \\u0022areTagsMissing\\u0022)\\n\\n  isAnyResourceMissing: _or(\\n    values: [\\n      $__isAuthorMissing,\\n      $__isFeaturedImageMissing,\\n      $__areCategoriesMissing,\\n      # $__areTagsMissing,\\n    ]\\n  ) @export(as: \\u0022isAnyResourceMissing\\u0022)\\n}\\n\\nquery FailIfAnyResourceIsMissing\\n  @depends(on: \\u0022ExportMissingResources\\u0022)\\n  @skip(if: $postAlreadyExists)\\n  @skip(if: $requestProducedErrors)\\n  @skip(if: $postIsMissing)\\n  @skip(if: $responseHasErrors)\\n  @include(if: $isAnyResourceMissing)\\n{\\n  performingValidations: id\\n    @if(condition: $isAuthorMissing)\\n      @fail(\\n        message: \\u0022Author is missing in local site\\u0022\\n        data: {\\n          missingAuthorByUsername: $postAuthorUsername\\n        }\\n        condition: ALWAYS\\n      )\\n    @if(condition: $isFeaturedImageMissing)\\n      @fail(\\n        message: \\u0022Featured image is missing in local site\\u0022\\n        data: {\\n          missingFeaturedImageBySlug: $postFeaturedImageSlug\\n        }\\n        condition: ALWAYS\\n      )\\n    @if(condition: $areCategoriesMissing)\\n      @fail(\\n        message: \\u0022Categories are missing in local site\\u0022\\n        data: {\\n          missingCategoriesBySlug: $missingCategorySlugs\\n        }\\n        condition: ALWAYS\\n      )\\n    # @if(condition: $areTagsMissing)\\n    #   @fail(\\n    #     message: \\u0022Tags are missing in local site\\u0022\\n    #     data: {\\n    #       missingTagBySlug: $missingTagSlugs\\n    #     }\\n    #     condition: ALWAYS\\n    #   )\\n  \\n  createPost: _echo(value: null)\\n}\\n\\nquery ExportMutationInputs\\n  @depends(on: \\u0022FailIfAnyResourceIsMissing\\u0022)\\n  @skip(if: $postAlreadyExists)\\n  @skip(if: $requestProducedErrors)\\n  @skip(if: $responseHasErrors)\\n  @skip(if: $postIsMissing)\\n  @skip(if: $isAnyResourceMissing)\\n{\\n  featuredImageMutationInput: _echo(value: {\\n    slug: $postFeaturedImageSlug\\n  })\\n    @include(if: $postHasFeaturedImage)\\n    @export(as: \\u0022featuredImageMutationInput\\u0022)\\n    @remove\\n}\\n\\nmutation ImportPostFromWordPressSite(\\n  $postSlug: String!\\n)\\n  @depends(on: \\u0022ExportMutationInputs\\u0022)\\n  @skip(if: $postAlreadyExists)\\n  @skip(if: $requestProducedErrors)\\n  @skip(if: $responseHasErrors)\\n  @skip(if: $postIsMissing)\\n  @skip(if: $isAnyResourceMissing)\\n{\\n  createPost(input: {\\n    status: draft,\\n    slug: $postSlug\\n    title: $postTitle\\n    contentAs: {\\n      html: $postContent\\n    },\\n    excerpt: $postExcerpt\\n    authorBy: {\\n      username: $postAuthorUsername\\n    },\\n    featuredImageBy: $featuredImageMutationInput,\\n    categoriesBy: {\\n      slugs: $postCategorySlugs\\n    },\\n    tagsBy: {\\n      slugs: $postTagSlugs\\n    }\\n  }) {\\n    status\\n    errors {\\n      __typename\\n      ...on ErrorPayload {\\n        message\\n      }\\n    }\\n    post {\\n      id\\n      date\\n      status\\n\\n      slug\\n      title\\n      content\\n      excerpt\\n\\n      author {\\n        id\\n        username\\n      }\\n      featuredImage {\\n        id\\n        slug\\n      }\\n      categories {\\n        id\\n        slug\\n      }\\n      tags {\\n        id\\n        slug\\n      }\\n    }\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Import post from WordPress site','','private','closed','closed','','import-post-from-wordpress-site','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/import-post-from-wordpress-site/',0,'graphql-query','',0),
(96,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d update: Indicate if to update the post, or create a new one\\n#   \\u002d postSlug: The slug of the post to export. In case of update, the post in the downstream site needs to have the same post slug\\n#   \\u002d downstreamServerGraphQLEndpointURL: The GraphQL endpoint on the downstream WordPress site. It needs to have \\u0022Nested mutations\\u0022 enabled\\n#       eg: https://www.some\\u002ddownstream\\u002dwp\\u002dsite.com/graphql/mutations\\u002dnested/\\n#   \\u002d username: Credentials on the downstream WordPress site\\n#   \\u002d userPassword: Credentials on the downstream WordPress site\\n# \\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query exports a post from this WordPress site\\n# into some downstream WordPress site.\\n#\\n# The Gato GraphQL plugin (free version) must be installed on the\\n# downstream website. It must expose an endpoint with \\u0022Nested mutations\\u0022\\n# enabled.\\n#\\n# The `$update` parameter indicates if to create or update a post in\\n# the downstream site.\\n#\\n# If updating the post, the common identifier between the upstream\\n# and downstream sites is the post slug.\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/distributing\\u002dcontent\\u002dfrom\\u002dan\\u002dupstream\\u002dto\\u002dmultiple\\u002ddownstream\\u002dsites/\\n#\\n########################################################################\\n\\nquery CheckHasPost($postSlug: String!)\\n{\\n  post(by: { slug: $postSlug }, status: any)\\n    @fail(\\n      message: \\u0022There is no post in the upstream site with the provided slug\\u0022\\n      data: {\\n        slug: $postSlug\\n      }\\n    )\\n  {\\n    rawTitle\\n      @export(as: \\u0022postTitle\\u0022)\\n    rawContent\\n      @export(as: \\u0022postContent\\u0022)\\n  }\\n\\n  isMissingPostInUpstream: _isNull(value: $__post)\\n    @export(as: \\u0022isMissingPostInUpstream\\u0022)\\n}\\n\\nquery ExportDownstreamGraphQLQuery\\n  @depends(on: \\u0022CheckHasPost\\u0022)\\n  @skip(if: $isMissingPostInUpstream)\\n{\\n  query: _echo(value: \\u0022\\u0022\\u0022\\n\\nmutation LoginUserAndUpdatePost(\\n  $update: Boolean! = false\\n  $username: String!\\n  $userPassword: String!\\n  $postSlug: String!\\n  $postTitle: String!\\n  $postContent: String!\\n) {\\n  loginUser(by: {\\n    credentials: {\\n      usernameOrEmail: $username,\\n      password: $userPassword\\n    }\\n  }) {\\n    userID\\n  }\\n\\n  post(by: { slug: $postSlug }, status: any)\\n    @include(if: $update)\\n  {\\n    update(input: {\\n      title: $postTitle,\\n      contentAs: { html: $postContent },\\n    }) {\\n      status\\n      errors {\\n        __typename\\n        ...on ErrorPayload {\\n          message\\n        }\\n      }\\n      post {\\n        title\\n        slug\\n        content\\n        status\\n      }\\n    }\\n  }\\n\\n  createPost(input: {\\n    title: $postTitle,\\n    slug: $postSlug,\\n    contentAs: { html: $postContent },\\n    status: draft\\n  })\\n    @skip(if: $update)\\n  {\\n    status\\n    errors {\\n      __typename\\n      ...on ErrorPayload {\\n        message\\n      }\\n    }\\n    post {\\n      title\\n      slug\\n      content\\n      status\\n    }\\n  }\\n}\\n\\n    \\u0022\\u0022\\u0022\\n  )\\n    @export(as: \\u0022query\\u0022)\\n    @remove\\n}\\n\\nquery ExportPostToWordPressSite(\\n  $downstreamServerGraphQLEndpointURL: String!\\n  $update: Boolean! = false\\n  $username: String!\\n  $userPassword: String!\\n  $postSlug: String!\\n)\\n  @depends(on: \\u0022ExportDownstreamGraphQLQuery\\u0022)\\n  @skip(if: $isMissingPostInUpstream)\\n{\\n  _sendGraphQLHTTPRequest(\\n    input: {\\n      endpoint: $downstreamServerGraphQLEndpointURL,\\n      query: $query,\\n      variables: [\\n        {\\n          name: \\u0022update\\u0022,\\n          value: $update\\n        },\\n        {\\n          name: \\u0022username\\u0022,\\n          value: $username\\n        },\\n        {\\n          name: \\u0022userPassword\\u0022,\\n          value: $userPassword\\n        },\\n        {\\n          name: \\u0022postSlug\\u0022,\\n          value: $postSlug\\n        },\\n        {\\n          name: \\u0022postTitle\\u0022,\\n          value: $postTitle\\n        },\\n        {\\n          name: \\u0022postContent\\u0022,\\n          value: $postContent\\n        }\\n      ]\\n    }\\n  )\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Export post to WordPress site','','private','closed','closed','','export-post-to-wordpress-site','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/export-post-to-wordpress-site/',0,'graphql-query','',0),
(97,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query retrieves all posts that have a\\n# thumbnail, and those that do not\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/searching\\u002dwordpress\\u002ddata/\\n#\\n########################################################################\\n\\nquery GetPostsWithAndWithoutThumbnail {\\n  postsWithThumbnail: posts(\\n    filter: {\\n      metaQuery: {\\n        key: \\u0022_thumbnail_id\\u0022,\\n        compareBy: {\\n          key: {\\n            operator: EXISTS\\n          }\\n        }\\n      }\\n    },\\n    pagination: { limit: \\u002d1 }\\n  ) {\\n    id\\n    title\\n    featuredImage {\\n      id\\n      src\\n    }\\n  }\\n\\n  postsWithoutThumbnail: posts(\\n    filter: {\\n      metaQuery: {\\n        key: \\u0022_thumbnail_id\\u0022,\\n        compareBy: {\\n          key: {\\n            operator: NOT_EXISTS\\n          }\\n        }\\n      }\\n    },\\n    pagination: { limit: \\u002d1 }\\n  ) {\\n    id\\n    title\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','Fetch posts by thumbnail','','private','closed','closed','','fetch-posts-by-thumbnail','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/fetch-posts-by-thumbnail/',0,'graphql-query','',0),
(98,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d localeRegex: The regex to identify the locale\\n#       eg: \\u0022es_[A\\u002dZ]+\\u0022 for the Spanish locale (es_AR for Argentina, es_ES for Spain, etc)\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query retrieves all users with a certain locale,\\n# providing a regex to identify them.\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/searching\\u002dwordpress\\u002ddata/\\n#\\n########################################################################\\n\\nquery FetchUsersByLocale(\\n  $localeRegex: String!\\n) {\\n  usersByLocale: users(\\n    filter: { metaQuery: {\\n      key: \\u0022locale\\u0022,\\n      compareBy: {\\n        stringValue: {\\n          value: $localeRegex\\n          operator: REGEXP\\n        }\\n      }\\n    }},\\n    pagination: { limit: \\u002d1 }\\n  ) {\\n    id\\n    name\\n    locale: metaValue(key: \\u0022locale\\u0022)\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','Fetch users by locale','','private','closed','closed','','fetch-users-by-locale','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/fetch-users-by-locale/',0,'graphql-query','',0),
(99,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query retrieves the number of comments\\n# added to the site in several periods of time:\\n#\\n#   \\u002d in the last 24 hs\\n#   \\u002d in the last 30 days\\n#   \\u002d in the last year\\n#   \\u002d since beginning of the month\\n#   \\u002d since beginning of the year\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/querying\\u002ddynamic\\u002ddata/\\n#\\n########################################################################\\n\\nquery GetCommentsByPeriod {\\n  timeNow: _time  \\n  time24HsAgo: _intSubstract(substract: 86400, from: $__timeNow)\\n  date24HsAgo: _date(format: \\u0022Y\\u002dm\\u002dd\\\\\\\\TH:i:sO\\u0022, timestamp: $__time24HsAgo)  \\n  time1MonthAgo: _intSubstract(substract: 2592000, from: $__timeNow)\\n  date1MonthAgo: _date(format: \\u0022Y\\u002dm\\u002dd\\\\\\\\TH:i:sO\\u0022, timestamp: $__time1MonthAgo)\\n  time1YearAgo: _intSubstract(substract: 31536000, from: $__timeNow)\\n  date1YearAgo: _date(format: \\u0022Y\\u002dm\\u002dd\\\\\\\\TH:i:sO\\u0022, timestamp: $__time1YearAgo)\\n  timeBegOfThisMonth: _makeTime(hour: 0, minute: 0, second: 0, day: 1)\\n  dateBegOfThisMonth: _date(format: \\u0022Y\\u002dm\\u002dd\\\\\\\\TH:i:sO\\u0022, timestamp: $__timeBegOfThisMonth)\\n  timeBegOfThisYear: _makeTime(hour: 0, minute: 0, second: 0, month: 1, day: 1)\\n  dateBegOfThisYear: _date(format: \\u0022Y\\u002dm\\u002dd\\\\\\\\TH:i:sO\\u0022, timestamp: $__timeBegOfThisYear)\\n  \\n  commentsAddedInLast24Hs: commentCount(filter: { dateQuery: { after: $__date24HsAgo } } )  \\n  commentsAddedInLast1Month: commentCount(filter: { dateQuery: { after: $__date1MonthAgo } } )  \\n  commentsAddedInLast1Year: commentCount(filter: { dateQuery: { after: $__date1YearAgo } } )  \\n  commentsAddedSinceBegOfThisMonth: commentCount(filter: { dateQuery: { after: $__dateBegOfThisMonth } } )  \\n  commentsAddedSinceBegOfThisYear: commentCount(filter: { dateQuery: { after: $__dateBegOfThisYear } } )\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Fetch comments by period','','private','closed','closed','','fetch-comments-by-period','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/fetch-comments-by-period/',0,'graphql-query','',0),
(100,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d postId: ID of the post to fetch the images from\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query fetches the data for all blocks in the post\\n# (including inner blocks) while filtering them by `core/image` type,\\n# and extracts the URL property from each.\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/retrieving\\u002dstructured\\u002ddata\\u002dfrom\\u002dblocks/\\n#\\n########################################################################\\n\\nquery GetCoreImageBlockImageURLs($postId: ID!) {\\n  post(by: { id: $postId }, status: any) {\\n    coreImageURLs: blockFlattenedDataItems(\\n      filterBy: { include: \\u0022core/image\\u0022 }\\n    )\\n      @underEachArrayItem(\\n        passValueOnwardsAs: \\u0022blockDataItem\\u0022\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022\\n          arguments: {\\n            object: $blockDataItem,\\n            by: {\\n              path: \\u0022attributes.url\\u0022\\n            }\\n          }\\n          setResultInResponse: true\\n        )\\n      @arrayUnique\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Fetch image URLs in blocks','','private','closed','closed','','fetch-image-urls-in-blocks','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/fetch-image-urls-in-blocks/',0,'graphql-query','',0),
(101,1,'2024-04-14 00:00:38','0000-00-00 00:00:00','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d mailchimpDataCenterCode: Code for the data center of your account on Mailchimp (See: https://mailchimp.com/developer/marketing/docs/fundamentals/#api\\u002dstructure)\\n#   \\u002d mailchimpAudienceID: Audience ID for the list on Mailchimp to which to subscribe the email\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This GraphQL query captures the email from the visitors who ticked\\n# the \\u0022Subscribe to mailing list\\u0022 checkbox from InstaWP (when creating\\n# a new sandbox site), and subscribes this email to a Mailchimp list.\\n#\\n# *********************************************************************\\n# \\n# Required PHP code:\\n#   \\u002d Define in `wp\\u002dconfig.php`:\\n#     define( \'MAILCHIMP_API_CREDENTIALS_USERNAME\', \'{ username }\' );\\n#     define( \'MAILCHIMP_API_CREDENTIALS_PASSWORD\', \'{ password }\' );\\n# \\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/blog/instawp\\u002dgatographql/\\n#\\n########################################################################\\n\\nquery HasSubscribedToNewsletter {\\n  hasSubscriberOptin: _httpRequestHasParam(name: \\u0022marketing_optin\\u0022)\\n  subscriberOptin: _httpRequestStringParam(name: \\u0022marketing_optin\\u0022)\\n  isNotSubscriberOptinNAValue: _notEquals(value1: $__subscriberOptin, value2: \\u0022NA\\u0022)\\n  subscribedToNewsletter: _and(values: [$__hasSubscriberOptin, $__isNotSubscriberOptinNAValue])\\n    @export(as: \\u0022subscribedToNewsletter\\u0022)\\n}\\n\\nquery RegisterNewsletterSubscriberFromInstaWPToMailchimp(\\n  $mailchimpDataCenterCode: String!\\n  $mailchimpAudienceID: String!\\n)\\n   @depends(on: \\u0022HasSubscribedToNewsletter\\u0022)\\n   @include(if: $subscribedToNewsletter)\\n{\\n  subscriberEmail: _httpRequestStringParam(name: \\u0022email\\u0022)\\n  \\n  mailchimpUsername: _env(name: \\u0022MAILCHIMP_API_CREDENTIALS_USERNAME\\u0022)\\n    @remove\\n  mailchimpPassword: _env(name: \\u0022MAILCHIMP_API_CREDENTIALS_PASSWORD\\u0022)\\n    @remove\\n  \\n  mailchimpAPIEndpoint: _sprintf(\\n    string: \\u0022https://%s.api.mailchimp.com/3.0/lists/%s/members\\u0022,\\n    values: [$mailchimpDataCenterCode, $mailchimpAudienceID]\\n  )\\n  \\n  mailchimpListMembersJSONObject: _sendJSONObjectItemHTTPRequest(input: {\\n    url: $__mailchimpAPIEndpoint,\\n    method: POST,\\n    options: {\\n      auth: {\\n        username: $__mailchimpUsername,\\n        password: $__mailchimpPassword\\n      },\\n      json: {\\n        email_address: $__subscriberEmail,\\n        status: \\u0022subscribed\\u0022\\n      }\\n    }\\n  })\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Register a newsletter subscriber from InstaWP to Mailchimp','Setup this persisted query\'s URL as webhook in an InstaWP template, to automatically capture the email from the visitors who ticked the \"Subscribe to mailing list\" checkbox (when creating a sandbox site), and send it straight to a Mailchimp list. More info: gatographql.com/blog/instawp-gatographql','draft','closed','closed','','register-a-newsletter-subscriber-from-instawp-to-mailchimp','','','2024-04-14 00:00:38','0000-00-00 00:00:00','',0,'http://localhost:8080/?post_type=graphql-query&p=101',0,'graphql-query','',0),
(102,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d url: The URL with the content to translate\\n#   \\u002d fromLang: The language code to translate from, from Google Translate (https://cloud.google.com/translate/docs/languages)\\n#   \\u002d toLang: The language code to translate from, from Google Translate\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query translates the content from the provided URL\\n#\\n# *********************************************************************\\n# \\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/translating\\u002dcontent\\u002dfrom\\u002durl/\\n#\\n########################################################################\\n\\nquery TranslateContentFromURL(\\n  $url: URL!\\n  $fromLang: String!\\n  $toLang: String!\\n) {\\n  _sendHTTPRequest(input: {\\n    url: $url,\\n    method: GET\\n  }) {\\n    body\\n    translated: body @strTranslate(\\n      from: $fromLang\\n      to: $toLang\\n    )\\n  }\\n}\",\"variables\":\"{\\n  \\u0022fromLang\\u0022: \\u0022en\\u0022\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Translate content from URL','','private','closed','closed','','translate-content-from-url','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/translate-content-from-url/',0,'graphql-query','',0),
(103,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d url: URL of the WordPress single post\'s RSS feed. It usually is the blog post URL + \\u0022/feed/rss/?withoutcomments=1\\u0022\\n#       eg: https://newapi.getpop.org/blogroll/a\\u002dtale\\u002dof\\u002dtwo\\u002dcities\\u002dteaser/feed/rss/?withoutcomments=1\\n#   \\u002d defaultAuthorUsername: Author username of the imported post, to be used whenever the username on the RSS feed does not exist on the local site\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query imports a post from a WordPress RSS feed.\\n#\\n# It imports the title, content and excerpt of the post.\\n# If the author with that username exists locally, it uses it,\\n# otherwise it replaces it with \\u0022admin\\u0022.\\n# It doesn\'t import the featured image, as it doesn\'t appear in the RSS.\\n# It doesn\'t import categories or tags, as these are mixed under the\\n# same \\u0022category\\u0022 entry in the RSS.\\n#\\n########################################################################\\n\\nquery GetPostFromRSSFeedAndExportData(\\n  $url: URL!\\n) {\\n  _sendHTTPRequest(input: {\\n    url: $url,\\n    method: GET\\n  }) {\\n    body\\n    rssJSON: _strDecodeXMLAsJSON(\\n      xml: $__body\\n      alwaysArrayTagNames: [\\n        \\u0022category\\u0022,\\n      ],\\n    )\\n\\n    # Fields to be imported\\n    authorUsername: _objectProperty(\\n      object: $__rssJSON,\\n      by: {\\n        path: \\u0022rss.channel.item.dc:creator\\u0022\\n      }\\n    )\\n      @export(as: \\u0022authorUsername\\u0022)\\n\\n    # categorySlugs: _objectProperty(\\n    #   object: $__rssJSON,\\n    #   by: {\\n    #     path: \\u0022rss.channel.item.category\\u0022\\n    #   }\\n    # )\\n\\n    content:  _objectProperty(\\n      object: $__rssJSON,\\n      by: {\\n        path: \\u0022rss.channel.item.content:encoded\\u0022\\n      }\\n    )\\n      @export(as: \\u0022content\\u0022)\\n\\n    excerpt:  _objectProperty(\\n      object: $__rssJSON,\\n      by: {\\n        path: \\u0022rss.channel.item.description\\u0022\\n      }\\n    )\\n      @export(as: \\u0022excerpt\\u0022)\\n\\n    title:  _objectProperty(\\n      object: $__rssJSON,\\n      by: {\\n        path: \\u0022rss.channel.item.title\\u0022\\n      }\\n    )\\n      @export(as: \\u0022title\\u0022)\\n  }\\n}\\n\\n# If the author\'s username exists in this site, keep it\\n# Otherwise, use the default one\\nquery CheckAuthorExistsOrChange(\\n  $defaultAuthorUsername: String! = \\u0022admin\\u0022\\n)\\n  @depends(on: \\u0022GetPostFromRSSFeedAndExportData\\u0022)\\n{\\n  existingUserByUsername: user(by: { username: $authorUsername })\\n  {\\n    id\\n    username\\n  }\\n  userExists: _notNull(value: $__existingUserByUsername)\\n  username: _if(\\n    condition: $__userExists,\\n    then: $authorUsername,\\n    else: $defaultAuthorUsername\\n  )\\n    @export(as: \\u0022existingAuthorUsername\\u0022)\\n}\\n\\nmutation ImportPostFromWordPressRSSFeed\\n  @depends(on: \\u0022CheckAuthorExistsOrChange\\u0022)\\n{\\n  createPost(input: {\\n    status: draft,\\n    authorBy: {\\n      username: $existingAuthorUsername\\n    },\\n    contentAs: {\\n      html: $content\\n    },\\n    excerpt: $excerpt\\n    title: $title\\n  }) {\\n    status\\n    errors {\\n      __typename\\n      ...on ErrorPayload {\\n        message\\n      }\\n    }\\n    post {\\n      id\\n      slug\\n      date\\n      status\\n\\n      author {\\n        id\\n        username\\n      }\\n      content\\n      excerpt\\n      title\\n    }\\n  }\\n}\",\"variables\":\"{\\n  \\u0022defaultAuthorUsername\\u0022: \\u0022admin\\u0022\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Import post from WordPress RSS feed','','private','closed','closed','','import-post-from-wordpress-rss-feed','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/import-post-from-wordpress-rss-feed/',0,'graphql-query','',0),
(104,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d url: URL of the CSV\\n#   \\u002d titleColumn: Column name (on the CSV header) for the post\'s title. Default: \\u0022Title\\u0022\\n#   \\u002d excerptColumn: Column name (on the CSV header) for the post\'s excerpt. Default: \\u0022Excerpt\\u0022\\n#   \\u002d contentColumn: Column name (on the CSV header) for the post\'s content. Default: \\u0022Content\\u0022\\n#   \\u002d authorUsernameColumn: Column name (on the CSV header) for the post author\'s username. Default: \\u0022Author\\u0022\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query imports posts from a CSV.\\n#\\n# It creates a new post with the title, excerpt, content and author\\n# (provided via username) of each post.\\n#\\n# The names of the columns with those fields are provided via vars,\\n# with default values \\u0022Title\\u0022, \\u0022Excerpt\\u0022, \\u0022Content\\u0022 and \\u0022Author\\u0022\\n# respectively.\\n#\\n########################################################################\\n#\\n# === CSV Examples ===\\n#\\n# The following CSV will import 3 posts:\\n# \\n#     Title,Excerpt,Content,Author\\n#     Multi\\u002dchannelled optimal interface,Inventore iste velit et expedita ipsa dolor,\\u003cp\\u003eInventore iste velit et expedita ipsa dolor. Optio suscipit qui id harum corporis dignissimos.\\u003c/p\\u003e,admin\\n#     Ergonomic motivating parallelism,Consequuntur velit quasi assumenda,\\u003cp\\u003eConsequuntur velit quasi assumenda. Eum non saepe est. Ut dolorem harum eveniet eaque nemo impedit. Voluptatem commodi modi sed sed animi voluptatem.\\u003c/p\\u003e,admin\\n#     Down\\u002dsized solution\\u002doriented securedline,Ipsam minima qui asperiores dolorum unde voluptas quia voluptate,\\u003cp\\u003eIpsam minima qui asperiores dolorum unde voluptas quia voluptate. Incidunt omnis cumque beatae quo deleniti ex. Praesentium nihil et consectetur neque commodi tempora ipsa adipisci. Praesentium perferendis sint est.\\u003c/p\\u003e,admin\\n#\\n# The content can contain newlines (then it must be surrounded with `\\u0022`),\\n# and block markup (to insert posts for the WordPress editor):\\n# \\n#     Title,Excerpt,Content,Author\\n#     Multi\\u002dchannelled optimal interface,Inventore iste velit et expedita ipsa dolor,\\u0022\\u003cp\\u003eInventore iste velit et expedita ipsa dolor. Optio suscipit qui id harum corporis dignissimos.\\u003c/p\\u003e\\n#     \\u003cp\\u003eIste provident aut incidunt dolorum esse nobis. Porro est deserunt quos quia cupiditate earum magnam. Distinctio qui et aut iste et.\\u003c/p\\u003e\\n#     \\u003cp\\u003eAut earum quos accusamus voluptas sit tempore est. Dolore tempora doloremque magni excepturi. Ullam illum et ullam cum sed.\\u003c/p\\u003e\\u0022,admin\\n#     Ergonomic motivating parallelism,Consequuntur velit quasi assumenda,\\u0022\\u003cp\\u003eConsequuntur velit quasi assumenda. Eum non saepe est. Ut dolorem harum eveniet eaque nemo impedit. Voluptatem commodi modi sed sed animi voluptatem.\\u003c/p\\u003e\\n#     \\u003cfigure class=\\u0022\\u0022wp\\u002dblock\\u002dimage size\\u002dlarge\\u0022\\u0022\\u003e\\u003cimg src=\\u0022\\u0022https://mysite.com/wp\\u002dcontent/uploads/wordpress0.jpg\\u0022\\u0022 class=\\u0022\\u0022wp\\u002dimage\\u002d5\\u0022\\u0022/\\u003e\\u003c/figure\\u003e\\n#     \\u003cp\\u003eVelit quo iste omnis sint quis. Voluptatibus dolorem sequi ipsum corrupti officia. Ut rem quasi ipsa ut. Ut ad dolor ullam error excepturi.\\u003c/p\\u003e\\u0022,admin\\n#     Down\\u002dsized solution\\u002doriented securedline,Ipsam minima qui asperiores dolorum unde voluptas quia voluptate,\\u0022\\u003cp\\u003eIpsam minima qui asperiores dolorum unde voluptas quia voluptate. Incidunt omnis cumque beatae quo deleniti ex. Praesentium nihil et consectetur neque commodi tempora ipsa adipisci. Praesentium perferendis sint est.\\u003c/p\\u003e\\n#     \\u003cp\\u003eEt aut fuga aliquam consequuntur dolore sunt ut ut. Quibusdam in voluptas vitae quia eaque. Eligendi dolorum dolorem vitae et vitae et ut.\\u003c/p\\u003e\\u0022,admin\\n#\\n# The content can also contain block markup, to insert posts for the\\n# WordPress editor:\\n#\\n#     Title,Excerpt,Content,Author\\n#     Ergonomic motivating parallelism,Consequuntur velit quasi assumenda,\\u0022\\u003c!\\u002d\\u002d wp:paragraph \\u002d\\u002d\\u003e\\n#     \\u003cp\\u003eConsequuntur velit quasi assumenda. Eum non saepe est. Ut dolorem harum eveniet eaque nemo impedit. Voluptatem commodi modi sed sed animi voluptatem.\\u003c/p\\u003e\\n#     \\u003c!\\u002d\\u002d /wp:paragraph \\u002d\\u002d\\u003e\\n#     \\u003c!\\u002d\\u002d wp:image {\\u0022\\u0022id\\u0022\\u0022:5,\\u0022\\u0022sizeSlug\\u0022\\u0022:\\u0022\\u0022large\\u0022\\u0022} \\u002d\\u002d\\u003e\\n#     \\u003cfigure class=\\u0022\\u0022wp\\u002dblock\\u002dimage size\\u002dlarge\\u0022\\u0022\\u003e\\u003cimg src=\\u0022\\u0022https://mysite.com/wp\\u002dcontent/uploads/wordpress0.jpg\\u0022\\u0022 alt=\\u0022\\u0022wordpress logo\\u0022\\u0022 class=\\u0022\\u0022wp\\u002dimage\\u002d5\\u0022\\u0022/\\u003e\\u003c/figure\\u003e\\n#     \\u003c!\\u002d\\u002d /wp:image \\u002d\\u002d\\u003e\\u0022,admin\\n#\\n########################################################################\\n\\nquery InitializeDynamicVariables\\n  @configureWarningsOnExportingDuplicateVariable(enabled: false)\\n{\\n  postInputs: _echo(value: [])\\n    @export(as: \\u0022postInputs\\u0022)\\n    @remove\\n}\\n\\nquery GetPostsFromCSVAndExportData(\\n  $url: URL!\\n  $titleColumn: String! = \\u0022Title\\u0022\\n  $excerptColumn: String! = \\u0022Excerpt\\u0022\\n  $contentColumn: String! = \\u0022Content\\u0022\\n  $authorUsernameColumn: String! = \\u0022Author\\u0022\\n)\\n  @depends(on: \\u0022InitializeDynamicVariables\\u0022)\\n{\\n  _sendHTTPRequest(input: {\\n    url: $url,\\n    method: GET\\n  }) {\\n    body\\n    csv: _strParseCSV(\\n      string: $__body\\n    )\\n    postInputs: _echo(value: $__csv)\\n      @underEachArrayItem(\\n        passValueOnwardsAs: \\u0022csvPostEntry\\u0022\\n        affectDirectivesUnderPos: [1, 2, 3, 4, 5]\\n      )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $csvPostEntry,\\n            by: {\\n              key: $titleColumn,\\n            }\\n          },\\n          passOnwardsAs: \\u0022postTitle\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $csvPostEntry,\\n            by: {\\n              key: $excerptColumn,\\n            }\\n          },\\n          passOnwardsAs: \\u0022postExcerpt\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $csvPostEntry,\\n            by: {\\n              key: $contentColumn,\\n            }\\n          },\\n          passOnwardsAs: \\u0022postContent\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_objectProperty\\u0022,\\n          arguments: {\\n            object: $csvPostEntry,\\n            by: {\\n              key: $authorUsernameColumn,\\n            }\\n          },\\n          passOnwardsAs: \\u0022postAuthorUsername\\u0022\\n        )\\n        # Already create (and export) the inputs for the mutation\\n        @applyField(\\n          name: \\u0022_echo\\u0022,\\n          arguments: {\\n            value: {\\n              status: draft,\\n              title: $postTitle,\\n              excerpt: $postExcerpt,\\n              contentAs: {\\n                html: $postContent\\n              },\\n              authorBy: {\\n                username: $postAuthorUsername\\n              }\\n            }\\n          },\\n          setResultInResponse: true\\n        )\\n      @export(as: \\u0022postInputs\\u0022)\\n  }\\n}\\n\\nmutation CreatePostsFromCSVEntries\\n  @depends(on: \\u0022GetPostsFromCSVAndExportData\\u0022)\\n{\\n  createdPostIDs: _echo(value: $postInputs)\\n    @underEachArrayItem(\\n      passValueOnwardsAs: \\u0022input\\u0022\\n    )\\n      @applyField(\\n        name: \\u0022createPost\\u0022\\n        arguments: {\\n          input: $input\\n        },\\n        setResultInResponse: true\\n      )\\n    @export(as: \\u0022createdPostIDs\\u0022)\\n}\\n\\nquery ImportPostsFromCSVEntries\\n  @depends(on: \\u0022CreatePostsFromCSVEntries\\u0022)\\n{\\n  createdPosts: posts(\\n    filter: {\\n      ids: $createdPostIDs,\\n      status: [draft]\\n    }\\n  ) {\\n    id\\n    slug\\n    date\\n    status\\n    title\\n    excerpt\\n    content\\n    author {\\n      id\\n      username\\n    }\\n  }\\n}\\n\",\"variables\":\"{\\n  \\u0022titleColumn\\u0022: \\u0022Title\\u0022,\\n  \\u0022excerptColumn\\u0022: \\u0022Excerpt\\u0022,\\n  \\u0022contentColumn\\u0022: \\u0022Content\\u0022,\\n  \\u0022authorUsernameColumn\\u0022: \\u0022Author\\u0022\\n}\"} /--><!-- wp:gatographql/schema-configuration {\"schemaConfiguration\":80} /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Import posts from CSV','','private','closed','closed','','import-posts-from-csv','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/import-posts-from-csv/',0,'graphql-query','',0),
(105,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query displays all links added to all posts.\\n#\\n# It finds all `\\u003ca href=\\u0022(...)\\u0022\\u003e(...)\\u003c/a\\u003e` strings in all posts, and\\n# lists them down in the response as `{ href: (...), text: (...) }`.\\n#\\n########################################################################\\n\\nquery ExtractLinksInContentFromAllPosts {\\n  posts(pagination: { limit: \\u002d1 }) {\\n    id\\n    title\\n    \\n    # Get the post content, and identify the links\\n    rawContent\\n      @remove\\n    adaptedRawContent: _strRegexReplace(\\n      searchRegex: \\u0022#\\u003ca.*(?=href=\\\\\\u0022([^\\\\\\u0022]*)\\\\\\u0022)[^\\u003e]*\\u003e([^\\u003c]*)\\u003c\\\\/a\\u003e#i\\u0022,\\n      replaceWith: \\u0022*****|||||$1|||||$2*****\\u0022,\\n      in: $__rawContent\\n    )\\n      @remove\\n    \\n    # Extract the links into an object { href: ..., text: ...}\\n    links: _strSplit(\\n      string: $__adaptedRawContent,\\n      separator: \\u0022*****\\u0022\\n    )\\n      @underEachArrayItem(\\n        passValueOnwardsAs: \\u0022entry\\u0022\\n        affectDirectivesUnderPos: [1, 2, 3]\\n      )\\n        @applyField(\\n          name: \\u0022_strStartsWith\\u0022\\n          arguments: {\\n            search: \\u0022|||||\\u0022\\n            in: $entry\\n          }\\n          passOnwardsAs: \\u0022isMatch\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_not\\u0022\\n          arguments: {\\n            value: $isMatch\\n          }\\n          passOnwardsAs: \\u0022isNotMatch\\u0022\\n        )\\n        @if(\\n          condition: $isNotMatch\\n        )\\n          @setNull\\n    \\n      @arrayFilter\\n    \\n      @underEachArrayItem(\\n        passValueOnwardsAs: \\u0022match\\u0022\\n        affectDirectivesUnderPos: [1, 2, 3, 4]\\n      )\\n        @applyField(\\n          name: \\u0022_strSplit\\u0022\\n          arguments: {\\n            separator: \\u0022|||||\\u0022\\n            string: $match\\n          }\\n          passOnwardsAs: \\u0022matchSplit\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_arrayItem\\u0022\\n          arguments: {\\n            array: $matchSplit\\n            position: 1\\n          }\\n          passOnwardsAs: \\u0022matchHref\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_arrayItem\\u0022\\n          arguments: {\\n            array: $matchSplit\\n            position: 2\\n          }\\n          passOnwardsAs: \\u0022matchText\\u0022\\n        )\\n        @applyField(\\n          name: \\u0022_echo\\u0022\\n          arguments: {\\n            value: {\\n              href: $matchHref\\n              text: $matchText\\n            }\\n          }\\n          setResultInResponse: true\\n        )\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Fetch post links','','private','closed','closed','','fetch-post-links','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/fetch-post-links/',0,'graphql-query','',0),
(106,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d postId: ID of the post to translate\\n#   \\u002d toLang: The language code to translate to, from Google Translate (https://cloud.google.com/translate/docs/languages)\\n#   \\u002d update: Indicate if to update the post, or create a new one\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query translates a \\u0022Classic editor\\u0022 post to\\n# the desired language.\\n#\\n# Depending on the `$update` parameter, the translation will either\\n# be saved as:\\n#\\n#   \\u002d false (default): A new post (using the translated slug) with \\u0022draft\\u0022 status\\n#   \\u002d true: The same post\\n#\\n########################################################################\\n\\nquery FetchData($postId: ID!)\\n{\\n  post(by: { id: $postId }, status: any) {\\n    title\\n    rawContent\\n    rawExcerpt\\n      @export(\\n        as: \\u0022dataToTranslate\\u0022,\\n        affectAdditionalFieldsUnderPos: [1, 2]\\n      )\\n  }\\n}\\n\\nquery TranslateData(\\n  $toLang: String!\\n)\\n  @depends(on: \\u0022FetchData\\u0022)\\n{  \\n  translations: _echo(value: $dataToTranslate)\\n    @underEachJSONObjectProperty\\n      @strTranslate(to: $toLang)\\n    @underJSONObjectProperty(by: { key: \\u0022title\\u0022 })\\n      @export(as: \\u0022translatedTitle\\u0022)\\n    @underJSONObjectProperty(by: { key: \\u0022rawContent\\u0022 })\\n      @export(as: \\u0022translatedRawContent\\u0022)\\n    @underJSONObjectProperty(by: { key: \\u0022rawExcerpt\\u0022 })\\n      @export(as: \\u0022translatedRawExcerpt\\u0022)\\n}\\n\\nmutation TranslateClassicEditorPost(\\n  $postId: ID!\\n  $update: Boolean! = false\\n)\\n  @depends(on: \\u0022TranslateData\\u0022)\\n{\\n  createPost(input: {\\n    title: $translatedTitle,\\n    contentAs: {\\n      html: $translatedRawContent\\n    },\\n    excerpt: $translatedRawExcerpt,\\n    status: draft\\n  })\\n    @skip(if: $update)\\n  {\\n    status\\n    errors {\\n      __typename\\n      ...on ErrorPayload {\\n        message\\n      }\\n    }\\n    post {\\n      id\\n      title\\n      slug\\n      rawContent\\n      rawExcerpt\\n    }    \\n  }\\n\\n  updatePost(input: {\\n    id: $postId,\\n    title: $translatedTitle,\\n    contentAs: {\\n      html: $translatedRawContent\\n    },\\n    excerpt: $translatedRawExcerpt\\n  })\\n    @include(if: $update)\\n  {\\n    status\\n    errors {\\n      __typename\\n      ...on ErrorPayload {\\n        message\\n      }\\n    }\\n    post {\\n      id\\n      title\\n      rawContent\\n      rawExcerpt\\n    }    \\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Translate post (Classic editor)','','private','closed','closed','','translate-post-classic-editor','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/translate-post-classic-editor/',0,'graphql-query','',0),
(107,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d postIds: List of IDs of the posts to translate\\n#   \\u002d toLang: The language code to translate to, from Google Translate (https://cloud.google.com/translate/docs/languages)\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query translates multiple \\u0022Classic editor\\u0022\\n# posts at once (in bulk), while executing a single call to the Google\\n# Translate API containing all text to translate from all the posts.\\n#\\n# The translation for each post will be saved under the same post.\\n#\\n# See Persisted Query \\u0022Translate post (Classic editor)\\u0022 for additional\\n# documentation.\\n#\\n########################################################################\\n\\nquery FetchData($postIds: [ID!]!)\\n{\\n  posts(filter: { ids: $postIds, status: any } ) {\\n    title\\n    rawContent\\n    rawExcerpt\\n      @export(\\n        as: \\u0022dataToTranslate\\u0022,\\n        affectAdditionalFieldsUnderPos: [1, 2]\\n        type: DICTIONARY\\n      )\\n  }\\n}\\n\\nquery TranslateData(\\n  $toLang: String!\\n)\\n  @depends(on: \\u0022FetchData\\u0022)\\n{  \\n  translatedData: _echo(value: $dataToTranslate)\\n    @underEachJSONObjectProperty\\n      @underEachJSONObjectProperty\\n        @strTranslate(to: $toLang)\\n    @export(as: \\u0022translatedData\\u0022)\\n}\\n\\nquery GenerateMutationInputs\\n  @depends(on: \\u0022TranslateData\\u0022)\\n{  \\n  postInputs: _echo(value: $translatedData)\\n    @underEachJSONObjectProperty(\\n      passValueOnwardsAs: \\u0022postTranslatedData\\u0022\\n      affectDirectivesUnderPos: [1, 2, 3, 4]\\n    )\\n      @applyField(\\n        name: \\u0022_objectProperty\\u0022,\\n        arguments: {\\n          object: $postTranslatedData,\\n          by: {\\n            key: \\u0022title\\u0022,\\n          }\\n        },\\n        passOnwardsAs: \\u0022postTranslatedTitle\\u0022\\n      )\\n      @applyField(\\n        name: \\u0022_objectProperty\\u0022,\\n        arguments: {\\n          object: $postTranslatedData,\\n          by: {\\n            key: \\u0022rawExcerpt\\u0022,\\n          }\\n        },\\n        passOnwardsAs: \\u0022postTranslatedRawExcerpt\\u0022\\n      )\\n      @applyField(\\n        name: \\u0022_objectProperty\\u0022,\\n        arguments: {\\n          object: $postTranslatedData,\\n          by: {\\n            key: \\u0022rawContent\\u0022,\\n          }\\n        },\\n        passOnwardsAs: \\u0022postTranslatedRawContent\\u0022\\n      )\\n      @applyField(\\n        name: \\u0022_echo\\u0022,\\n        arguments: {\\n          value: {\\n            title: $postTranslatedTitle,\\n            excerpt: $postTranslatedRawExcerpt,\\n            contentAs: {\\n              html: $postTranslatedRawContent\\n            }\\n          }\\n        },\\n        setResultInResponse: true\\n      )\\n    @export(as: \\u0022postInputs\\u0022)\\n}\\n\\nmutation TranslateClassicEditorPosts($postIds: [ID!]!)\\n  @depends(on: \\u0022GenerateMutationInputs\\u0022)\\n{\\n  updatePosts: posts(filter: { ids: $postIds, status: any } ) {\\n    id\\n    postInput: _objectProperty(\\n      object: $postInputs,\\n      by: {\\n        key: $__id\\n      }\\n    )\\n      @remove\\n    update(input: $__postInput) {\\n      status\\n      errors {\\n        __typename\\n        ...on ErrorPayload {\\n          message\\n        }\\n      }\\n      post {\\n        id\\n        title\\n        rawExcerpt\\n        rawContent\\n      }\\n    }\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration {\"schemaConfiguration\":78} /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Translate posts (Classic editor)','','private','closed','closed','','translate-posts-classic-editor','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/translate-posts-classic-editor/',0,'graphql-query','',0),
(108,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/schema-configuration {\"schemaConfiguration\":80} /--><!-- wp:gatographql/custom-endpoint-options /--><!-- wp:gatographql/endpoint-graphiql /--><!-- wp:gatographql/endpoint-voyager /-->','Nested mutations + Entity as mutation payload type','Private client to execute queries that create resources in bulk','private','closed','closed','','nested-mutations-entity-as-mutation-payload-type','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql/nested-mutations-entity-as-mutation-payload-type/',0,'graphql-endpoint','',0),
(109,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d postId: ID of the post\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query sends an email to the admin user,\\n# passing the contents of a new post.\\n# \\n# It is useful to trigger with automation, to notify of the creation\\n# of a new post on the site.\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/library/send\\u002demail\\u002dto\\u002dthe\\u002dadmin\\u002dnotifying\\u002dof\\u002da\\u002dnew\\u002dpost/\\n#\\n########################################################################\\n\\nquery GetPostAndExportData($postId: ID!) {\\n  post(by: { id: $postId }, status: any) {\\n    content @export(as: \\u0022postContent\\u0022)\\n    title @export(as: \\u0022postTitle\\u0022)\\n    url @export(as: \\u0022postURL\\u0022)\\n  }\\n}\\n\\nquery GetEmailData\\n  @depends(on: \\u0022GetPostAndExportData\\u0022)\\n{\\n  adminEmail: optionValue(name: \\u0022admin_email\\u0022)\\n    @export(as: \\u0022adminEmail\\u0022)\\n\\n  emailMessageTemplate: _strConvertMarkdownToHTML(\\n    text: \\u0022\\u0022\\u0022\\n\\nThere is a [new post on the site]({$postURL}):\\n\\n**{$postTitle}**:\\n\\n{$postContent}\\n\\n    \\u0022\\u0022\\u0022\\n  )\\n  emailMessage: _strReplaceMultiple(\\n    search: [\\u0022{$postTitle}\\u0022, \\u0022{$postContent}\\u0022, \\u0022{$postURL}\\u0022],\\n    replaceWith: [$postTitle, $postContent, $postURL],\\n    in: $__emailMessageTemplate\\n  )\\n    @export(as: \\u0022emailMessage\\u0022)\\n\\n  emailSubject: _sprintf(\\n    string: \\u0022New post: \\\\\\u0022%s\\\\\\u0022\\u0022,\\n    values: [$postTitle]\\n  )\\n    @export(as: \\u0022emailSubject\\u0022)\\n}\\n\\nmutation SendEmailToAdminAboutPost\\n  @depends(on: \\u0022GetEmailData\\u0022)\\n{\\n  _sendEmail(\\n    input: {\\n      to: $adminEmail\\n      subject: $emailSubject\\n      messageAs: {\\n        html: $emailMessage\\n      }\\n    }\\n  ) {\\n    status\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Send email to admin about post','','private','closed','closed','','send-email-to-admin-about-post','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/send-email-to-admin-about-post/',0,'graphql-query','',0),
(110,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d postId: ID of the post to modify\\n# \\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query checks if block `wp:comments` has been\\n# added to the post indicated by variable `$postId`.\\n# If the block is missing, it then adds it at the bottom of the post.\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/library/add\\u002da\\u002dmandatory\\u002dcomments\\u002dblock\\u002dto\\u002dpost/\\n#\\n########################################################################\\n\\nquery CheckIfCommentsBlockExists($postId: ID!) {\\n  posts(\\n    filter: {\\n      ids: [$postId]\\n      status: any\\n      search: \\u0022\\\\\\u0022\\u003c!\\u002d\\u002d /wp:comments \\u002d\\u002d\\u003e\\\\\\u0022\\u0022\\n    }\\n  ) {\\n    id\\n    ...CommentBlocks\\n  }\\n  blockExists: _notEmpty(value: $__posts)\\n    @export(as: \\u0022blockExists\\u0022)\\n}\\n\\nmutation InsertCommentsBlockIfMissingInPost($postId: ID!)\\n  @depends(on: \\u0022CheckIfCommentsBlockExists\\u0022)\\n  @skip(if: $blockExists)\\n{\\n  post(by: { id: $postId }, status: any) {\\n    id\\n    rawContent\\n    adaptedRawContent: _strAppend(\\n      after: $__rawContent\\n      append: \\u0022\\u0022\\u0022\\n\\n\\u003c!\\u002d\\u002d wp:comments \\u002d\\u002d\\u003e\\n\\u003cdiv class=\\u0022wp\\u002dblock\\u002dcomments\\u0022\\u003e\\u003c!\\u002d\\u002d wp:comments\\u002dtitle /\\u002d\\u002d\\u003e\\n\\n\\u003c!\\u002d\\u002d wp:comment\\u002dtemplate \\u002d\\u002d\\u003e\\n\\u003c!\\u002d\\u002d wp:columns \\u002d\\u002d\\u003e\\n\\u003cdiv class=\\u0022wp\\u002dblock\\u002dcolumns\\u0022\\u003e\\u003c!\\u002d\\u002d wp:column {\\u0022width\\u0022:\\u002240px\\u0022} \\u002d\\u002d\\u003e\\n\\u003cdiv class=\\u0022wp\\u002dblock\\u002dcolumn\\u0022 style=\\u0022flex\\u002dbasis:40px\\u0022\\u003e\\u003c!\\u002d\\u002d wp:avatar {\\u0022size\\u0022:40,\\u0022style\\u0022:{\\u0022border\\u0022:{\\u0022radius\\u0022:\\u002220px\\u0022}}} /\\u002d\\u002d\\u003e\\u003c/div\\u003e\\n\\u003c!\\u002d\\u002d /wp:column \\u002d\\u002d\\u003e\\n\\n\\u003c!\\u002d\\u002d wp:column \\u002d\\u002d\\u003e\\n\\u003cdiv class=\\u0022wp\\u002dblock\\u002dcolumn\\u0022\\u003e\\u003c!\\u002d\\u002d wp:comment\\u002dauthor\\u002dname {\\u0022fontSize\\u0022:\\u0022small\\u0022} /\\u002d\\u002d\\u003e\\n\\n\\u003c!\\u002d\\u002d wp:group {\\u0022style\\u0022:{\\u0022spacing\\u0022:{\\u0022margin\\u0022:{\\u0022top\\u0022:\\u00220px\\u0022,\\u0022bottom\\u0022:\\u00220px\\u0022}}},\\u0022layout\\u0022:{\\u0022type\\u0022:\\u0022flex\\u0022}} \\u002d\\u002d\\u003e\\n\\u003cdiv class=\\u0022wp\\u002dblock\\u002dgroup\\u0022 style=\\u0022margin\\u002dtop:0px;margin\\u002dbottom:0px\\u0022\\u003e\\u003c!\\u002d\\u002d wp:comment\\u002ddate {\\u0022fontSize\\u0022:\\u0022small\\u0022} /\\u002d\\u002d\\u003e\\n\\n\\u003c!\\u002d\\u002d wp:comment\\u002dedit\\u002dlink {\\u0022fontSize\\u0022:\\u0022small\\u0022} /\\u002d\\u002d\\u003e\\u003c/div\\u003e\\n\\u003c!\\u002d\\u002d /wp:group \\u002d\\u002d\\u003e\\n\\n\\u003c!\\u002d\\u002d wp:comment\\u002dcontent /\\u002d\\u002d\\u003e\\n\\n\\u003c!\\u002d\\u002d wp:comment\\u002dreply\\u002dlink {\\u0022fontSize\\u0022:\\u0022small\\u0022} /\\u002d\\u002d\\u003e\\u003c/div\\u003e\\n\\u003c!\\u002d\\u002d /wp:column \\u002d\\u002d\\u003e\\u003c/div\\u003e\\n\\u003c!\\u002d\\u002d /wp:columns \\u002d\\u002d\\u003e\\n\\u003c!\\u002d\\u002d /wp:comment\\u002dtemplate \\u002d\\u002d\\u003e\\n\\n\\u003c!\\u002d\\u002d wp:comments\\u002dpagination \\u002d\\u002d\\u003e\\n\\u003c!\\u002d\\u002d wp:comments\\u002dpagination\\u002dprevious /\\u002d\\u002d\\u003e\\n\\n\\u003c!\\u002d\\u002d wp:comments\\u002dpagination\\u002dnumbers /\\u002d\\u002d\\u003e\\n\\n\\u003c!\\u002d\\u002d wp:comments\\u002dpagination\\u002dnext /\\u002d\\u002d\\u003e\\n\\u003c!\\u002d\\u002d /wp:comments\\u002dpagination \\u002d\\u002d\\u003e\\n\\n\\u003c!\\u002d\\u002d wp:post\\u002dcomments\\u002dform /\\u002d\\u002d\\u003e\\u003c/div\\u003e\\n\\u003c!\\u002d\\u002d /wp:comments \\u002d\\u002d\\u003e   \\n\\n      \\u0022\\u0022\\u0022\\n    )\\n    update(input: {\\n      contentAs: { html: $__adaptedRawContent },\\n    }) {\\n      status\\n      errors {\\n        __typename\\n        ...on ErrorPayload {\\n          message\\n        }\\n      }\\n      post {\\n        id\\n        rawContent\\n        ...CommentBlocks\\n      }\\n    }\\n  }\\n}\\n\\nfragment CommentBlocks on CustomPost {\\n  blocks(filterBy: { include: [\\u0022core/comments\\u0022] }) {\\n    ... on Block {\\n      name\\n      attributes\\n    }\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration {\"schemaConfiguration\":78} /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Add comments block to post','','private','closed','closed','','add-comments-block-to-post','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/add-comments-block-to-post/',0,'graphql-query','',0),
(111,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d postId: ID of the post\\n#   \\u002d openAIAPIKey: API key for OpenAI (https://platform.openai.com/api\\u002dkeys)\\n#   \\u002d stableDiffusionAPIKey: API key for Stable Diffusion (https://stablediffusionapi.com/dashboard/apikeys)\\n#   \\u002d tinyPngAPIKey: API key for TinyPNG (https://tinify.com/dashboard/api)\\n#   \\u002d imageSize: Size for OpenAI\'s generated image, among \\u0022256x256\\u0022, \\u0022512x512\\u0022, or \\u00221024x1024\\u0022 pixels\\n#   \\u002d width: Width for Stable Diffusion\'s generated image\\n#   \\u002d height: Height for Stable Diffusion\'s generated image\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query uses generative AI to produce\\n# images for posts without a featured image.\\n#\\n# It uses any of these generative AI services (you must choose\\n# which one to use):\\n#\\n#   \\u002d OpenAI\'s DALL\\u002dE\\n#   \\u002d Stable Diffusion\\n#\\n# It first checks if a post has a featured image. If it does not,\\n# it creates one by calling chosen generative AI service.\\n#\\n# To choose which service to use, simply provide its API key\\n# as a variable (`$openAIAPIKey` or `$stableDiffusionAPIKey`).\\n#\\n# As the generative AI images are not optimized for the web,\\n# the query sends the newly\\u002dgenerated image to TinyPNG\\n# to compress it.\\n#\\n# Provide an API key (as variable `$tinyPngAPIKey`) to\\n# use this service.\\n#\\n# Finally, the query creates a new media item with the image, and\\n# sets it as the post\'s featured image.\\n#\\n# *********************************************************************\\n#\\n# More info:\\n#   \\u002d https://gatographql.com/library/generate\\u002dan\\u002doptimized\\u002dpost\\u002dfeatured\\u002dimage\\u002dusing\\u002dopenai\\u002ddall\\u002de\\u002dand\\u002dtinypng/\\n#   \\u002d https://gatographql.com/library/generate\\u002dan\\u002doptimized\\u002dpost\\u002dfeatured\\u002dimage\\u002dusing\\u002dstable\\u002ddiffusion\\u002dand\\u002dtinypng/\\n#\\n########################################################################\\n\\nquery InitializeVariables(\\n  $openAIAPIKey: String\\n  $stableDiffusionAPIKey: String\\n  $tinyPngAPIKey: String\\n)\\n  @configureWarningsOnExportingDuplicateVariable(enabled: false)\\n{\\n  isFeaturedImageMissing: _echo(value: false)\\n    @export(as: \\u0022isFeaturedImageMissing\\u0022)\\n    @remove\\n\\n  isPostTitleNotEmpty: _echo(value: false)\\n    @export(as: \\u0022isPostTitleNotEmpty\\u0022)\\n    @remove\\n\\n  generatedImageURL: _echo(value: null)\\n    @export(as: \\u0022generatedImageURL\\u0022)\\n    @remove\\n\\n  isImageGenerated: _echo(value: false)\\n    @export(as: \\u0022isImageGenerated\\u0022)\\n    @remove\\n\\n  mimeType: _echo(value: null)\\n    @export(as: \\u0022mimeType\\u0022)\\n    @remove\\n\\n  isMediaItemCreated: _echo(value: false)\\n    @export(as: \\u0022isMediaItemCreated\\u0022)\\n    @remove\\n\\n  useOpenAI: _notEmpty(value: $openAIAPIKey)\\n    @export(as: \\u0022useOpenAI\\u0022)\\n    @remove\\n\\n  useStableDiffusion: _notEmpty(value: $stableDiffusionAPIKey)\\n    @export(as: \\u0022useStableDiffusion\\u0022)\\n    @remove\\n\\n  useTinyPng: _notEmpty(value: $tinyPngAPIKey)\\n    @export(as: \\u0022useTinyPng\\u0022)\\n    @remove\\n}\\n\\nquery ExportPostData(\\n  $postId: ID!\\n)\\n  @depends(on: \\u0022InitializeVariables\\u0022)\\n{\\n  post(by: { id: $postId }, status: any) {\\n    hasFeaturedImage\\n    isFeaturedImageMissing: hasFeaturedImage\\n      @boolOpposite\\n      @export(as: \\u0022isFeaturedImageMissing\\u0022)\\n    title\\n      @export(as: \\u0022postTitle\\u0022)\\n    rawTitle\\n      @remove\\n    isPostTitleNotEmpty: _notEmpty(value: $__rawTitle)\\n      @export(as: \\u0022isPostTitleNotEmpty\\u0022)\\n    mediaItemFilename: rawTitle\\n      @default(value: \\u0022untitled\\u0022, condition: IS_EMPTY)\\n      @strLowerCase\\n      @strSubstr(offset: 0, length: 20)\\n      @export(as: \\u0022filename\\u0022)\\n      @remove\\n  }\\n}\\n\\nquery MaybeGenerateImageUsingOpenAI(\\n  $openAIAPIKey: String\\n  $imageSize: String! = \\u00221024x1024\\u0022 # 256x256, 512x512, or 1024x1024 pixels\\n)\\n  @depends(on: \\u0022ExportPostData\\u0022)\\n  @include(if: $isFeaturedImageMissing)\\n  @include(if: $isPostTitleNotEmpty)\\n  @include(if: $useOpenAI)\\n{\\n  openAIResponse: _sendJSONObjectItemHTTPRequest(input: {\\n    url: \\u0022https://api.openai.com/v1/images/generations\\u0022,\\n    method: POST,\\n    options: {\\n      auth: {\\n        password: $openAIAPIKey\\n      },\\n      json: {\\n        prompt: $postTitle,\\n        size: $imageSize,\\n        n: 1,\\n        response_format: \\u0022url\\u0022,\\n      }\\n    }\\n  })\\n    @underJSONObjectProperty(by: { key: \\u0022data\\u0022 })\\n      @underArrayItem(index: 0)\\n        @underJSONObjectProperty(by: { key: \\u0022url\\u0022 })\\n          @export(as: \\u0022generatedImageURL\\u0022)\\n  \\n  openAPIImageCaption: _sprintf(\\n    string: \\u0022Image created by DALL\\u002dE using prompt: \'%s\'\\u0022,\\n    values: [$postTitle]\\n  )\\n      @export(as: \\u0022imageCaption\\u0022)\\n  \\n  openAIMediaItemFilename: _sprintf(\\n    string: \\u0022%s.png\\u0022,\\n    values: [$filename]\\n  )\\n    @export(as: \\u0022filename\\u0022)\\n}\\n\\nquery MaybeGenerateImageUsingStableDiffusion(\\n  $stableDiffusionAPIKey: String\\n  $width: Int! = 1024\\n  $height: Int! = 1024\\n)\\n  @depends(on: \\u0022ExportPostData\\u0022)\\n  @include(if: $isFeaturedImageMissing)\\n  @include(if: $isPostTitleNotEmpty)\\n  @include(if: $useStableDiffusion)\\n{\\n  stableDiffusionResponse: _sendJSONObjectItemHTTPRequest(input: {\\n    url: \\u0022https://stablediffusionapi.com/api/v3/text2img\\u0022,\\n    method: POST,\\n    options: {\\n      json: {\\n        key: $stableDiffusionAPIKey\\n        prompt: $postTitle,\\n        width: $width\\n        height: $height\\n        samples: 1\\n      }\\n    }\\n  })\\n    @underJSONObjectProperty(by: { key: \\u0022output\\u0022 })\\n      @underArrayItem(index: 0)\\n        @export(as: \\u0022generatedImageURL\\u0022)\\n  \\n  stableDiffusionImageCaption: _sprintf(\\n    string: \\u0022Image created by Stable Diffusion using prompt: \'%s\'\\u0022,\\n    values: [$postTitle]\\n  )\\n    @export(as: \\u0022imageCaption\\u0022)\\n  \\n  stableDiffusionMediaItemFilename: _sprintf(\\n    string: \\u0022%s.png\\u0022,\\n    values: [$filename]\\n  )\\n    @export(as: \\u0022filename\\u0022)\\n}\\n\\nquery CheckIsImageGenerated\\n  @depends(on: [\\n    \\u0022MaybeGenerateImageUsingOpenAI\\u0022,\\n    \\u0022MaybeGenerateImageUsingStableDiffusion\\u0022\\n  ])\\n  @include(if: $isFeaturedImageMissing)\\n  @include(if: $isPostTitleNotEmpty)\\n{\\n  isImageGenerated: _notEmpty(value: $generatedImageURL)\\n    @export(as: \\u0022isImageGenerated\\u0022)\\n}\\n\\nquery MaybeCompressGeneratedImage(\\n  $tinyPngAPIKey: String\\n)\\n  @depends(on: \\u0022CheckIsImageGenerated\\u0022)\\n  @include(if: $isImageGenerated)\\n  @include(if: $useTinyPng)\\n{\\n  compressedImageResponse: _sendHTTPRequest(input: {\\n    url: \\u0022https://api.tinify.com/shrink\\u0022,\\n    method: POST,\\n    options: {\\n      auth: {\\n        password: $tinyPngAPIKey\\n      },\\n      headers: [\\n        {\\n          name: \\u0022Content\\u002dType\\u0022,\\n          value: \\u0022application/json\\u0022\\n        }\\n      ],\\n      json: {\\n        source: {\\n          url: $generatedImageURL\\n        }\\n      }\\n    }\\n  }) {\\n    body\\n      @remove\\n    bodyJSONObject: _strDecodeJSONObject(string: $__body)\\n\\n    mimeType: _objectProperty(\\n      object: $__bodyJSONObject\\n      by: { path: \\u0022output.type\\u0022 }\\n    )\\n      @export(as: \\u0022mimeType\\u0022)\\n\\n    generatedImageURL: header(name: \\u0022Location\\u0022)\\n      @export(as: \\u0022generatedImageURL\\u0022)\\n  }\\n}\\n\\nmutation CreateMediaItemFromGeneratedImage\\n  @depends(on: \\u0022MaybeCompressGeneratedImage\\u0022)\\n  @include(if: $isImageGenerated)\\n{\\n  createMediaItem(input: {\\n    from: {\\n      url: {\\n        source: $generatedImageURL\\n        filename: $filename\\n      }\\n    }\\n    title: $postTitle\\n    caption: $imageCaption\\n    altText: $postTitle\\n    mimeType: $mimeType\\n  }) {\\n    mediaItemID\\n      @export(as: \\u0022mediaItemID\\u0022)\\n    isMediaItemCreated: _notNull(value: $__mediaItemID)\\n      @export(as: \\u0022isMediaItemCreated\\u0022)\\n      @remove\\n\\n    status\\n    errors {\\n      __typename\\n      ...on ErrorPayload {\\n        message\\n      }\\n    }\\n    mediaItem {\\n      altText\\n      caption\\n      mimeType\\n      slug\\n      src\\n      title\\n    }\\n  }\\n}\\n\\nmutation GenerateAPostFeaturedImageUsingAIAndOptimizeIt(\\n  $postId: ID!\\n)\\n  @depends(on: \\u0022CreateMediaItemFromGeneratedImage\\u0022)\\n  @include(if: $isMediaItemCreated)\\n{\\n  setFeaturedImageOnCustomPost(input: {\\n    customPostID: $postId\\n    mediaItemBy: { id: $mediaItemID }\\n  }) {\\n    status\\n    errors {\\n      __typename\\n      ...on ErrorPayload {\\n        message\\n      }\\n    }\\n    customPost {\\n      __typename\\n      ...on CustomPost {\\n        featuredImage {\\n          id\\n          altText\\n          caption\\n          mimeType\\n          slug\\n          src\\n          title\\n        }\\n      }\\n    }\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Generate a post\'s featured image using AI and optimize it','','private','closed','closed','','generate-a-posts-featured-image-using-ai-and-optimize-it','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/generate-a-posts-featured-image-using-ai-and-optimize-it/',0,'graphql-query','',0),
(112,1,'2024-04-14 00:00:38','2024-04-14 00:00:38','<!-- wp:gatographql/graphiql {\"query\":\"########################################################################\\n# \\n# Variables:\\n#   \\u002d postId: ID of the post to modify\\n#   \\u002d searchBlockType: After what block type to insert the new block (\\u0022wp:paragraph\\u0022 by default)\\n#   \\u002d injectAfterBlockCount: After how many occurrences of the block to search will the new block be placed\\n#   \\u002d injectBlockMarkup: The HTML for the block to insert\\n#       eg: \\u003c!\\u002d\\u002d mycompany:black\\u002dfriday\\u002dcampaign\\u002dvideo \\u002d\\u002d\\u003e\\u003cfigure class=\\\\\\u0022wp\\u002dblock\\u002dvideo\\\\\\u0022\\u003e\\u003cvideo controls src=\\\\\\u0022https://mysite.com/videos/BlackFriday2023.mp4\\\\\\u0022\\u003e\\u003c/video\\u003e\\u003c/figure\\u003e\\u003c!\\u002d\\u002d /mycompany:black\\u002dfriday\\u002dcampaign\\u002dvideo \\u002d\\u002d\\u003e\\n#\\n# *********************************************************************\\n#\\n# === Description ===\\n#\\n# This Persisted GraphQL query identifies the nth block of a given type\\n# (\\u0022wp:paragraph\\u0022 by default) in a post, and places the provided\\n# custom block\'s HTML content right after it.\\n#\\n# *********************************************************************\\n# \\n# More info:\\n#   \\u002d https://gatographql.com/tutorial/inserting\\u002dremoving\\u002da\\u002dgutenberg\\u002dblock\\u002din\\u002dbulk/#heading\\u002dinserting\\u002dthe\\u002dblock\\u002dwith\\u002dmore\\u002doptions\\n#\\n########################################################################\\n\\nquery CreateRegex(\\n  $searchBlockType: String! = \\u0022wp:paragraph\\u0022\\n  $injectAfterBlockCount: Int = 1\\n  $injectBlockMarkup: String!\\n) {\\n  endingBlockMarkup: _sprintf(\\n    string: \\u0022\\u003c!\\u002d\\u002d /%s \\u002d\\u002d\\u003e\\u0022,\\n    values: [$searchBlockType]\\n  )\\n    @remove\\n  endingBlockMarkupArray: _arrayPad(\\n    array: [],\\n    length: $injectAfterBlockCount,\\n    value: $__endingBlockMarkup\\n  )\\n    @remove\\n  regexString: _arrayJoin(\\n    array: $__endingBlockMarkupArray,\\n    separator: \\u0022[\\\\\\\\s\\\\\\\\S]+\\u0022\\n  )\\n    @remove\\n  regex: _sprintf(\\n    string: \\u0022#(%s)#U\\u0022,\\n    values: [$__regexString]\\n  )\\n    @export(as: \\u0022regex\\u0022)\\n    @remove\\n  replaceWith: _sprintf(\\n    string: \\u0022${1}%s\\u0022,\\n    values: [$injectBlockMarkup]\\n  )\\n    @export(as: \\u0022replaceWith\\u0022)\\n    @remove\\n}\\n\\nmutation InsertBlockInPost($postId: ID!)\\n  @depends(on: \\u0022CreateRegex\\u0022)\\n{\\n  post(by: { id: $postId }, status: any) {\\n    rawContent\\n    adaptedRawContent: _strRegexReplace(\\n      in: $__rawContent,\\n      searchRegex: $regex,\\n      replaceWith: $replaceWith,\\n      limit: 1\\n    )\\n    update(input: {\\n      contentAs: { html: $__adaptedRawContent },\\n    }) {\\n      status\\n      errors {\\n        __typename\\n        ...on ErrorPayload {\\n          message\\n        }\\n      }\\n      post {\\n        id\\n        rawContent\\n      }\\n    }\\n  }\\n}\"} /--><!-- wp:gatographql/schema-configuration {\"schemaConfiguration\":78} /--><!-- wp:gatographql/persisted-query-endpoint-options /--><!-- wp:gatographql/persisted-query-endpoint-api-hierarchy /-->','[PRO] Insert block in post','','private','closed','closed','','insert-block-in-post','','','2024-04-14 00:00:38','2024-04-14 00:00:38','',0,'http://localhost:8080/posts/graphql-query/insert-block-in-post/',0,'graphql-query','',0),
(113,1,'2024-04-14 00:15:36','2024-04-14 00:15:36','a:35:{s:9:\"post_type\";s:7:\"expense\";s:22:\"advanced_configuration\";b:1;s:13:\"import_source\";s:5:\"cptui\";s:11:\"import_date\";i:1713053736;s:6:\"labels\";a:33:{s:4:\"name\";s:8:\"Expenses\";s:13:\"singular_name\";s:7:\"Expense\";s:9:\"menu_name\";s:8:\"Expenses\";s:9:\"all_items\";s:12:\"All Expenses\";s:9:\"edit_item\";s:12:\"Edit Expense\";s:9:\"view_item\";s:12:\"View Expense\";s:10:\"view_items\";s:13:\"View Expenses\";s:12:\"add_new_item\";s:15:\"Add New Expense\";s:7:\"add_new\";s:15:\"Add New Expense\";s:8:\"new_item\";s:11:\"New Expense\";s:17:\"parent_item_colon\";s:0:\"\";s:12:\"search_items\";s:15:\"Search Expenses\";s:9:\"not_found\";s:0:\"\";s:18:\"not_found_in_trash\";s:0:\"\";s:8:\"archives\";s:0:\"\";s:10:\"attributes\";s:0:\"\";s:14:\"featured_image\";s:0:\"\";s:18:\"set_featured_image\";s:0:\"\";s:21:\"remove_featured_image\";s:0:\"\";s:18:\"use_featured_image\";s:0:\"\";s:16:\"insert_into_item\";s:0:\"\";s:21:\"uploaded_to_this_item\";s:0:\"\";s:17:\"filter_items_list\";s:0:\"\";s:14:\"filter_by_date\";s:0:\"\";s:21:\"items_list_navigation\";s:0:\"\";s:10:\"items_list\";s:0:\"\";s:14:\"item_published\";s:0:\"\";s:24:\"item_published_privately\";s:0:\"\";s:22:\"item_reverted_to_draft\";s:0:\"\";s:14:\"item_scheduled\";s:0:\"\";s:12:\"item_updated\";s:0:\"\";s:9:\"item_link\";s:0:\"\";s:21:\"item_link_description\";s:0:\"\";}s:11:\"description\";s:0:\"\";s:6:\"public\";b:1;s:12:\"hierarchical\";b:0;s:19:\"exclude_from_search\";b:0;s:18:\"publicly_queryable\";b:1;s:7:\"show_ui\";b:1;s:12:\"show_in_menu\";b:1;s:17:\"admin_menu_parent\";s:0:\"\";s:17:\"show_in_admin_bar\";b:1;s:17:\"show_in_nav_menus\";b:1;s:12:\"show_in_rest\";b:1;s:9:\"rest_base\";s:0:\"\";s:14:\"rest_namespace\";s:0:\"\";s:21:\"rest_controller_class\";s:0:\"\";s:13:\"menu_position\";s:0:\"\";s:9:\"menu_icon\";s:0:\"\";s:19:\"rename_capabilities\";b:0;s:24:\"singular_capability_name\";s:4:\"post\";s:22:\"plural_capability_name\";s:5:\"posts\";s:8:\"supports\";a:3:{i:0;s:5:\"title\";i:1;s:6:\"author\";i:2;s:6:\"editor\";}s:10:\"taxonomies\";a:1:{i:0;s:8:\"category\";}s:11:\"has_archive\";b:0;s:16:\"has_archive_slug\";s:0:\"\";s:7:\"rewrite\";a:4:{s:17:\"permalink_rewrite\";s:13:\"post_type_key\";s:10:\"with_front\";s:1:\"1\";s:5:\"feeds\";s:1:\"0\";s:5:\"pages\";s:1:\"1\";}s:9:\"query_var\";s:13:\"post_type_key\";s:14:\"query_var_name\";s:0:\"\";s:10:\"can_export\";b:1;s:16:\"delete_with_user\";b:0;s:20:\"register_meta_box_cb\";s:0:\"\";s:16:\"enter_title_here\";s:0:\"\";}','Expenses','expenses','trash','closed','closed','','post_type_661b202870036__trashed','','','2024-04-14 00:29:27','2024-04-14 00:29:27','',0,'http://localhost:8080/?post_type=acf-post-type&#038;p=113',0,'acf-post-type','',0),
(116,1,'2024-04-14 00:39:41','2024-04-14 00:39:41','ai ai','oi oi','','trash','open','open','','__trashed-5','','','2024-04-14 00:39:41','2024-04-14 00:39:41','',0,'http://localhost:8080/?p=116',0,'post','',0),
(117,1,'2024-04-14 00:39:41','2024-04-14 00:39:41','ai ai','oi oi','','trash','open','open','','__trashed-4','','','2024-04-14 00:39:41','2024-04-14 00:39:41','',0,'http://localhost:8080/?p=117',0,'post','',0),
(118,1,'2024-04-14 00:39:41','2024-04-14 00:39:41','ai ai','oi oi','','trash','open','open','','__trashed-3','','','2024-04-14 00:39:41','2024-04-14 00:39:41','',0,'http://localhost:8080/?p=118',0,'post','',0),
(119,1,'2024-04-14 00:39:41','2024-04-14 00:39:41','ai ai','oi oi','','trash','open','open','','__trashed-2','','','2024-04-14 00:39:41','2024-04-14 00:39:41','',0,'http://localhost:8080/?p=119',0,'post','',0),
(120,1,'2024-04-14 00:39:41','2024-04-14 00:39:41','ai ai','oi oi','','trash','open','open','','__trashed','','','2024-04-14 00:39:41','2024-04-14 00:39:41','',0,'http://localhost:8080/?p=120',0,'post','',0),
(121,1,'2024-04-14 00:39:29','2024-04-14 00:39:29','ai ai','oi oi','','trash','open','open','','oi-oi__trashed','','','2024-04-14 01:49:27','2024-04-14 01:49:27','',0,'http://localhost:8080/?p=121',0,'post','',0),
(122,1,'2024-04-14 00:39:29','2024-04-14 00:39:29','ai ai','oi oi','','inherit','closed','closed','','121-revision-v1','','','2024-04-14 00:39:29','2024-04-14 00:39:29','',121,'http://localhost:8080/?p=122',0,'revision','',0),
(123,1,'2024-04-14 00:39:41','2024-04-14 00:39:41','ai ai','oi oi','','inherit','closed','closed','','120-revision-v1','','','2024-04-14 00:39:41','2024-04-14 00:39:41','',120,'http://localhost:8080/?p=123',0,'revision','',0),
(124,1,'2024-04-14 00:39:41','2024-04-14 00:39:41','ai ai','oi oi','','inherit','closed','closed','','119-revision-v1','','','2024-04-14 00:39:41','2024-04-14 00:39:41','',119,'http://localhost:8080/?p=124',0,'revision','',0),
(125,1,'2024-04-14 00:39:41','2024-04-14 00:39:41','ai ai','oi oi','','inherit','closed','closed','','118-revision-v1','','','2024-04-14 00:39:41','2024-04-14 00:39:41','',118,'http://localhost:8080/?p=125',0,'revision','',0),
(126,1,'2024-04-14 00:39:41','2024-04-14 00:39:41','ai ai','oi oi','','inherit','closed','closed','','117-revision-v1','','','2024-04-14 00:39:41','2024-04-14 00:39:41','',117,'http://localhost:8080/?p=126',0,'revision','',0),
(127,1,'2024-04-14 00:39:41','2024-04-14 00:39:41','ai ai','oi oi','','inherit','closed','closed','','116-revision-v1','','','2024-04-14 00:39:41','2024-04-14 00:39:41','',116,'http://localhost:8080/?p=127',0,'revision','',0),
(128,1,'2024-04-14 00:40:14','2024-04-14 00:40:14','ai ai','oi oi','aiiiiii','trash','open','open','','oi-oi-2__trashed','','','2024-04-14 01:49:27','2024-04-14 01:49:27','',0,'http://localhost:8080/?p=128',0,'post','',0),
(129,1,'2024-04-14 00:40:14','2024-04-14 00:40:14','ai ai','oi oi','aiiiiii','inherit','closed','closed','','128-revision-v1','','','2024-04-14 00:40:14','2024-04-14 00:40:14','',128,'http://localhost:8080/?p=129',0,'revision','',0),
(130,1,'2024-04-14 00:40:33','2024-04-14 00:40:33','ai ai','oi oi','aiiiiii','trash','open','open','','oi-oi-3__trashed','','','2024-04-14 01:49:27','2024-04-14 01:49:27','',0,'http://localhost:8080/?p=130',0,'post','',0),
(131,1,'2024-04-14 00:40:33','2024-04-14 00:40:33','ai ai','oi oi','aiiiiii','inherit','closed','closed','','130-revision-v1','','','2024-04-14 00:40:33','2024-04-14 00:40:33','',130,'http://localhost:8080/?p=131',0,'revision','',0),
(132,1,'2024-04-14 00:40:45','2024-04-14 00:40:45','ai ai','oi oi','aiiiiii','trash','open','open','','oi-oi-4__trashed','','','2024-04-14 01:49:27','2024-04-14 01:49:27','',0,'http://localhost:8080/?p=132',0,'post','',0),
(133,1,'2024-04-14 00:40:45','2024-04-14 00:40:45','ai ai','oi oi','aiiiiii','inherit','closed','closed','','132-revision-v1','','','2024-04-14 00:40:45','2024-04-14 00:40:45','',132,'http://localhost:8080/?p=133',0,'revision','',0),
(134,1,'2024-04-14 01:43:52','2024-04-14 01:43:52','','wsrfvsrfgd','2323.23','trash','open','open','','wsrfvsrfgd__trashed','','','2024-04-14 01:49:27','2024-04-14 01:49:27','',0,'http://localhost:8080/?p=134',0,'post','',0),
(135,1,'2024-04-14 01:43:52','2024-04-14 01:43:52','','wsrfvsrfgd','2323.23','inherit','closed','closed','','134-revision-v1','','','2024-04-14 01:43:52','2024-04-14 01:43:52','',134,'http://localhost:8080/?p=135',0,'revision','',0),
(136,1,'2024-04-14 01:45:55','2024-04-14 01:45:55','','upa upa','69.69','trash','open','open','','upa-upa__trashed','','','2024-04-14 01:49:27','2024-04-14 01:49:27','',0,'http://localhost:8080/?p=136',0,'post','',0),
(137,1,'2024-04-14 01:45:55','2024-04-14 01:45:55','','upa upa','69.69','inherit','closed','closed','','136-revision-v1','','','2024-04-14 01:45:55','2024-04-14 01:45:55','',136,'http://localhost:8080/?p=137',0,'revision','',0),
(138,1,'2024-04-14 01:48:27','2024-04-14 01:48:27','420.69','upa upawerfwef','420.69','trash','open','open','','upa-upawerfwef__trashed','','','2024-04-21 01:04:51','2024-04-21 01:04:51','',0,'http://localhost:8080/?p=138',0,'post','',0),
(139,1,'2024-04-14 01:48:27','2024-04-14 01:48:27','420.69','upa upawerfwef','420.69','inherit','closed','closed','','138-revision-v1','','','2024-04-14 01:48:27','2024-04-14 01:48:27','',138,'http://localhost:8080/?p=139',0,'revision','',0),
(140,1,'2024-04-14 16:07:05','2024-04-14 16:07:05','234234','3232wefsedf','234234','trash','open','open','','3232wefsedf__trashed','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',0,'http://localhost:8080/?p=140',0,'post','',0),
(141,1,'2024-04-14 16:07:05','2024-04-14 16:07:05','234234','3232wefsedf','234234','inherit','closed','closed','','140-revision-v1','','','2024-04-14 16:07:05','2024-04-14 16:07:05','',140,'http://localhost:8080/?p=141',0,'revision','',0),
(142,1,'2024-04-15 18:25:52','2024-04-15 18:25:52','235235235','23523rwerg','235235235','trash','open','open','','23523rwerg__trashed','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',0,'http://localhost:8080/?p=142',0,'post','',0),
(143,1,'2024-04-15 18:25:52','2024-04-15 18:25:52','235235235','23523rwerg','235235235','inherit','closed','closed','','142-revision-v1','','','2024-04-15 18:25:52','2024-04-15 18:25:52','',142,'http://localhost:8080/?p=143',0,'revision','',0),
(144,1,'2024-04-15 18:26:50','2024-04-15 18:26:50','236236235','sdfsarfdaszdf','236236235','trash','open','open','','sdfsarfdaszdf__trashed','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',0,'http://localhost:8080/?p=144',0,'post','',0),
(145,1,'2024-04-15 18:26:50','2024-04-15 18:26:50','236236235','sdfsarfdaszdf','236236235','inherit','closed','closed','','144-revision-v1','','','2024-04-15 18:26:50','2024-04-15 18:26:50','',144,'http://localhost:8080/?p=145',0,'revision','',0),
(151,1,'2024-04-15 18:42:16','2024-04-15 18:42:16','wefwefwef','q3rtqwtqwt','','trash','open','open','','q3rtqwtqwt__trashed','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',0,'http://localhost:8080/posts/q3rtqwtqwt/',0,'post','',0),
(152,1,'2024-04-15 18:43:02','2024-04-15 18:43:02','wefwefwef','aaaaaaaa','','trash','open','open','','aaaaaaaa__trashed','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',0,'http://localhost:8080/posts/aaaaaaaa/',0,'post','',0),
(153,1,'2024-04-15 18:43:48','2024-04-15 18:43:48','wefwefwef','5432','','trash','open','open','','5432__trashed','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',0,'http://localhost:8080/posts/5432/',0,'post','',0),
(154,1,'2024-04-15 18:44:59','2024-04-15 18:44:59','wefwefwef','drgfdvsazdvszxfvc. sdfgvc','','trash','open','open','','drgfdvsazdvszxfvc-sdfgvc__trashed','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',0,'http://localhost:8080/posts/drgfdvsazdvszxfvc-sdfgvc/',0,'post','',0),
(155,1,'2024-04-15 18:47:59','2024-04-15 18:47:59','wefwefwef','rtgfd','','trash','open','open','','rtgfd__trashed','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',0,'http://localhost:8080/posts/rtgfd/',0,'post','',0),
(156,1,'2024-04-15 18:48:18','2024-04-15 18:48:18','wefwefwef','rtgfd','','trash','open','open','','rtgfd-2__trashed','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',0,'http://localhost:8080/posts/rtgfd-2/',0,'post','',0),
(157,1,'2024-04-15 18:48:23','2024-04-15 18:48:23','wefwefwef','rtgfd','','trash','open','open','','rtgfd-3__trashed','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',0,'http://localhost:8080/posts/rtgfd-3/',0,'post','',0),
(252,1,'2024-04-16 18:19:38','2024-04-16 18:19:38','a:14:{s:10:\"aria-label\";s:0:\"\";s:4:\"type\";s:5:\"radio\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:1;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:15:\"show_in_graphql\";i:1;s:7:\"choices\";a:2:{s:6:\"income\";s:6:\"income\";s:7:\"outcome\";s:7:\"outcome\";}s:13:\"default_value\";s:6:\"income\";s:13:\"return_format\";s:5:\"array\";s:10:\"allow_null\";i:0;s:12:\"other_choice\";i:0;s:6:\"layout\";s:8:\"vertical\";s:17:\"save_other_choice\";i:0;}','Type','type','publish','closed','closed','','field_661ec08f58127','','','2024-04-19 22:16:48','2024-04-19 22:16:48','',50,'http://localhost:8080/?post_type=acf-field&#038;p=252',1,'acf-field','',0),
(254,1,'2024-04-16 18:32:06','0000-00-00 00:00:00','','Auto Draft','','auto-draft','closed','closed','','','','','2024-04-16 18:32:06','0000-00-00 00:00:00','',0,'http://localhost:8080/?post_type=expense&p=254',0,'expense','',0),
(261,1,'2024-04-19 19:46:33','0000-00-00 00:00:00','','Auto Draft','','auto-draft','open','open','','','','','2024-04-19 19:46:33','0000-00-00 00:00:00','',0,'http://localhost:3000/post/4rtegfdds-3',0,'post','',0),
(279,1,'2024-04-17 20:00:00','2024-04-17 20:00:00','','New Guitar','','trash','closed','closed','','new-guitar__trashed','','','2024-04-23 16:55:03','2024-04-23 16:55:03','',0,'http://localhost:8080/posts/expense/new-guitar/',0,'expense','',0),
(280,1,'2024-01-30 23:00:00','2024-01-30 23:00:00','','Salary','','trash','closed','closed','','salary__trashed','','','2024-04-23 19:10:03','2024-04-23 19:10:03','',0,'http://localhost:8080/posts/expense/sallary/',0,'expense','',0),
(301,1,'2024-04-21 01:04:58','2024-04-21 01:04:58','wefwefwef','rtgfd','','inherit','closed','closed','','157-revision-v1','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',157,'http://localhost:8080/?p=301',0,'revision','',0),
(302,1,'2024-04-21 01:04:58','2024-04-21 01:04:58','wefwefwef','rtgfd','','inherit','closed','closed','','156-revision-v1','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',156,'http://localhost:8080/?p=302',0,'revision','',0),
(303,1,'2024-04-21 01:04:58','2024-04-21 01:04:58','wefwefwef','rtgfd','','inherit','closed','closed','','155-revision-v1','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',155,'http://localhost:8080/?p=303',0,'revision','',0),
(304,1,'2024-04-21 01:04:58','2024-04-21 01:04:58','wefwefwef','drgfdvsazdvszxfvc. sdfgvc','','inherit','closed','closed','','154-revision-v1','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',154,'http://localhost:8080/?p=304',0,'revision','',0),
(305,1,'2024-04-21 01:04:58','2024-04-21 01:04:58','wefwefwef','5432','','inherit','closed','closed','','153-revision-v1','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',153,'http://localhost:8080/?p=305',0,'revision','',0),
(306,1,'2024-04-21 01:04:58','2024-04-21 01:04:58','wefwefwef','aaaaaaaa','','inherit','closed','closed','','152-revision-v1','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',152,'http://localhost:8080/?p=306',0,'revision','',0),
(307,1,'2024-04-21 01:04:58','2024-04-21 01:04:58','wefwefwef','q3rtqwtqwt','','inherit','closed','closed','','151-revision-v1','','','2024-04-21 01:04:58','2024-04-21 01:04:58','',151,'http://localhost:8080/?p=307',0,'revision','',0),
(308,1,'2024-04-21 01:12:32','2024-04-21 01:12:32','<!-- wp:paragraph -->\n<p>In this in-depth interview, we delve deep into the fascinating world of Web3 gaming with Paulo Pinho. Drawing from his extensive experience at RealFevr, a leading Portuguese Web3 Gaming company, Paulo shares valuable insights into the convergence of blockchain technology and gaming. From NFT marketplaces to smart contracts, Paulo provides a comprehensive overview of the innovative developments reshaping the gaming industry.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the conversation, Paulo emphasizes the transformative potential of Web3 technologies, highlighting their ability to empower gamers and developers alike. He discusses the challenges and opportunities inherent in building decentralized gaming platforms, and shares his vision for the future of gaming on the blockchain.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As a seasoned Frontend Web Developer with a strong background in React.js and Next.js, Paulo brings a unique perspective to the discussion. He explores the role of frontend frameworks in creating immersive gaming experiences, and explains how his expertise enables him to contribute to cutting-edge projects in the Web3 space.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Join us as we embark on a thought-provoking journey into the dynamic intersection of Web3 and gaming with Paulo Pinho.</p>\n<!-- /wp:paragraph -->','Exploring the Intersection of Web3 and Gaming','','publish','open','open','','exploring-the-intersection-of-web3-and-gaming','','','2024-04-21 01:18:15','2024-04-21 01:18:15','',0,'http://localhost:8080/?p=308',0,'post','',0),
(309,1,'2024-04-21 01:12:32','2024-04-21 01:12:32','<!-- wp:paragraph -->\n<p>In this in-depth interview, we delve deep into the fascinating world of Web3 gaming with Paulo Pinho. Drawing from his extensive experience at RealFevr, a leading Portuguese Web3 Gaming company, Paulo shares valuable insights into the convergence of blockchain technology and gaming. From NFT marketplaces to smart contracts, Paulo provides a comprehensive overview of the innovative developments reshaping the gaming industry.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the conversation, Paulo emphasizes the transformative potential of Web3 technologies, highlighting their ability to empower gamers and developers alike. He discusses the challenges and opportunities inherent in building decentralized gaming platforms, and shares his vision for the future of gaming on the blockchain.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As a seasoned Frontend Web Developer with a strong background in React.js and Next.js, Paulo brings a unique perspective to the discussion. He explores the role of frontend frameworks in creating immersive gaming experiences, and explains how his expertise enables him to contribute to cutting-edge projects in the Web3 space.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Join us as we embark on a thought-provoking journey into the dynamic intersection of Web3 and gaming with Paulo Pinho.</p>\n<!-- /wp:paragraph -->','Exploring the Intersection of Web3 and Gaming','','inherit','closed','closed','','308-revision-v1','','','2024-04-21 01:12:32','2024-04-21 01:12:32','',308,'http://localhost:8080/?p=309',0,'revision','',0),
(310,1,'2024-04-21 01:18:03','2024-04-21 01:18:03','','article5','','inherit','open','closed','','article5','','','2024-04-21 01:18:03','2024-04-21 01:18:03','',308,'http://localhost:8080/wp-content/uploads/2024/04/article5.jpg',0,'attachment','image/jpeg',0),
(311,1,'2024-04-21 01:18:04','2024-04-21 01:18:04','','article4','','inherit','open','closed','','article4','','','2024-04-21 01:18:04','2024-04-21 01:18:04','',308,'http://localhost:8080/wp-content/uploads/2024/04/article4.jpg',0,'attachment','image/jpeg',0),
(312,1,'2024-04-21 01:18:04','2024-04-21 01:18:04','','article3','','inherit','open','closed','','article3','','','2024-04-21 01:18:04','2024-04-21 01:18:04','',308,'http://localhost:8080/wp-content/uploads/2024/04/article3.jpg',0,'attachment','image/jpeg',0),
(313,1,'2024-04-21 01:18:04','2024-04-21 01:18:04','','article2','','inherit','open','closed','','article2','','','2024-04-21 01:18:04','2024-04-21 01:18:04','',308,'http://localhost:8080/wp-content/uploads/2024/04/article2.jpg',0,'attachment','image/jpeg',0),
(314,1,'2024-04-21 01:18:04','2024-04-21 01:18:04','','article1','','inherit','open','closed','','article1','','','2024-04-21 01:18:04','2024-04-21 01:18:04','',308,'http://localhost:8080/wp-content/uploads/2024/04/article1.jpg',0,'attachment','image/jpeg',0),
(315,1,'2024-04-21 01:19:07','2024-04-21 01:19:07','<!-- wp:paragraph -->\n<p><strong><br>1. Exploring the Intersection of Web3 and Gaming: A Conversation with Paulo Pinho</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In this in-depth interview, we delve deep into the fascinating world of Web3 gaming with Paulo Pinho. Drawing from his extensive experience at RealFevr, a leading Portuguese Web3 Gaming company, Paulo shares valuable insights into the convergence of blockchain technology and gaming. From NFT marketplaces to smart contracts, Paulo provides a comprehensive overview of the innovative developments reshaping the gaming industry.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the conversation, Paulo emphasizes the transformative potential of Web3 technologies, highlighting their ability to empower gamers and developers alike. He discusses the challenges and opportunities inherent in building decentralized gaming platforms, and shares his vision for the future of gaming on the blockchain.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As a seasoned Frontend Web Developer with a strong background in React.js and Next.js, Paulo brings a unique perspective to the discussion. He explores the role of frontend frameworks in creating immersive gaming experiences, and explains how his expertise enables him to contribute to cutting-edge projects in the Web3 space.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Join us as we embark on a thought-provoking journey into the dynamic intersection of Web3 and gaming with Paulo Pinho.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>2. Building User-Friendly Web Applications with Next.js: Insights from Paulo Pinho</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In this insightful article, we dive deep into the art of crafting user-friendly web applications with Next.js alongside Paulo Pinho. Drawing from his extensive experience at RealFevr and as a freelance developer, Paulo shares valuable tips and strategies for building intuitive and responsive web experiences.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the article, Paulo emphasizes the importance of user-centric design and accessibility in web development. He discusses his approach to creating seamless user experiences, leveraging the power of Next.js to deliver high-performance web applications across devices and platforms.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>From frontend frameworks to eCommerce integrations, Paulo offers practical advice for developers looking to elevate their skills in Next.js development. He explores the role of Next.js in accelerating development workflows and streamlining the creation of complex web applications.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Join us as we uncover the secrets behind Paulo\'s success in building user-friendly web applications with Next.js, and gain valuable insights into the future of frontend development.</p>\n<!-- /wp:paragraph -->','Building User-Friendly Web Applications with Next.js','','publish','open','open','','building-user-friendly-web-applications-with-next-js','','','2024-04-21 01:19:07','2024-04-21 01:19:07','',0,'http://localhost:8080/?p=315',0,'post','',0),
(316,1,'2024-04-21 01:19:07','2024-04-21 01:19:07','<!-- wp:paragraph -->\n<p><strong><br>1. Exploring the Intersection of Web3 and Gaming: A Conversation with Paulo Pinho</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In this in-depth interview, we delve deep into the fascinating world of Web3 gaming with Paulo Pinho. Drawing from his extensive experience at RealFevr, a leading Portuguese Web3 Gaming company, Paulo shares valuable insights into the convergence of blockchain technology and gaming. From NFT marketplaces to smart contracts, Paulo provides a comprehensive overview of the innovative developments reshaping the gaming industry.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the conversation, Paulo emphasizes the transformative potential of Web3 technologies, highlighting their ability to empower gamers and developers alike. He discusses the challenges and opportunities inherent in building decentralized gaming platforms, and shares his vision for the future of gaming on the blockchain.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As a seasoned Frontend Web Developer with a strong background in React.js and Next.js, Paulo brings a unique perspective to the discussion. He explores the role of frontend frameworks in creating immersive gaming experiences, and explains how his expertise enables him to contribute to cutting-edge projects in the Web3 space.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Join us as we embark on a thought-provoking journey into the dynamic intersection of Web3 and gaming with Paulo Pinho.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>2. Building User-Friendly Web Applications with Next.js: Insights from Paulo Pinho</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In this insightful article, we dive deep into the art of crafting user-friendly web applications with Next.js alongside Paulo Pinho. Drawing from his extensive experience at RealFevr and as a freelance developer, Paulo shares valuable tips and strategies for building intuitive and responsive web experiences.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the article, Paulo emphasizes the importance of user-centric design and accessibility in web development. He discusses his approach to creating seamless user experiences, leveraging the power of Next.js to deliver high-performance web applications across devices and platforms.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>From frontend frameworks to eCommerce integrations, Paulo offers practical advice for developers looking to elevate their skills in Next.js development. He explores the role of Next.js in accelerating development workflows and streamlining the creation of complex web applications.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Join us as we uncover the secrets behind Paulo\'s success in building user-friendly web applications with Next.js, and gain valuable insights into the future of frontend development.</p>\n<!-- /wp:paragraph -->','Building User-Friendly Web Applications with Next.js','','inherit','closed','closed','','315-revision-v1','','','2024-04-21 01:19:07','2024-04-21 01:19:07','',315,'http://localhost:8080/?p=316',0,'revision','',0),
(317,1,'2024-04-21 01:19:43','2024-04-21 01:19:43','<!-- wp:paragraph -->\n<p>In this illuminating interview, we sit down with Paulo Pinho to explore the dynamic landscape of Web3 and blockchain technology. Drawing from his diverse background in frontend development and blockchain integration, Paulo provides valuable insights into the opportunities and challenges facing developers in the Web3 space.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the conversation, Paulo shares his journey from RealFevr to freelance projects, highlighting the lessons learned and the skills acquired along the way. He discusses the evolving role of blockchain technology in reshaping industries beyond gaming, from finance to supply chain management.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As a passionate advocate for staying updated with the latest trends in frontend development, Paulo offers practical advice for developers looking to thrive in the fast-paced world of Web3. He emphasizes the importance of continuous learning and experimentation, and shares his tips for navigating the rapidly evolving landscape of blockchain technology.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Join us as we embark on a captivating exploration of Web3 with Paulo Pinho, and discover the exciting possibilities that lie ahead in the world of decentralized applications.</p>\n<!-- /wp:paragraph -->','Navigating the World of Web3','','publish','open','open','','navigating-the-world-of-web3','','','2024-04-21 01:20:06','2024-04-21 01:20:06','',0,'http://localhost:8080/?p=317',0,'post','',0),
(318,1,'2024-04-21 01:19:43','2024-04-21 01:19:43','<!-- wp:paragraph -->\n<p>In this illuminating interview, we sit down with Paulo Pinho to explore the dynamic landscape of Web3 and blockchain technology. Drawing from his diverse background in frontend development and blockchain integration, Paulo provides valuable insights into the opportunities and challenges facing developers in the Web3 space.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the conversation, Paulo shares his journey from RealFevr to freelance projects, highlighting the lessons learned and the skills acquired along the way. He discusses the evolving role of blockchain technology in reshaping industries beyond gaming, from finance to supply chain management.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As a passionate advocate for staying updated with the latest trends in frontend development, Paulo offers practical advice for developers looking to thrive in the fast-paced world of Web3. He emphasizes the importance of continuous learning and experimentation, and shares his tips for navigating the rapidly evolving landscape of blockchain technology.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Join us as we embark on a captivating exploration of Web3 with Paulo Pinho, and discover the exciting possibilities that lie ahead in the world of decentralized applications.</p>\n<!-- /wp:paragraph -->','Navigating the World of Web3','','inherit','closed','closed','','317-revision-v1','','','2024-04-21 01:19:43','2024-04-21 01:19:43','',317,'http://localhost:8080/?p=318',0,'revision','',0),
(319,1,'2024-04-21 01:20:35','2024-04-21 01:20:35','<!-- wp:paragraph -->\n<p>In this captivating profile, we shine a spotlight on Paulo Pinho, a dynamic Frontend Web Developer known for his expertise in crafting cutting-edge web experiences. Drawing from his impressive portfolio of user-friendly and responsive web applications, Paulo shares his journey from RealFevr to freelance projects, and reflects on the skills and experiences that have shaped his career.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the article, Paulo showcases his proficiency in HTML, JS &amp; TypeScript, CSS methodologies, and testing, highlighting his commitment to delivering high-quality solutions that exceed client expectations. He discusses the importance of collaboration and creativity in web development, and shares his passion for staying updated with the latest trends and technologies in the field.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>From his innovative approach to frontend frameworks to his dedication to user-centric design, Paulo exemplifies the qualities of a modern web developer. Join us as we explore Paulo\'s inspiring journey and gain valuable insights into the art of crafting cutting-edge web experiences.</p>\n<!-- /wp:paragraph -->','Crafting Cutting-Edge Web Experiences','','publish','open','open','','crafting-cutting-edge-web-experiences','','','2024-04-21 01:20:35','2024-04-21 01:20:35','',0,'http://localhost:8080/?p=319',0,'post','',0),
(320,1,'2024-04-21 01:20:35','2024-04-21 01:20:35','<!-- wp:paragraph -->\n<p>In this captivating profile, we shine a spotlight on Paulo Pinho, a dynamic Frontend Web Developer known for his expertise in crafting cutting-edge web experiences. Drawing from his impressive portfolio of user-friendly and responsive web applications, Paulo shares his journey from RealFevr to freelance projects, and reflects on the skills and experiences that have shaped his career.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the article, Paulo showcases his proficiency in HTML, JS &amp; TypeScript, CSS methodologies, and testing, highlighting his commitment to delivering high-quality solutions that exceed client expectations. He discusses the importance of collaboration and creativity in web development, and shares his passion for staying updated with the latest trends and technologies in the field.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>From his innovative approach to frontend frameworks to his dedication to user-centric design, Paulo exemplifies the qualities of a modern web developer. Join us as we explore Paulo\'s inspiring journey and gain valuable insights into the art of crafting cutting-edge web experiences.</p>\n<!-- /wp:paragraph -->','Crafting Cutting-Edge Web Experiences','','inherit','closed','closed','','319-revision-v1','','','2024-04-21 01:20:35','2024-04-21 01:20:35','',319,'http://localhost:8080/?p=320',0,'revision','',0),
(321,1,'2024-04-21 01:21:08','2024-04-21 01:21:08','<!-- wp:paragraph -->\n<p>In this compelling piece, we explore the value of collaborating with Paulo Pinho, a versatile Fullstack Developer with a proven track record of success. Drawing from his experience at RealFevr and as a freelance developer, Paulo shares his insights into the importance of adaptability and collaboration in today\'s fast-paced technological environments.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the article, Paulo discusses his ability to seamlessly integrate into diverse teams and adapt to evolving project requirements. He emphasizes his proficiency in frontend frameworks, Wordpress, eCommerce, and blockchain technology, highlighting his ability to contribute to a wide range of projects across industries.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>From his strong communication skills to his commitment to delivering high-quality solutions on time and within budget, Paulo exemplifies the qualities of a reliable and trustworthy collaborator. Whether working on freelance projects or within a team environment, Paulo\'s passion for frontend development and his dedication to continuous learning make him a valuable asset to any project.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Join us as we explore the benefits of collaborating with Paulo Pinho, and discover how his expertise can help take your projects to the next level.</p>\n<!-- /wp:paragraph -->','Collaborating with Confidence: Partnering with Paulo Pinho','','publish','open','open','','collaborating-with-confidence-partnering-with-paulo-pinho','','','2024-04-21 01:21:08','2024-04-21 01:21:08','',0,'http://localhost:8080/?p=321',0,'post','',0),
(322,1,'2024-04-21 01:21:08','2024-04-21 01:21:08','<!-- wp:paragraph -->\n<p>In this compelling piece, we explore the value of collaborating with Paulo Pinho, a versatile Fullstack Developer with a proven track record of success. Drawing from his experience at RealFevr and as a freelance developer, Paulo shares his insights into the importance of adaptability and collaboration in today\'s fast-paced technological environments.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the article, Paulo discusses his ability to seamlessly integrate into diverse teams and adapt to evolving project requirements. He emphasizes his proficiency in frontend frameworks, Wordpress, eCommerce, and blockchain technology, highlighting his ability to contribute to a wide range of projects across industries.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>From his strong communication skills to his commitment to delivering high-quality solutions on time and within budget, Paulo exemplifies the qualities of a reliable and trustworthy collaborator. Whether working on freelance projects or within a team environment, Paulo\'s passion for frontend development and his dedication to continuous learning make him a valuable asset to any project.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Join us as we explore the benefits of collaborating with Paulo Pinho, and discover how his expertise can help take your projects to the next level.</p>\n<!-- /wp:paragraph -->','Collaborating with Confidence: Partnering with Paulo Pinho','','inherit','closed','closed','','321-revision-v1','','','2024-04-21 01:21:08','2024-04-21 01:21:08','',321,'http://localhost:8080/?p=322',0,'revision','',0),
(323,1,'2024-04-21 01:24:40','2024-04-21 01:24:40','<!-- wp:paragraph -->\n<p>In this comprehensive guide, we dive into the world of modern UI design with Tailwind CSS and shadcn/ui. Join us as we explore the powerful features of Tailwind CSS, a utility-first CSS framework, and discover how shadcn/ui enhances the development experience with its collection of customizable UI components.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the article, we provide practical examples and step-by-step tutorials for creating stunning user interfaces using Tailwind CSS and shadcn/ui. From responsive layouts to dynamic components, we cover everything you need to know to elevate your UI design skills to the next level.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Whether you\'re a seasoned developer looking to streamline your workflow or a newcomer eager to learn the latest techniques in UI design, this guide has something for everyone. Join us on a journey of creativity and innovation as we master modern UI design with Tailwind CSS and shadcn/ui.</p>\n<!-- /wp:paragraph -->','Mastering Modern UI Design with Tailwind CSS and shadcn/ui','','publish','open','open','','mastering-modern-ui-design-with-tailwind-css-and-shadcn-ui','','','2024-04-21 01:24:40','2024-04-21 01:24:40','',0,'http://localhost:8080/?p=323',0,'post','',0),
(324,1,'2024-04-21 01:24:32','2024-04-21 01:24:32','','article8','','inherit','open','closed','','article8','','','2024-04-21 01:24:32','2024-04-21 01:24:32','',323,'http://localhost:8080/wp-content/uploads/2024/04/article8.jpg',0,'attachment','image/jpeg',0),
(325,1,'2024-04-21 01:24:32','2024-04-21 01:24:32','','article7','','inherit','open','closed','','article7','','','2024-04-21 01:24:32','2024-04-21 01:24:32','',323,'http://localhost:8080/wp-content/uploads/2024/04/article7.jpg',0,'attachment','image/jpeg',0),
(326,1,'2024-04-21 01:24:32','2024-04-21 01:24:32','','article6','','inherit','open','closed','','article6','','','2024-04-21 01:24:32','2024-04-21 01:24:32','',323,'http://localhost:8080/wp-content/uploads/2024/04/article6.jpg',0,'attachment','image/jpeg',0),
(327,1,'2024-04-21 01:24:40','2024-04-21 01:24:40','<!-- wp:paragraph -->\n<p>In this comprehensive guide, we dive into the world of modern UI design with Tailwind CSS and shadcn/ui. Join us as we explore the powerful features of Tailwind CSS, a utility-first CSS framework, and discover how shadcn/ui enhances the development experience with its collection of customizable UI components.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the article, we provide practical examples and step-by-step tutorials for creating stunning user interfaces using Tailwind CSS and shadcn/ui. From responsive layouts to dynamic components, we cover everything you need to know to elevate your UI design skills to the next level.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Whether you\'re a seasoned developer looking to streamline your workflow or a newcomer eager to learn the latest techniques in UI design, this guide has something for everyone. Join us on a journey of creativity and innovation as we master modern UI design with Tailwind CSS and shadcn/ui.</p>\n<!-- /wp:paragraph -->','Mastering Modern UI Design with Tailwind CSS and shadcn/ui','','inherit','closed','closed','','323-revision-v1','','','2024-04-21 01:24:40','2024-04-21 01:24:40','',323,'http://localhost:8080/?p=327',0,'revision','',0),
(328,1,'2024-04-21 01:25:08','2024-04-21 01:25:08','<!-- wp:paragraph -->\n<p>In this groundbreaking article, we explore the integration of NextAuth.js, Zustand, and Three.js to build secure and immersive authentication systems. Join us as we combine the power of NextAuth.js for authentication, Zustand for state management, and Three.js for 3D visualization to create a seamless user experience.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the article, we provide detailed tutorials and best practices for integrating these technologies into your projects. From setting up authentication flows to managing complex state logic and rendering interactive 3D scenes, we cover everything you need to know to build robust and engaging authentication systems.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Whether you\'re developing a single-page application or a full-fledged immersive experience, this article provides the insights and tools you need to succeed. Join us as we push the boundaries of authentication technology with NextAuth.js, Zustand, and Three.js.</p>\n<!-- /wp:paragraph -->','Building Secure Authentication Systems with NextAuth.js, Zustand, and Three.js','','publish','open','open','','building-secure-authentication-systems-with-nextauth-js-zustand-and-three-js','','','2024-04-21 01:25:08','2024-04-21 01:25:08','',0,'http://localhost:8080/?p=328',0,'post','',0),
(329,1,'2024-04-21 01:25:08','2024-04-21 01:25:08','<!-- wp:paragraph -->\n<p>In this groundbreaking article, we explore the integration of NextAuth.js, Zustand, and Three.js to build secure and immersive authentication systems. Join us as we combine the power of NextAuth.js for authentication, Zustand for state management, and Three.js for 3D visualization to create a seamless user experience.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the article, we provide detailed tutorials and best practices for integrating these technologies into your projects. From setting up authentication flows to managing complex state logic and rendering interactive 3D scenes, we cover everything you need to know to build robust and engaging authentication systems.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Whether you\'re developing a single-page application or a full-fledged immersive experience, this article provides the insights and tools you need to succeed. Join us as we push the boundaries of authentication technology with NextAuth.js, Zustand, and Three.js.</p>\n<!-- /wp:paragraph -->','Building Secure Authentication Systems with NextAuth.js, Zustand, and Three.js','','inherit','closed','closed','','328-revision-v1','','','2024-04-21 01:25:08','2024-04-21 01:25:08','',328,'http://localhost:8080/?p=329',0,'revision','',0),
(330,1,'2024-04-21 01:25:44','2024-04-21 01:25:44','<!-- wp:paragraph -->\n<p>In this groundbreaking exploration, we delve into the world of content management with Wordpress ACF, Custom Post Types, and REST and GraphQL API. Join us as we uncover the power of these technologies to create flexible and scalable content management solutions for the modern web.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the article, we provide practical examples and tutorials for setting up custom post types, defining custom fields with ACF, and exposing content through REST and GraphQL APIs. From creating custom dashboards to managing complex data structures, we cover everything you need to know to harness the full potential of Wordpress for content management.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Whether you\'re building a personal blog, an e-commerce platform, or a corporate website, this article provides the insights and tools you need to succeed. Join us as we empower content creators and developers alike with Wordpress ACF, Custom Post Types, and REST and GraphQL API.</p>\n<!-- /wp:paragraph -->','Empowering Content Management with Wordpress ACF, Custom Post Types, and REST and GraphQL API','','publish','open','open','','empowering-content-management-with-wordpress-acf-custom-post-types-and-rest-and-graphql-api','','','2024-04-21 01:25:44','2024-04-21 01:25:44','',0,'http://localhost:8080/?p=330',0,'post','',0),
(331,1,'2024-04-21 01:25:44','2024-04-21 01:25:44','<!-- wp:paragraph -->\n<p>In this groundbreaking exploration, we delve into the world of content management with Wordpress ACF, Custom Post Types, and REST and GraphQL API. Join us as we uncover the power of these technologies to create flexible and scalable content management solutions for the modern web.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Throughout the article, we provide practical examples and tutorials for setting up custom post types, defining custom fields with ACF, and exposing content through REST and GraphQL APIs. From creating custom dashboards to managing complex data structures, we cover everything you need to know to harness the full potential of Wordpress for content management.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Whether you\'re building a personal blog, an e-commerce platform, or a corporate website, this article provides the insights and tools you need to succeed. Join us as we empower content creators and developers alike with Wordpress ACF, Custom Post Types, and REST and GraphQL API.</p>\n<!-- /wp:paragraph -->','Empowering Content Management with Wordpress ACF, Custom Post Types, and REST and GraphQL API','','inherit','closed','closed','','330-revision-v1','','','2024-04-21 01:25:44','2024-04-21 01:25:44','',330,'http://localhost:8080/?p=331',0,'revision','',0),
(345,1,'2024-04-08 23:00:00','2024-04-08 23:00:00','','Bread Light','','publish','closed','closed','','bread','','','2024-04-23 15:31:23','2024-04-23 15:31:23','',0,'http://localhost:8080/posts/expense/bread/',0,'expense','',0),
(346,1,'2024-04-01 23:00:00','2024-04-01 23:00:00','','Pasta','','publish','closed','closed','','pasta','','','2024-04-01 23:00:00','2024-04-01 23:00:00','',0,'http://localhost:8080/posts/expense/pasta/',0,'expense','',0),
(347,1,'2024-03-07 00:00:00','2024-03-07 00:00:00','','Car','','publish','closed','closed','','car','','','2024-03-07 00:00:00','2024-03-07 00:00:00','',0,'http://localhost:8080/posts/expense/car/',0,'expense','',0),
(348,1,'2024-03-31 23:00:00','2024-03-31 23:00:00','','Music Gig','','publish','closed','closed','','music-gig','','','2024-03-31 23:00:00','2024-03-31 23:00:00','',0,'http://localhost:8080/posts/expense/music-gig/',0,'expense','',0),
(349,1,'2024-04-10 23:00:00','2024-04-10 23:00:00','','Gig with Bong Kong','','publish','closed','closed','','gig-with-bong-kong','','','2024-04-10 23:00:00','2024-04-10 23:00:00','',0,'http://localhost:8080/posts/expense/gig-with-bong-kong/',0,'expense','',0),
(350,1,'2024-04-09 23:00:00','2024-04-09 23:00:00','','Bass strings','','publish','closed','closed','','bass-strings','','','2024-04-09 23:00:00','2024-04-09 23:00:00','',0,'http://localhost:8080/posts/expense/bass-strings/',0,'expense','',0),
(351,1,'2024-03-14 23:00:00','2024-03-14 23:00:00','','Bitcoin Selling','','publish','closed','closed','','bitcoin-selling','','','2024-04-23 16:21:04','2024-04-23 16:21:04','',0,'http://localhost:8080/?post_type=expense&#038;p=351',0,'expense','',0),
(352,1,'2024-03-13 00:00:00','2024-03-13 00:00:00','','Bitcoin Selling','','publish','closed','closed','','bitcoin-selling-2','','','2024-04-23 16:55:55','2024-04-23 16:55:55','',0,'http://localhost:8080/?post_type=expense&#038;p=352',0,'expense','',0),
(353,1,'2023-11-06 00:00:00','2023-11-06 00:00:00','','Mechanic','','publish','closed','closed','','mechanic','','','2023-11-06 00:00:00','2023-11-06 00:00:00','',0,'http://localhost:8080/posts/expense/mechanic/',0,'expense','',0),
(354,1,'2024-04-15 23:00:00','2024-04-15 23:00:00','','Buy Ethereum','','publish','closed','closed','','buy-ethereum','','','2024-04-15 23:00:00','2024-04-15 23:00:00','',0,'http://localhost:8080/posts/expense/buy-ethereum/',0,'expense','',0),
(355,1,'2024-04-10 22:00:00','2024-04-10 22:00:00','','Royalties of Hot Dogtor','','publish','closed','closed','','royalties-of-hot-dogtor','','','2024-04-23 16:50:36','2024-04-23 16:50:36','',0,'http://localhost:8080/posts/expense/royalties-of-hot-dogtor/',0,'expense','',0),
(356,1,'2024-04-08 23:00:00','2024-04-08 23:00:00','','wefefaef','','trash','closed','closed','','wefefaef__trashed','','','2024-04-23 16:51:12','2024-04-23 16:51:12','',0,'http://localhost:8080/posts/expense/wefefaef/',0,'expense','',0),
(357,1,'2024-04-08 23:00:00','2024-04-08 23:00:00','','House at Gerês','','publish','closed','closed','','house-at-geres','','','2024-04-08 23:00:00','2024-04-08 23:00:00','',0,'http://localhost:8080/posts/expense/house-at-geres/',0,'expense','',0),
(358,1,'2024-02-01 00:00:00','2024-02-01 00:00:00','','Salary','','publish','closed','closed','','salary-2','','','2024-02-01 00:00:00','2024-02-01 00:00:00','',0,'http://localhost:8080/posts/expense/salary-2/',0,'expense','',0),
(359,1,'2023-12-31 00:00:00','2023-12-31 00:00:00','','Salary','','trash','closed','closed','','salary-3__trashed','','','2024-04-23 19:10:18','2024-04-23 19:10:18','',0,'http://localhost:8080/posts/expense/salary-3/',0,'expense','',0),
(360,1,'2024-04-09 23:00:00','2024-04-09 23:00:00','','asefsaef','','trash','closed','closed','','asefsaef__trashed','','','2024-04-23 16:58:20','2024-04-23 16:58:20','',0,'http://localhost:8080/posts/expense/asefsaef/',0,'expense','',0),
(361,1,'2024-04-22 23:00:00','2024-04-22 23:00:00','','Salary','','publish','closed','closed','','salary','','','2024-04-22 23:00:00','2024-04-22 23:00:00','',0,'http://localhost:8080/posts/expense/salary/',0,'expense','',0),
(362,1,'2024-04-22 23:00:00','2024-04-22 23:00:00','','Crypto selling','','publish','closed','closed','','crypto-selling','','','2024-04-22 23:00:00','2024-04-22 23:00:00','',0,'http://localhost:8080/posts/expense/crypto-selling/',0,'expense','',0);
/*!40000 ALTER TABLE `wp_posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_relationships`
--

DROP TABLE IF EXISTS `wp_term_relationships`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT 0,
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT 0,
  `term_order` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_relationships`
--

LOCK TABLES `wp_term_relationships` WRITE;
/*!40000 ALTER TABLE `wp_term_relationships` DISABLE KEYS */;
INSERT INTO `wp_term_relationships` VALUES
(1,1,0),
(12,2,0),
(13,2,0),
(15,8,0),
(16,8,0),
(17,8,0),
(39,2,0),
(55,1,0),
(55,3,0),
(55,4,0),
(55,8,0),
(55,9,0),
(65,12,0),
(79,40,0),
(81,40,0),
(82,40,0),
(83,40,0),
(84,40,0),
(85,40,0),
(86,40,0),
(87,40,0),
(88,40,0),
(89,40,0),
(90,40,0),
(91,40,0),
(92,40,0),
(93,40,0),
(94,40,0),
(95,40,0),
(96,40,0),
(97,40,0),
(98,40,0),
(99,40,0),
(100,40,0),
(101,41,0),
(102,40,0),
(103,40,0),
(104,40,0),
(105,40,0),
(106,40,0),
(107,40,0),
(108,40,0),
(109,40,0),
(110,40,0),
(111,40,0),
(112,40,0),
(116,1,0),
(117,1,0),
(118,1,0),
(119,1,0),
(120,1,0),
(121,1,0),
(128,1,0),
(130,1,0),
(132,1,0),
(134,1,0),
(136,1,0),
(138,1,0),
(140,1,0),
(142,1,0),
(144,1,0),
(151,1,0),
(152,1,0),
(153,1,0),
(154,1,0),
(155,1,0),
(156,1,0),
(157,1,0),
(279,73,0),
(280,67,0),
(308,68,0),
(315,68,0),
(317,68,0),
(319,68,0),
(321,68,0),
(323,68,0),
(328,68,0),
(330,68,0),
(345,11,0),
(346,8,0),
(347,4,0),
(348,65,0),
(349,65,0),
(350,65,0),
(351,71,0),
(352,71,0),
(353,73,0),
(354,71,0),
(355,65,0),
(356,11,0),
(357,3,0),
(358,67,0),
(359,67,0),
(360,11,0),
(361,67,0),
(362,71,0);
/*!40000 ALTER TABLE `wp_term_relationships` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_taxonomy`
--

DROP TABLE IF EXISTS `wp_term_taxonomy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT 0,
  `taxonomy` varchar(32) NOT NULL DEFAULT '',
  `description` longtext NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT 0,
  `count` bigint(20) NOT NULL DEFAULT 0,
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=InnoDB AUTO_INCREMENT=74 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_taxonomy`
--

LOCK TABLES `wp_term_taxonomy` WRITE;
/*!40000 ALTER TABLE `wp_term_taxonomy` DISABLE KEYS */;
INSERT INTO `wp_term_taxonomy` VALUES
(1,1,'category','',0,0),
(2,2,'nav_menu','',0,3),
(3,3,'category','',0,1),
(4,4,'category','',0,1),
(7,7,'category','',0,0),
(8,8,'category','',0,1),
(9,9,'category','',0,0),
(10,10,'category','',9,0),
(11,11,'category','',9,1),
(12,12,'wp_theme','',0,1),
(40,40,'graphql-endpoint-category','',0,0),
(41,41,'graphql-endpoint-category','',0,0),
(65,65,'category','',0,4),
(67,67,'category','',0,2),
(68,68,'category','',0,8),
(71,71,'category','',0,4),
(72,72,'category','',0,0),
(73,73,'category','',0,1);
/*!40000 ALTER TABLE `wp_term_taxonomy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_termmeta`
--

DROP TABLE IF EXISTS `wp_termmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_termmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT 0,
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext DEFAULT NULL,
  PRIMARY KEY (`meta_id`),
  KEY `term_id` (`term_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_termmeta`
--

LOCK TABLES `wp_termmeta` WRITE;
/*!40000 ALTER TABLE `wp_termmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_termmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_terms`
--

DROP TABLE IF EXISTS `wp_terms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL DEFAULT '',
  `slug` varchar(200) NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT 0,
  PRIMARY KEY (`term_id`),
  KEY `slug` (`slug`(191)),
  KEY `name` (`name`(191))
) ENGINE=InnoDB AUTO_INCREMENT=74 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_terms`
--

LOCK TABLES `wp_terms` WRITE;
/*!40000 ALTER TABLE `wp_terms` DISABLE KEYS */;
INSERT INTO `wp_terms` VALUES
(1,'Sample Category','uncategorized',0),
(2,'Header Menu','header-menu',0),
(3,'House','house',0),
(4,'Transportation','transportation',0),
(7,'Entertainment','entertainment',0),
(8,'Groceries','groceries',0),
(9,'Communications','communications',0),
(10,'Cellphone','cellphone',0),
(11,'Internet','internet',0),
(12,'twentytwentyfour','twentytwentyfour',0),
(40,'Admin','admin',0),
(41,'Webhook','webhook',0),
(65,'Music','music',0),
(67,'Work','work',0),
(68,'Programming','programming',0),
(71,'Crypto','crypto',0),
(72,'Health','health',0),
(73,'Car','car',0);
/*!40000 ALTER TABLE `wp_terms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_usermeta`
--

DROP TABLE IF EXISTS `wp_usermeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT 0,
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext DEFAULT NULL,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB AUTO_INCREMENT=58 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_usermeta`
--

LOCK TABLES `wp_usermeta` WRITE;
/*!40000 ALTER TABLE `wp_usermeta` DISABLE KEYS */;
INSERT INTO `wp_usermeta` VALUES
(1,1,'nickname','postlight'),
(2,1,'first_name',''),
(3,1,'last_name',''),
(4,1,'description',''),
(5,1,'rich_editing','true'),
(6,1,'syntax_highlighting','true'),
(7,1,'comment_shortcuts','false'),
(8,1,'admin_color','fresh'),
(9,1,'use_ssl','0'),
(10,1,'show_admin_bar_front','true'),
(11,1,'locale',''),
(12,1,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),
(13,1,'wp_user_level','10'),
(14,1,'dismissed_wp_pointers',''),
(15,1,'show_welcome_panel','1'),
(16,1,'session_tokens','a:1:{s:64:\"2fc02ee12dc3f826d4605e8356a551ecf17154974f16359a14ed9c93975e3f58\";a:4:{s:10:\"expiration\";i:1714001067;s:2:\"ip\";s:12:\"192.168.65.1\";s:2:\"ua\";s:117:\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\";s:5:\"login\";i:1712791467;}}'),
(17,1,'wp_dashboard_quick_press_last_post_id','261'),
(18,1,'community-events-location','a:1:{s:2:\"ip\";s:12:\"192.168.65.0\";}'),
(19,1,'manageedit-acf-post-typecolumnshidden','a:1:{i:0;s:7:\"acf-key\";}'),
(20,1,'acf_user_settings','a:3:{s:19:\"post-type-first-run\";b:1;s:20:\"taxonomies-first-run\";b:1;s:15:\"show_field_keys\";s:1:\"0\";}'),
(21,1,'wp_persisted_preferences','a:3:{s:14:\"core/edit-post\";a:3:{s:26:\"isComplementaryAreaVisible\";b:1;s:12:\"welcomeGuide\";b:0;s:14:\"fullscreenMode\";b:0;}s:4:\"core\";a:6:{s:10:\"openPanels\";a:5:{i:0;s:11:\"post-status\";i:1;s:14:\"featured-image\";i:2;s:31:\"taxonomy-panel-expense-category\";i:3;s:12:\"post-excerpt\";i:4;s:23:\"taxonomy-panel-category\";}s:15:\"distractionFree\";b:0;s:12:\"fixedToolbar\";b:0;s:10:\"editorMode\";s:6:\"visual\";s:9:\"focusMode\";b:0;s:21:\"showListViewByDefault\";b:0;}s:9:\"_modified\";s:24:\"2024-04-21T01:18:50.805Z\";}'),
(22,1,'wp_user-settings','libraryContent=browse&posts_list_mode=list'),
(23,1,'wp_user-settings-time','1713826495'),
(24,1,'graphql_jwt_auth_secret','graphql_jwt_661887e57bd3b'),
(25,1,'manageedit-acf-taxonomycolumnshidden','a:1:{i:0;s:7:\"acf-key\";}'),
(26,1,'closedpostboxes_expense','a:0:{}'),
(27,1,'metaboxhidden_expense','a:0:{}'),
(28,1,'edit_expense_per_page','50'),
(57,1,'edit_post_per_page','50');
/*!40000 ALTER TABLE `wp_usermeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_users`
--

DROP TABLE IF EXISTS `wp_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) NOT NULL DEFAULT '',
  `user_pass` varchar(255) NOT NULL DEFAULT '',
  `user_nicename` varchar(50) NOT NULL DEFAULT '',
  `user_email` varchar(100) NOT NULL DEFAULT '',
  `user_url` varchar(100) NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(255) NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT 0,
  `display_name` varchar(250) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`),
  KEY `user_email` (`user_email`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_users`
--

LOCK TABLES `wp_users` WRITE;
/*!40000 ALTER TABLE `wp_users` DISABLE KEYS */;
INSERT INTO `wp_users` VALUES
(1,'postlight','$P$BmT9flUN/5xFaxKLybTdnkkTRHQR6d/','postlight','postlight@example.com','http://localhost:8080','2024-04-10 23:22:40','',0,'postlight');
/*!40000 ALTER TABLE `wp_users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-04-23 19:32:29
